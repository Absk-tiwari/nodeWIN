{"version":3,"file":"static/js/408.9cc58a31.chunk.js","mappings":"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","sources":["components/config/CategoryAndTax.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom'\r\nimport { Modal, ModalFooter, ModalHeader, Form, ModalBody, Row, Container, FormGroup, Label, Input } from 'reactstrap'\r\nimport { commonApiSlice, useGetProductCategoriesQuery, useGetTaxesQuery, useToggleCategoryMutation } from '../../features/centerSlice';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction CategoryAndTax() {\r\n    const {type} = useParams()\r\n    const dispatch = useDispatch();\r\n    \r\n    const { data:original, isSuccess, refetch } = useGetProductCategoriesQuery();\r\n    const { data:dbTaxes, isSuccess:taxLoaded, refetch: refetchTax } = useGetTaxesQuery()\r\n    const [ toggleCategory ] = useToggleCategoryMutation();\r\n    const [categories, setCategories] = useState([]);\r\n    const [editing, setEditing] = useState(false);\r\n    const [editingTax, setTaxEditing] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const [taxes, setTaxes] = useState([]);\r\n\r\n    const [catFields, setCatField] = useState({})\r\n\r\n    const [justifyActive, setJustifyActive] = useState(type);\r\n    const handleJustifyClick = value => {\r\n        if (value === justifyActive) {\r\n            return;\r\n        } \r\n        setJustifyActive(value);\r\n    };\r\n    const [open, setModal] = useState(false);\r\n\r\n    const changeTax = e => {\r\n        const {index} = e.target.dataset;\r\n        setTaxes(\r\n            taxes.map( (t, i)=> \r\n                i=== parseInt(index) ? {...t, [e.target.name]: e.target.value}: t\r\n            )\r\n        ) \r\n    }\r\n\r\n    const editTax = (tID) => setTaxEditing(tID)\r\n\r\n    const toggleModal = () => setModal(!open)\r\n    const catChange = (e) => setCatField({ ...catFields, [e.target.name]:e.target.value })\r\n\r\n    const initTax = () => {\r\n        setTaxes([...taxes, {name:'', amount:'', status:true}]);\r\n        if(containerRef.current) {\r\n            // containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n            window.scrollTo(0, document.body.scrollHeight);\r\n        }\r\n    }\r\n\r\n    const initCategory = () => {\r\n        setCategories([...categories, { name:'', color:'', status: true }]); \r\n        if(containerRef.current) {\r\n            // containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n            window.scrollTo(0, document.body.scrollHeight);\r\n        } \r\n    }\r\n\r\n    const createCategory = e => {\r\n \r\n        dispatch({type:\"LOADING\"});\r\n        const payload = categories[categories.length-1]; // the last one is the item to be saved\r\n        axios.post(`category/create`, payload ).then(({data})=> {\r\n            if(data.status) {\r\n                toast.success(`Category added successfully!`);\r\n                refetch();\r\n            }\r\n        }).catch(()=>{})\r\n        .finally(()=> dispatch({type:\"STOP_LOADING\"}));\r\n\r\n    }\r\n\r\n    const deleteCategory = (id,event) => {\r\n        const {index} = event.target.dataset\r\n        if(!id) {\r\n            return setCategories(categories.filter( (cat, ind)=> ind !== parseInt(index)))\r\n        }\r\n        if(!window.confirm('Are you sure? Products associated with this category will also be deleted!')) {\r\n            return \r\n        }\r\n        dispatch({ type:\"LOADING\" });\r\n        axios.get(`category/remove/${id}`).then(({data})=> {\r\n            \r\n            if(data.status) {\r\n                setCategories(categories.filter( (cat, ind)=> ind !== parseInt(index)))\r\n                toast.success(\"Category removed!\");\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getPosProducts', undefined, draft => draft.products.filter(pr => pr.category_id !== parseInt(id)))\r\n                )\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getProducts', undefined, cache => cache.products.filter( pr=> pr.catName !== categories[index].name ))\r\n                )\r\n            } else {\r\n                toast.error(\"Couldn't remove category!\");\r\n            }\r\n        }).catch(()=> null )\r\n        .finally(()=> dispatch({ type:\"STOP_LOADING\" }))\r\n    }\r\n\r\n    const createTax = e => {\r\n \r\n        dispatch({type:\"LOADING\"});\r\n        const tax = taxes[taxes.length-1];\r\n        axios.post(`tax/create`, tax ).then(({data})=> {\r\n            if(data.status) {\r\n                toast.success(\"Tax successfully added!\");\r\n                refetchTax()\r\n            } else {\r\n                toast.error(\"Something went wrong!\");\r\n            }\r\n        }).catch(()=> toast.error(\"Something went wrong!\"))\r\n        .finally(()=> dispatch({type:\"STOP_LOADING\"}));\r\n\r\n    }\r\n\r\n    const deleteTax = (id,event) => {\r\n        const {index} = event.target.dataset\r\n        if(!id) {\r\n            return setTaxes(taxes.filter( (cat, ind)=> ind !== parseInt(index)))\r\n        }\r\n        if(!window.confirm('Are you sure?')) {\r\n            return \r\n        }\r\n        dispatch({ type:\"LOADING\" });\r\n        axios.get(`tax/remove/${id}`).then(({data})=> {\r\n            if(data.status) {\r\n                setTaxes(taxes.filter( (cat, ind)=> ind !== parseInt(index)))\r\n                toast.success(\"Tax removed!\");\r\n            } else {\r\n                toast.error(\"Couldn't remove tax!\");\r\n            }\r\n            dispatch(\r\n                commonApiSlice.util.updateQueryData('getTaxes', undefined, cache => cache.taxes.filter( t => t.id !== parseInt(id)))\r\n            )\r\n        }).catch(()=> null )\r\n        .finally(()=> dispatch({ type:\"STOP_LOADING\" }))\r\n    }\r\n\r\n    const edit = (id) => setEditing(id)\r\n\r\n    const save = id => {\r\n        const cat = categories.find( ite => ite.id === id);\r\n        axios.post('category/update', cat).then(({data})=> {\r\n            if(data.status) {\r\n                toast.success(data.message)\r\n                refetch()\r\n            }\r\n        }).catch().finally()\r\n    }\r\n\r\n    const saveTax = async id => {\r\n        const tax = taxes.find( t => t.id === id );\r\n        const {data} = await axios.post(`/tax/update`, tax);\r\n        if(data.status) {\r\n            refetchTax();\r\n            toast.success(\"Tax successfully updated!\");\r\n            setTaxEditing(false)\r\n        }\r\n    } \r\n\r\n    const updateCategory = e => {\r\n        let {index} = e.target.dataset; \r\n        setCategories(\r\n            categories.map((item, i) =>\r\n                i === parseInt(index) ? { ...item, [e.target.name]: e.target.value } : item\r\n            )\r\n        ) \r\n    }\r\n\r\n    const setCategory = async e => {\r\n        let {id, status} = e.target.dataset;\r\n        let stat = parseInt(status) ? 0 : 1; \r\n        e.preventDefault();\r\n        try {\r\n            let res = await toggleCategory({id, status:stat}).unwrap()\r\n            if (res.status) e.target.checked = stat\r\n        } catch (error) {\r\n            console.log(\"Exception on first sight:- \"+ error.message )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isSuccess) {\r\n            setCategories(original.categories);\r\n        }\r\n        return () => null\r\n    },[ isSuccess,original ])\r\n\r\n    useEffect(()=>{\r\n        if(taxLoaded) {\r\n            setTaxes(dbTaxes.taxes)\r\n        }\r\n        return ()=> null\r\n    },[taxLoaded, dbTaxes])\r\n\r\n    const CategoryModal = () => {\r\n        return <Modal isOpen={open} toggle={toggleModal} > \r\n            <Form onSubmit={createCategory} >\r\n                <ModalHeader toggle={toggleModal}> Update Product </ModalHeader>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <Row>\r\n                                <FormGroup>\r\n                                    <Label> Name </Label>\r\n                                    <Input\r\n                                        type={'text'}\r\n                                        name='name'\r\n                                        onChange={catChange}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Row>\r\n                            <Row>\r\n                                <FormGroup>\r\n                                    <Label> Revised Photo </Label>\r\n                                    <Input \r\n                                        name='color'\r\n                                        type='color'\r\n                                        onChange={catChange}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Row>\r\n                            <Row>\r\n                                <FormGroup>\r\n                                    <Label> Status </Label>\r\n                                    <Input \r\n                                        name='status'\r\n                                        type='checkbox'\r\n                                        onChange={catChange}\r\n                                        defaultChecked={true}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Row>\r\n                        </Container>\r\n                    </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" type=\"button\" onClick={toggleModal}>\r\n                        Close\r\n                    </button>\r\n                </ModalFooter> \r\n            </Form>\r\n        </Modal>\r\n    }\r\n    \r\n    return (\r\n        <>\r\n           <div className={`content-wrapper`} >\r\n                <div className=\"d-grid\" style={{overflowY:'auto'}} ref={containerRef}>\r\n                    <div className=\"d-flex position-relative\">\r\n                        <button className=\"btn tablink\" data-btn=\"category\" onClick={() => handleJustifyClick('categories')} data-active={justifyActive==='categories'}> Categories </button>\r\n                        <button className=\"btn tablink\" data-btn=\"tax\" onClick={() => handleJustifyClick('taxes')}  data-active={justifyActive==='taxes'} \r\n                        style={{borderTopLeftRadius:'0px',borderBottomLeftRadius:'0px'}}>\r\n                            Taxes \r\n                        </button>\r\n                    </div>\r\n                    <div id=\"category\" className={`tabcontent ${ justifyActive==='categories' ?'d-block': 'd-none' }`}  ref={containerRef}>\r\n                        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"table-responsive w-100 categoryTable\">\r\n                                        <table className='table table-bordered w-100'>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.No</th>\r\n                                                    <th>Name</th>\r\n                                                    <th>Color</th> \r\n                                                    <th>Status</th>\r\n                                                    <th>\r\n                                                        Action\r\n                                                        <span className={`fa fa-plus btn-sm btn-rounded btn btn-success ms-4`} title=\"Create\" onClick={initCategory}> New </span>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            { categories.map( (cat,i) => (\r\n                                                <tr key={i}>\r\n                                                    <td> {1 + i} </td>        \r\n                                                    <td> <Input name='name' type='text' data-index={i} onChange={updateCategory} disabled={ cat.id && editing!==cat.id } defaultValue={cat.name}/> </td>\r\n                                                    <td> <Input type='color' name='color' data-index={i} onChange={updateCategory} disabled={ cat.id && editing!==cat.id } defaultValue={cat.color} /> </td>        \r\n                                                    <td>\r\n                                                        <input type={`checkbox`} data-id={cat.id} data-status={cat.status} onChange={setCategory} id={`btn`+cat.id} name={'status'} defaultChecked={cat.status} className='status'/>\r\n                                                        <label htmlFor={`btn`+cat.id}/>\r\n                                                        <div className='plate'/>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        { cat.id ? \r\n                                                        (<>\r\n                                                        <button className={`btn btn-sm btn-primary ${editing===cat.id && 'btn-success'}`} onClick={()=> editing !== cat.id ? edit(cat.id): save(cat.id)}>\r\n                                                            { editing && editing === cat.id ? 'Save':'Edit'}\r\n                                                        </button>\r\n                                                        <button data-index={i} className={`btn btn-sm btn-danger ms-3 delete`} onClick={e=> deleteCategory(cat.id, e)}>\r\n                                                            Delete\r\n                                                        </button>\r\n                                                        </>):\r\n                                                        <>\r\n                                                        <button className='btn btn-sm btn-success' onClick={createCategory}>\r\n                                                            Add\r\n                                                        </button>\r\n                                                        <button data-index={i} className={`btn btn-sm btn-light ms-3 delete`} onClick={e=> deleteCategory(cat.id, e)}>\r\n                                                            Cancel\r\n                                                        </button>\r\n                                                        </>\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )) }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"tax\" className={`tabcontent ${ justifyActive ==='taxes' ? 'd-block': 'd-none' }`}>\r\n                        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"table-responsive w-100 taxTable\">\r\n                                        <table className={`table table-bordered w-100`}>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.No</th>\r\n                                                    <th>Name</th>\r\n                                                    <th>Amount</th> \r\n                                                    <th>Status</th>\r\n                                                    <th>\r\n                                                        Action\r\n                                                        <span className={`mdi mdi-plus btn-sm btn-rounded btn btn-success ms-4`} \r\n                                                        data-toggle=\"modal\" data-target=\".addTaxes\" title=\"Create\" onClick={initTax}> New </span>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {taxes.map( (tax,i) => {\r\n                                                    return <tr key={i}>\r\n                                                        <td>{1+i}</td>\r\n                                                        <td>\r\n                                                            <Input data-index={i} \r\n                                                                name='name' \r\n                                                                defaultValue={tax.name} \r\n                                                                onChange={changeTax} \r\n                                                                disabled={ tax.id && editingTax!==tax.id }\r\n                                                                className='input'\r\n                                                            />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <Input \r\n                                                                data-index={i} \r\n                                                                name='amount' \r\n                                                                defaultValue={tax.amount} \r\n                                                                onChange={changeTax}\r\n                                                                disabled={ tax.id && editingTax!==tax.id }\r\n                                                                className='input'\r\n                                                            />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <input type={`checkbox`} style={{display:'none'}} id={`btn-tax`+tax.id} name={'status'} defaultChecked={tax.status} className='status'/>\r\n                                                            <label htmlFor={`btn-tax`+tax.id} />\r\n                                                            <div className='plate' />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {tax.id ? (\r\n                                                            <>\r\n                                                                <button className={`btn btn-sm btn-primary ${editingTax === tax.id && 'btn-success'}`} onClick={()=> editingTax !== tax.id ? editTax(tax.id): saveTax(tax.id)}> \r\n                                                                    { editingTax && editingTax === tax.id ? 'Save':'Edit'}    \r\n                                                                </button>\r\n                                                                <button className='btn btn-sm btn-rounded btn-danger ms-3' onClick={e => deleteTax(tax.id, e)} >Delete</button>\r\n                                                            </>\r\n                                                            ):(\r\n                                                            <>\r\n                                                                <button className='btn btn-sm btn-rounded btn-success' onClick={createTax}> Add </button>\r\n                                                                <button className='btn btn-sm btn-rounded btn-light ms-3' onClick={e => deleteTax(tax.id, e)} >Cancel</button>\r\n                                                            </>\r\n                                                            )}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                })}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n           </div>\r\n            <CategoryModal/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryAndTax"],"names":["type","useParams","dispatch","useDispatch","data","original","isSuccess","refetch","useGetProductCategoriesQuery","dbTaxes","taxLoaded","refetchTax","useGetTaxesQuery","toggleCategory","useToggleCategoryMutation","categories","setCategories","useState","editing","setEditing","editingTax","setTaxEditing","containerRef","useRef","taxes","setTaxes","catFields","setCatField","justifyActive","setJustifyActive","handleJustifyClick","value","open","setModal","changeTax","e","index","target","dataset","map","t","i","parseInt","_objectSpread","name","toggleModal","catChange","createCategory","payload","length","axios","post","then","_ref","status","toast","success","catch","finally","deleteCategory","id","event","filter","cat","ind","window","confirm","get","concat","_ref2","commonApiSlice","util","updateQueryData","undefined","draft","products","pr","category_id","cache","catName","error","createTax","tax","_ref3","deleteTax","_ref4","updateCategory","item","setCategory","async","stat","preventDefault","unwrap","checked","console","log","message","useEffect","CategoryModal","_jsx","Modal","isOpen","toggle","children","_jsxs","Form","onSubmit","ModalHeader","ModalBody","Container","Row","FormGroup","Label","Input","onChange","defaultChecked","ModalFooter","className","onClick","_Fragment","style","overflowY","ref","borderTopLeftRadius","borderBottomLeftRadius","title","initCategory","color","current","scrollTo","document","body","scrollHeight","disabled","defaultValue","htmlFor","find","ite","_ref5","save","initTax","amount","display","tID","saveTax"],"sourceRoot":""}