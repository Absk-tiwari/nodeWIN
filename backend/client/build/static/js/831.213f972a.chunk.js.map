{"version":3,"file":"static/js/831.213f972a.chunk.js","mappings":"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","sources":["components/config/Notes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport uploader from '../../asset/images/uploader.png';\r\nimport toast from 'react-hot-toast';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\r\nimport { useGetNotesQuery } from '../../features/centerSlice';\r\n\r\n\r\nexport default function Notes() {\r\n    const [fields, setFields] = useState({})\r\n    const dispatch = useDispatch();\r\n\r\n    const {currency} = useSelector( state => state.auth )\r\n    const [notes, setNotes] = useState([]);\r\n    const [open, setModal] = useState(false);\r\n    const [image, setImage] = useState(null);\r\n    const {data, isSuccess} = useGetNotesQuery();\r\n\r\n    const toggleModal = () => setModal(!open)\r\n\r\n    const change = e => setFields({...fields, [e.target.name]:e.target.value})\r\n\r\n    const deleteNote = (id) => {\r\n\r\n        if(!window.confirm('Are you sure?')) return;\r\n\r\n        dispatch({type:\"LOADING\"});\r\n\r\n        axios.get(`/notes/remove/${id}`).then(({data})=> {\r\n            console.log(data)\r\n            setNotes(notes.filter(item => item.id!== id));\r\n        }).catch(err => {})\r\n        .finally(()=> dispatch({type:\"STOP_LOADING\"}));\r\n        \r\n    }\r\n\r\n    const createNote = e => {\r\n\r\n        e.preventDefault();\r\n        if(!image) return toast.error(\"Choose an image!\");\r\n        dispatch({ type:\"LOADING\" });\r\n        let fd = new FormData();\r\n        fd.append('image', image);\r\n        fd.append('amount', fields.amount);\r\n\r\n        axios.post(`/notes/create`, fd , {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                \"Content-Type\" : \"multipart/form-data\",\r\n                'pos-token' : localStorage.getItem('pos-token')\r\n            }\r\n        }).then(({data}) => {\r\n            setNotes([...notes, data.note])\r\n        }).catch( er => toast.error(er.response?.responseText?? 'Something went wrong!') )\r\n        .finally(() => dispatch({ type: \"STOP_LOADING\" }) )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(isSuccess) {\r\n            setNotes(data.notes)\r\n        }\r\n    },[data, isSuccess])\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"d-grid mt-3\" >\r\n                    <div id=\"category\">\r\n                        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <button className=\"btn btn-sm btn-success\" onClick={toggleModal}> Add New</button>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"table-responsive w-100 categoryTable\">\r\n                                        <table className='table table-bordered' style={{borderRadius:10}}>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.No</th>\r\n                                                    <th>Amount</th>\r\n                                                    <th>Image</th>\r\n                                                    <th>Status</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {notes.map( item => (\r\n                                                    <tr key={item.id}>\r\n                                                        <td>{item.id}</td>\r\n                                                        <td> {currency} {item.amount} </td>\r\n                                                        <td><img src={process.env.REACT_APP_BACKEND_URI+'images/'+item.image} style={{ borderRadius:0,width:60 }} alt='' /></td>\r\n                                                        <td>\r\n                                                            <input type={`checkbox`} style={{display:'none'}} id={`btn`+item.id} name={'status'} defaultChecked={item.status} className='status'/>\r\n                                                            <label htmlFor={`btn`+item.id} />\r\n                                                            <div className='plate'/>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <button className={`btn btn-danger btn-sm`} onClick={deleteNote} >\r\n                                                                Delete\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Modal isOpen={open} toggle={toggleModal} > \r\n                <Form onSubmit={createNote} >\r\n                    <ModalHeader > Update Product </ModalHeader>\r\n                        <ModalBody>\r\n                            <Container>\r\n                                <Row>\r\n                                    <FormGroup>\r\n                                        <Label> Amount </Label>\r\n                                        <Input\r\n                                            type={'text'}\r\n                                            name='amount'\r\n                                            pattern=\"^\\d+(\\.\\d+)?$\"\r\n                                            onChange={change}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Row>\r\n                                <Row>\r\n                                    <FormGroup>\r\n                                        <Label> Image </Label>\r\n                                        <Input \r\n                                            type='file'\r\n                                            onChange={e => setImage(e.target.files[0])}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Row> \r\n                            </Container>\r\n                        </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-light btn-rounded\" type=\"button\" onClick={toggleModal}>\r\n                            Close\r\n                        </button>\r\n                        <button className=\"btn btn-success btn-rounded\" type=\"submit\" >\r\n                            Upload\r\n                        </button>\r\n                    </ModalFooter> \r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n"],"names":["Notes","fields","setFields","useState","dispatch","useDispatch","currency","useSelector","state","auth","notes","setNotes","open","setModal","image","setImage","data","isSuccess","useGetNotesQuery","toggleModal","deleteNote","id","window","confirm","type","axios","get","concat","then","_ref","console","log","filter","item","catch","err","finally","useEffect","_jsxs","_Fragment","children","_jsx","className","onClick","style","borderRadius","map","amount","src","process","width","alt","display","name","defaultChecked","status","htmlFor","Modal","isOpen","toggle","Form","onSubmit","e","preventDefault","toast","error","fd","FormData","append","post","headers","localStorage","getItem","_ref2","note","er","_er$response$response","_er$response","response","responseText","ModalHeader","ModalBody","Container","Row","FormGroup","Label","Input","pattern","onChange","_objectSpread","target","value","files","ModalFooter"],"sourceRoot":""}