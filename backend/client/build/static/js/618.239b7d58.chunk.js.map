{"version":3,"file":"static/js/618.239b7d58.chunk.js","mappings":"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","sources":["components/inventory/Inventory.js","components/pos/SearchBoard.js","helpers/utils.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Keyboard from \"react-simple-keyboard\";\r\nimport { useSelector } from 'react-redux'; \r\nimport { useGetProductsQuery, useTogglePOSMutation, useUpdateStockMutation } from '../../features/centerSlice';\r\nimport {chunk} from '../../helpers/utils';\r\nimport $ from 'jquery';\r\nimport labelImg from '../../asset/images/default.png';\r\nimport toast from 'react-hot-toast';\r\nimport { useSearch } from '../../contexts/SearchContext';\r\nimport SearchBoard from '../pos/SearchBoard';\r\n\r\nfunction Inventory() {\r\n\r\n    const tableRef = useRef(); \r\n    const listtableRef = useRef();\r\n    const keyboardRef = useRef();\r\n\r\n    const [ view, setView] = useState('list');\r\n    const [ hover , setHover ]= useState(true);\r\n    const [ preset, setPreset ] = useState(0)\r\n    const { searchQuery, setSearchQuery, focused, setFocused } = useSearch()\r\n    const [ stockAmount , setStockAmount ] = useState(0);\r\n\r\n    const [position, setPosition] = useState({ x: window.screen.availWidth / 3, y: window.screen.availHeight / 2 });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n    const handleMouseDown = (e) => {\r\n        setDragging(true);\r\n        setOffset({\r\n          x: e.clientX - position.x,\r\n          y: e.clientY - position.y,\r\n        });\r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!dragging) return;\r\n        setPosition({\r\n            x: e.clientX - offset.x,\r\n            y: e.clientY - offset.y,\r\n        });\r\n    }\r\n    const handleMouseUp = () => setDragging(false);\r\n\r\n    const [ rowData, setRowData] = useState([]);\r\n    const { currency } = useSelector( state=> state.auth );\r\n    const { data, isSuccess:gotProducts } = useGetProductsQuery();\r\n    const [ updateStock ] = useUpdateStockMutation();\r\n    const [ togglePOS ] = useTogglePOSMutation();\r\n\r\n    const handleImgError = e => {\r\n        e.target.src = labelImg\r\n    }\r\n    const [ hovered, setHovered ] = useState('');\r\n    const [ stock, setStock] = useState({id:'',stock:0});\r\n    \r\n    const [ gridData, setGrid ] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        if(gotProducts) { \r\n            setRowData(data.products)\r\n            setGrid(chunk(data.products.map( ({id, name, image, price, quantity, pos, ...rest }) => ({id, name, image:`http://localhost:5100/images/${image}`, price, quantity, pos })), 3))\r\n        } \r\n        return () => null\r\n    },[ gotProducts, data ])\r\n\r\n    useEffect(()=>{\r\n        $('.dt-input').val(searchQuery).trigger('keyup')\r\n        return () => setSearchQuery('')\r\n    },[searchQuery])\r\n\r\n    useEffect(()=>{\r\n        keyboardRef.current?.setInput(preset)\r\n    },[preset])\r\n\r\n    useEffect(() => {\r\n        $(tableRef.current).DataTable({\r\n            paging: true,\r\n            searching: true,\r\n            info: true,\r\n            ordering: true,\r\n            processing:true,\r\n            lengthMenu:[ 10,25,50]\r\n        });\r\n        $.fn.DataTable.ext.errMode = 'none';\r\n        return () => null\r\n      }, [view, rowData, gotProducts]);\r\n\r\n    useEffect(() => {\r\n        if(rowData.length) {\r\n            $(listtableRef.current).DataTable({\r\n                paging: true,\r\n                searching: true,\r\n                info: true,\r\n                ordering: true,\r\n                lengthMenu:[ 10,25,50 ]\r\n            });\r\n        }\r\n        $('.dt-input').on('click', function(){\r\n            setFocused(true)\r\n        })\r\n        $.fn.DataTable.ext.errMode = 'none';\r\n        return ()=> $(listtableRef.current).DataTable().destroy()\r\n        \r\n    }, [view, rowData]);\r\n\r\n    const handleView = view => {\r\n        if(view==='grid') {\r\n            $(listtableRef.current).DataTable().destroy();\r\n        } else {\r\n            $(tableRef.current).DataTable().destroy();\r\n        }\r\n        setView(view)\r\n    }\r\n\r\n    const handleStock = e => {\r\n        let { id }= e.target.dataset\r\n        setStock({id, stock: e.target.value})\r\n    }\r\n\r\n    const manageStock = async() => {\r\n\r\n        if(!stock.stock) return setHover('');\r\n        const product = rowData.find( item => item.id === parseInt(stock.id));\r\n        try {\r\n            await updateStock({ id: stock.id, updated: {...product, quantity: stock.stock } }).unwrap()\r\n            setHover(true);\r\n            setStockAmount(0);\r\n        } catch (error) {\r\n            toast.error(\"Something went wrong!\");  \r\n        }\r\n    }\r\n\r\n    const showInPOS = async (e) => {\r\n        let {id, status} = e.target.dataset;\r\n        let stat = parseInt(status) ? 0 : 1; \r\n        e.preventDefault();\r\n        try {\r\n            let res = await togglePOS({id, status:stat}).unwrap()\r\n            if (res.status) e.target.checked = stat\r\n        } catch (error) {\r\n            console.log(\"Exception on first sight:- \"+ error.message )\r\n        }\r\n    }\r\n\r\n    // handling resize \r\n    const [ scale, setScale ] = useState(localStorage.getItem('_keyboard_scale')??1);\r\n    const decrease = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.max(scale - 0.1, 0.5))\r\n        setScale(prev => Math.max(prev - 0.1, 0.5))\r\n    }\r\n    const increase = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.min(JSON.parse(scale) + 0.1, 2))\r\n        setScale(prev => Math.min(JSON.parse(prev) + 0.1, 2))\r\n    }\r\n    return (\r\n        <>\r\n            <div className={\"row w-100 h-100 mt-4\"}>\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <form id=\"filter-form\">\r\n                            <div className=\"card-header\">\r\n                                    <div style={{display:'flex',alignItems:'end',justifyContent:'space-between'}}>\r\n                                    <div/> \r\n                                    <div className=\"d-flex flex-end\" style={{width:'140px',justifyContent:'space-around',alignItems:'center'}}>\r\n                                        <button type=\"button\" className={`btn btn-outline-light btn-sm`} style={{ backgroundColor:view==='grid' && '#55aaad', color: view=== 'grid' && '#fff' }} onClick={()=>handleView('grid')} > Grid </button>\r\n                                        <button type=\"button\" className={`btn btn-outline-light btn-sm`} style={{ backgroundColor:view==='list' && '#55aaad',color: view=== 'list' &&'#fff' }} onClick={()=>handleView('list')} > List </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"card-body\" style={{ height:'200%',width:'100%' }}>\r\n                            {view==='list' && <table className='table' ref={listtableRef}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Price</th>\r\n                                        <th>Barcode</th>\r\n                                        <th>Weight</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>POS status</th>\r\n                                        <th>Image</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {rowData.map( row => <tr key={row.id}> \r\n                                        <td onMouseOver={()=>setHovered('')}>{row.name}</td>\r\n                                        <td onMouseOver={()=>setHovered('')}>{currency +' '+row.price}</td>\r\n                                        <td onMouseOver={()=>setHovered('')}>{row.code}</td>\r\n                                        <td onMouseOver={()=>setHovered('')}>{row.weight}</td>\r\n                                        <td className='position-relative' onMouseOver={()=>setHovered('')}>\r\n                                            <input className='input' \r\n                                                data-id={row.id} \r\n                                                onChange={handleStock} \r\n                                                readOnly={hover!==row.id} \r\n                                                value={hover===row.id? stockAmount: row.quantity} \r\n                                            />\r\n                                            <span onClick={hover!==row.id ? ()=>{\r\n                                                setPreset(row.quantity);\r\n                                                setHover(row.id);\r\n                                                setStockAmount(row.quantity)\r\n                                                setStock({...stock,id:row.id})\r\n                                            }: ()=> manageStock()} className='position-absolute btn btn-sm btn-rounded btn-success' style={{right:60}}>{hover===row.id ? 'Save': 'Edit'}</span>\r\n                                        </td>\r\n                                        <td onMouseOver={()=>setHovered('')}>\r\n                                            <input type='checkbox' name='status' onClick={showInPOS} data-status={row.pos} data-id={row.id} className='pos' id={`tabular-${row.id}`} defaultChecked={row.pos}/>\r\n                                            <label htmlFor={`tabular-${row.id}`} />\r\n                                            <div className='plate'></div>\r\n                                        </td>\r\n                                        <td className='position-relative img'>\r\n                                            <img \r\n                                                className='img-fluid img-thumbnail'\r\n                                                src={`http://localhost:5100/images/${row.image}`} \r\n                                                onMouseEnter={()=>setHovered(row.id)}\r\n                                                onError={handleImgError}\r\n                                                alt=''\r\n                                            />\r\n                                            {\r\n                                                hovered === row.id && <div className='image-container' style={{backgroundImage:`url(http://localhost:5100/images/${row.image})`, backgroundSize:'cover', backgroundRepeat:'no-repeat'}}></div>\r\n                                            }\r\n                                        </td>\r\n                                    </tr>)}\r\n                                </tbody>\r\n                            </table>}\r\n                            {view === 'grid' && (\r\n                                <table ref={tableRef} className='table grid-view'>\r\n                                    <thead>\r\n                                        <tr className='d-none'>\r\n                                            <th>Col</th>\r\n                                            <th>Col</th>\r\n                                            <th>Col</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {gridData.map( (chunk,i) => <tr key={i}>\r\n                                            { chunk.map( row => (<td key={row.id} colSpan={ chunk.length < 3 ? chunk.length: 0 }> <div className={`card-body d-flex grid-view`} >\r\n                                                <div className={`col-9 d-block`}>\r\n                                                    <div className={`row`}>\r\n                                                        <strong className=\"wrapped-text\">\r\n                                                            {row.name}\r\n                                                            {row.name.length > 40 && <span className={`tooltiptext`}>{row.name}</span>}\r\n                                                        </strong>\r\n                                                        <div className=\"row\">\r\n                                                            <b>Quantity: {row.quantity}</b>\r\n                                                            <input className=\"input d-none\" data-id={row.id} style={{width:80}} onClick={()=>setFocused(true)}/>\r\n                                                        </div>\r\n                                                        <div className=\"row d-flex\">\r\n                                                            <div className=\"align-self-center\">POS</div>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <input type=\"checkbox\" name=\"pos\" className='pos' data-id={row.id} data-status={row.pos} onClick={showInPOS} id={`id-${row.id}`} defaultChecked={row.pos} />\r\n                                                            <label htmlFor={`id-${row.id}`} />\r\n                                                            <div className=\"plate\"></div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-3 text-center\">\r\n                                                    <img src={row.image} onError={handleImgError} alt=''/>\r\n                                                </div>\r\n                                            </div></td>)) }    \r\n                                        </tr>)}\r\n                                    </tbody>\r\n                                </table>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {focused && <SearchBoard />}\r\n            {\r\n                typeof hover !== 'boolean' && <div className='mt-4 position-fixed w-50' style={{zIndex:9999, top:60 }}>\r\n                <div\r\n                    style={{\r\n                        overflow: \"hidden\",\r\n                        position: \"relative\",\r\n                    }}\r\n                    onMouseMove={handleMouseMove}\r\n                    onMouseUp={handleMouseUp}\r\n                    >\r\n                    <div\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            top: `${position.y}px`,\r\n                            left: `${position.x}px`,\r\n                            cursor: dragging ? \"grabbing\" : \"grab\",\r\n                            zIndex: 1000,\r\n                            width:700,\r\n                            resize:'both',\r\n                            overflow:'auto',\r\n                            transform: `scale(${scale})`, \r\n                            transformOrigin: \"top center\"\r\n                        }}\r\n                    >\r\n                        <div\r\n                        onMouseDown={handleMouseDown}\r\n                            style={{\r\n                                background: \"#444\",\r\n                                color: \"#fff\",\r\n                                padding: \"5px 10px\",\r\n                                cursor: \"grab\",\r\n                                textAlign: \"center\",\r\n                                borderRadius: \"8px 8px 0 0\",\r\n                            }}\r\n                        >\r\n                            Hold To Drag \r\n                        </div>\r\n                            <Keyboard\r\n                                keyboardRef={(r) => (keyboardRef.current = r)}\r\n                                onChange={e => {\r\n                                    setStockAmount(e)\r\n                                    setStock({...stock, stock:e})\r\n                                }}\r\n                                layout={{\r\n                                    default: [\r\n                                    \"1 2 3 4 5 6 7 8 9 0 {bksp}\",\r\n                                ]}}\r\n                            />\r\n                        <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                            <button className='btn btn-light btn-rounded w-50' onClick={()=>{setHover(true);}} style={{border:'1px solid gray'}}>CANCEL</button>\r\n                            <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={decrease}>-</button>\r\n                            <span> Size: {Math.round(scale * 100)}% </span>\r\n                            <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={increase}>+</button>\r\n                            <button onClick={()=>manageStock()} className='btn w-50 btn-success btn-rounded' >SAVE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Inventory","import React, { useRef, useState } from 'react';\r\nimport Keyboard from \"react-simple-keyboard\";\r\nimport \"react-simple-keyboard/build/css/index.css\";\r\nimport { useSearch } from '../../contexts/SearchContext';\r\n\r\nexport default function SearchBoard({pos=window.screen.availHeight / 3}) {\r\n\r\n    const {setSearchQuery, focused, setFocused} = useSearch();\r\n    const [position, setPosition] = useState({x: window.screen.availWidth / 3, y: pos });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [offset, setOffset] = useState({  x: 0, y: 0  });\r\n    const onChange = input => setSearchQuery(input)\r\n    const keyboardRef = useRef(null);\r\n    const handleMouseDown = (e) => {\r\n        setDragging(true);\r\n        setOffset({\r\n          x: e.clientX - position.x,\r\n          y: e.clientY - position.y,\r\n        });\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!dragging) return;\r\n        setPosition({\r\n            x: e.clientX - offset.x,\r\n            y: e.clientY - offset.y,\r\n        });\r\n    }\r\n    const handleMouseUp = () => setDragging(false);\r\n    // handling size \r\n    const [scale, setScale] = useState(localStorage.getItem('_keyboard_scale')??1); // Default scale (1 = 100%)\r\n\r\n    const decrease = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.max(scale - 0.1, 0.5))\r\n        setScale(prev => Math.max(prev - 0.1, 0.5))\r\n    }\r\n    const increase = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.min(JSON.parse(scale) + 0.1, 2))\r\n        setScale(prev => Math.min(JSON.parse(prev) + 0.1, 2))\r\n    }\r\n\r\n    return (\r\n        <div className='mt-4 position-fixed w-50 v-keyboard' style={{zIndex:9999, top:60 }}>\r\n            <div\r\n                style={{\r\n                    overflow: \"hidden\",\r\n                    position: \"relative\",\r\n                }}\r\n                onMouseMove={handleMouseMove}\r\n                onMouseUp={handleMouseUp}\r\n            >\r\n                <div\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: `${position.y}px`,\r\n                        left: `${position.x}px`,\r\n                        cursor: dragging ? \"grabbing\" : \"grab\",\r\n                        zIndex: 1000,\r\n                        width:700,\r\n                        resize:'both',\r\n                        overflow:'auto',\r\n                        transform: `scale(${scale})`, transformOrigin: \"top center\"\r\n                    }}\r\n                >\r\n                    <div\r\n                    onMouseDown={handleMouseDown}\r\n                        style={{\r\n                            background: \"#444\",\r\n                            color: \"#fff\",\r\n                            padding: 10,\r\n                            cursor: \"grab\",\r\n                            textAlign: \"center\",\r\n                            borderRadius: \"8px 8px 0 0\",\r\n                        }}\r\n                    >\r\n                        Hold To Drag \r\n                    </div>\r\n                        <Keyboard\r\n                            onChange={onChange}\r\n                            keyboardRef={(r) => (keyboardRef.current = r)}\r\n                            layout={{\r\n                                default: [\r\n                                \"1 2 3 4 5 6 7 8 9 0\",\r\n                                \"q w e r t y u i o p\",\r\n                                \"a s d f g h j k l\",\r\n                                \"z x c v b n m {bksp}\",\r\n                                \"{space}\"\r\n                            ]}}\r\n                        />\r\n                    <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                        <button className='btn btn-light btn-rounded' \r\n                            onClick={()=>{setSearchQuery('');keyboardRef.current.clearInput()}} \r\n                            style={{border:'1px solid gray'}}>CLEAR</button>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={decrease}>-</button>\r\n                        <span className='place-content-center'> {Math.round(scale * 100)}% </span>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={increase}>+</button>\r\n                        <button onClick={()=>setFocused(!focused)} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import $ from 'jquery'\r\nimport toast from 'react-hot-toast';\r\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport const validate = (fields,exceptions=[]) => {\r\n    let result={}\r\n    var shouldGo=true;\r\n    if(exceptions.length)\r\n    {\r\n        exceptions.forEach( item => {\r\n            delete fields[item]\r\n        })\r\n    }\r\n    Object.keys(fields).forEach(f =>\r\n    {\r\n        let shout = '';\r\n        let invalid = false;\r\n        let tInputs = [$(`input[name=${f}]`), $(`select[name=${f}]`), $(`textarea[name=${f}]`), $(`.${f}`)]\r\n        if(fields[f]==null || fields[f].length===0)\r\n        {\r\n            result[f]=`Required!`;\r\n            shouldGo=false;\r\n            invalid = true;\r\n        }\r\n        tInputs.forEach( input => {\r\n\r\n            let minLength = $(input).attr('type')!== 'date' ? $(input).attr('min'): 0;\r\n            let maxLength = $(input).attr('max');\r\n            let type = $(input).attr('cast');\r\n            let isDate = $(input).attr('type')==='date' && $(input).attr('req');\r\n            if($(input).val()?.length && (minLength || maxLength))\r\n            {\r\n                if($(input).val().length < parseInt(minLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should be of at least ${minLength} characters!`\r\n                    result[f] = shout;\r\n                }\r\n                if($(input).val().length > parseInt(maxLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should not be greater than ${maxLength} characters!`;\r\n                    result[f] = shout;\r\n                }\r\n            }\r\n            if(type)\r\n            { \r\n                if(input.val() && type === 'num')\r\n                {\r\n                    if(parseInt($(input).val().length )!== $(input).val().length) {\r\n                        shout= `Should be in numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n                if( $(input).val() && type=== 'str' )\r\n                {\r\n                    if( /^([^0-9]*)$/.test($(input).val())===false )\r\n                    {\r\n                        shout= `Should not contain numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n            }\r\n            if(isDate)\r\n            {\r\n                if(!isValidDate($(input).val(),18))\r\n                {\r\n                    invalid = true\r\n                    shout = 'Invalid date';\r\n                    result[f] = shout;\r\n                } else {\r\n                    shout = '';\r\n                }\r\n                // return\r\n            }\r\n            if(shout)   \r\n            {\r\n                if($(input).parents('.col-md-12, .col').find('small.text-danger').length)\r\n                {\r\n                    $(input).parents('.col-md-12, .col').find('small.text-danger').text(shout)\r\n                } else {\r\n                    $(input).parents('.col-md-12, .col').append('<small class=\"text-danger\">'+shout+'</small>')\r\n                }\r\n            } else {\r\n                $(input).parents('.col-md-12, .col').find('small.text-danger').remove()\r\n            }\r\n            if(invalid){\r\n                shouldGo = false;\r\n                $(input).addClass('placeholder-error')\r\n                .attr('placeholder',result[f]).css('border','1px solid red');\r\n            } else {\r\n                $(input).removeClass('placeholder-error').attr('placeholder',result[f]).css('border','');\r\n            }\r\n        })\r\n    })\r\n    return {result, shouldGo};\r\n}\r\n\r\nexport const getCurrentDate = (delimiter='-') => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year+delimiter+month+delimiter+day}`;\r\n}\r\n\r\nexport const formatDate = (date=null,format='Ymd') => {\r\n    const dateObj = date?new Date(date): new Date();\r\n    const year = dateObj.getFullYear();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(dateObj.getDate()).padStart(2, '0');\r\n    if(format[0]==='Y')\r\n    {\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n    if(format[0]==='d')\r\n    {\r\n        return `${day}-${month}-${year}`;\r\n    }\r\n}\r\n\r\nexport const getCurrentDay = () => {\r\n    return daysOfWeek[(new Date()).getDay()];\r\n}\r\n\r\nexport const getCurrentTime = () => {\r\n    const currentDate = new Date();\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nexport const toBase64 = blob => {\r\n\r\n}\r\n\r\nexport const dataURLtoFile = (dataurl, filename) => {\r\n    var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[arr.length - 1]), \r\n        n = bstr.length, \r\n        u8arr = new Uint8Array(n);\r\n    while(n--){\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\nexport const isValidDate = ( date, range ) => {\r\n    let today = getCurrentDate();\r\n    let year = today.split('-')[0];\r\n    let intended = new Date(today.replace(year, (parseInt(year)-range)));\r\n    return intended > new Date(date)\r\n}\r\n\r\nexport const capitalFirst = (string) => {\r\n    if (!string) return string; // Handle empty or null strings\r\n    if(string.includes(' ')){\r\n        let str= '';\r\n        string.split(' ').forEach( part => {\r\n           str+=' '+ part.charAt(0).toUpperCase() + part.slice(1); \r\n        })\r\n        return str;\r\n    }\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const getDocumentName = id => {\r\n\r\n    const documents = {\r\n        1 : 'VISIT PHOTO',\r\n        2 : 'AADHAAR CARD',\r\n        3 : 'VOTER CARD',\r\n        4 : 'GROUP PHOTO',\r\n        5 : 'CGT_FIRST',\r\n        6 : 'CGT_SECOND',\r\n        7 : 'CIBIL',\r\n        8 : 'SANCTION LETTER',\r\n        9 : 'KYC',\r\n        10 : 'BANK PASSBOOK',\r\n        11 : 'RELATION PROOF DOCUMENT',\r\n    }\r\n    return documents[id];\r\n    \r\n}\r\n\r\nexport const Warning = msg => {\r\n    return toast(msg,\r\n        {\r\n          icon: '⚠️',\r\n          style: {\r\n            borderRadius: '10px',\r\n            background: '#333',\r\n            color: '#fff',\r\n          },\r\n        }\r\n    );\r\n}\r\n\r\nexport const hexToRgb = (hex) => {\r\n    // Remove the '#' if present\r\n\r\n    if(!hex || typeof hex == 'object'){\r\n        return hex\r\n    }\r\n\r\n    hex = hex.replace(/^#/, '');\r\n    // Convert shorthand hex (e.g., #03F) to full form (e.g., #0033FF)\r\n    if (hex.length === 3) {\r\n        hex = hex.split('').map(h => h + h).join('');\r\n    }\r\n    // Convert hex to RGB\r\n    const r = parseInt(hex.slice(0, 2), 16);\r\n    const g = parseInt(hex.slice(2, 4), 16);\r\n    const b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport const isColorDark = (hexColor) => {\r\n    // Convert hex color to RGB\r\n    let output = hexToRgb(hexColor)\r\n    if(output === undefined) return hexColor\r\n    const { r, g, b } = output\r\n\r\n    // Calculate the luminance\r\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n\r\n    // Return true if the color is dark, else false\r\n    return luminance < 128;\r\n}\r\n\r\nexport function chunk(array, size, uncategorized = false) {\r\n    const result = [];\r\n    if(!array) return []\r\n    if(uncategorized) array.unshift({})\r\n    for (let i = 0; i < array.length; i += size) {\r\n        // Use slice to get a chunk of the specified size and push it to the result array\r\n        result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const wrapText = (text, maxLength) => {\r\n\r\n    if (text?.length > maxLength) {\r\n        let truncatedText = text.substring(0, maxLength) + '...';\r\n        return truncatedText;\r\n    }\r\n    return text\r\n}\r\n\r\nexport const formatDatefromTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    const seconds = String(date.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n  "],"names":["_localStorage$getItem","tableRef","useRef","listtableRef","keyboardRef","view","setView","useState","hover","setHover","preset","setPreset","searchQuery","setSearchQuery","focused","setFocused","useSearch","stockAmount","setStockAmount","position","setPosition","x","window","screen","availWidth","y","availHeight","dragging","setDragging","offset","setOffset","rowData","setRowData","currency","useSelector","state","auth","data","isSuccess","gotProducts","useGetProductsQuery","updateStock","useUpdateStockMutation","togglePOS","useTogglePOSMutation","handleImgError","e","target","src","labelImg","hovered","setHovered","stock","setStock","id","gridData","setGrid","useEffect","products","chunk","map","_ref","name","image","price","quantity","pos","_objectWithoutProperties","_excluded","concat","$","val","trigger","_keyboardRef$current","current","setInput","DataTable","paging","searching","info","ordering","processing","lengthMenu","ext","errMode","length","on","destroy","handleView","handleStock","dataset","value","manageStock","async","product","find","item","parseInt","updated","_objectSpread","unwrap","error","toast","showInPOS","status","stat","preventDefault","checked","console","log","message","scale","setScale","localStorage","getItem","_jsxs","_Fragment","children","_jsx","className","style","display","alignItems","justifyContent","width","type","backgroundColor","color","onClick","height","ref","row","onMouseOver","code","weight","onChange","readOnly","right","defaultChecked","htmlFor","onMouseEnter","onError","alt","backgroundImage","backgroundSize","backgroundRepeat","i","colSpan","SearchBoard","zIndex","top","overflow","onMouseMove","clientX","clientY","onMouseUp","handleMouseUp","left","cursor","resize","transform","transformOrigin","onMouseDown","background","padding","textAlign","borderRadius","Keyboard","r","layout","default","border","decrease","setItem","Math","max","prev","round","increase","min","JSON","parse","input","clearInput","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","capitalFirst","string","includes","str","forEach","part","charAt","toUpperCase","slice","Warning","msg","icon","hexToRgb","hex","replace","h","join","g","b","isColorDark","hexColor","output","undefined","array","size","result","arguments","unshift","push","wrapText","text","maxLength","substring","formatDatefromTimestamp","timestamp","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getSeconds"],"sourceRoot":""}