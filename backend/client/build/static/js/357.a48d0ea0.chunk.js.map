{"version":3,"file":"static/js/357.a48d0ea0.chunk.js","mappings":"kZA4vBA,QAhvBA,WAAgB,IAADA,EAAAC,EACX,MAAMC,GAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAOD,EAAAA,EAAAA,QAAO,MACdE,GAASF,EAAAA,EAAAA,QAAO,MAChBG,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,MACZC,GAAWC,EAAAA,EAAAA,OACX,SAAEC,EAAQ,MAAEC,EAAK,WAAEC,EAAU,aAAEC,EAAY,YAAEC,EAAW,OAAEC,IAAWC,EAAAA,EAAAA,KAAaC,GAASA,EAAMC,QAC/FC,EAAKC,IAAUC,EAAAA,EAAAA,UAASN,IACzBO,EAAWC,IAAeF,EAAAA,EAAAA,WAAS,IAClCG,EAAkBC,IAAqBJ,EAAAA,EAAAA,UAASP,IAChDY,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,KAC5C,KAAEO,EAAI,UAAEC,IAAcC,EAAAA,EAAAA,OACpBC,EAAUC,IAAgBX,EAAAA,EAAAA,UAAS,KACnCY,EAAWC,IAAWb,EAAAA,EAAAA,UAAS,CAAC,IAChCc,EAAWC,IAAiBf,EAAAA,EAAAA,WAAS,IACrCgB,EAAcC,KAAkBjB,EAAAA,EAAAA,UAAS,KACzCkB,GAAiBC,KAAsBnB,EAAAA,EAAAA,UAAS,KAChDoB,GAAcC,KAAoBrB,EAAAA,EAAAA,UAASR,IAC3C8B,GAAgBC,KAAevB,EAAAA,EAAAA,UAAS,IACxCwB,GAAOC,KAAgBzB,EAAAA,EAAAA,WAAS,IAChC0B,GAAWC,KAAa3B,EAAAA,EAAAA,WAAS,IACjC4B,GAAiBC,KAAuB7B,EAAAA,EAAAA,UAAST,IACjDuC,GAASC,KAAe/B,EAAAA,EAAAA,UAAS,KACjCgC,GAAQC,KAAyBjC,EAAAA,EAAAA,WAAS,IAC1CkC,GAAQC,KAAcnC,EAAAA,EAAAA,UAAS,KAC/BoC,GAASC,KAAerC,EAAAA,EAAAA,WAAS,IACjCsC,GAAcC,KAAcvC,EAAAA,EAAAA,WAAS,IACtCwC,GAAWC,KAAgBzC,EAAAA,EAAAA,UAAS,CAAC,IACrC0C,GAAQC,KAAa3C,EAAAA,EAAAA,UAAS,CAAC4C,MAAM,KAAMC,MAAM,EAAGC,KAAK,GAAIhB,QAAQ,GAAIiB,MAAM,IAEhFC,GAAW,CAACC,UAAU,OAAQC,SAAS,WAE7CC,EAAAA,EAAAA,YAAU,KAEN,IAAIC,EAAc,GAClB,MAAMC,EAAiBC,IAEnB,MAAM,IAAExD,GAAQwD,EAEJ,UAARxD,GACAiC,GAAWqB,GACXA,EAAc,IAGK,IAAftD,EAAIyD,SACJH,GAAetD,EAEvB,EAIJ,OAFA0D,OAAOC,iBAAiB,UAAWJ,GAE5B,IAAMG,OAAOE,oBAAoB,UAAWL,EAAc,GAElE,CAACvB,MAEJqB,EAAAA,EAAAA,YAAU,KACHrB,IACC6B,EAAAA,EAAMC,IAAI,oBAADC,OAAqB/B,KAAWgC,MAAKC,IAAY,IAAX,KAACxD,GAAKwD,EACjDC,GAAUzD,EAAK0D,QAAQC,IACvBnC,GAAW,GAAG,IACfoC,OAAM,SAAQC,SAAQ,IAAK,OAE3B,IAAM,OACf,CAACtC,KAEH,MAAMuC,IAAcC,EAAAA,EAAAA,OACd,YAAEC,GAAW,SAAEC,GAAQ,cAAEC,GAAa,aAAEC,KAAiBC,EAAAA,EAAAA,MAE/DxB,EAAAA,EAAAA,YAAU,KAAO,IAADyB,EAIZ,OAHmB,QAAnBA,EAAGP,GAAY9D,YAAI,IAAAqE,GAAhBA,EAAkBlE,UACjBC,GAAYkE,EAAAA,EAAAA,IAAMR,GAAY9D,KAAKG,SAASoE,QAAOC,GAAQA,EAAIjC,KAAMkC,cAAcC,SAASV,GAAYS,iBAAgB,IAErH,IAAMrE,EAAY,GAAG,GAC9B,CAAC4D,KAEH,MAmBMW,GAAqBC,UACvBC,EAAEC,iBACF,IAGI,GAFA9C,IAAW,GACX+C,QAAQC,IAAIzF,IACRA,EACA,OAAOI,GAAaD,GAExBlB,EAAS,CAAEyG,KAAM,cAAeC,QAAS3F,IACzCf,EAAS,CAAEyG,KAAK,YAEhB,MAAM,KAACjF,SAAcoD,EAAAA,EAAMC,IAAI,uCAADC,OAAwC/D,IACtE,GAAGS,EAAKmF,OAAQ,CACZC,EAAAA,GAAMC,QAAQrF,EAAKsF,SACnB,IAAIC,EAAK,IAAIC,SACb,MAAMC,GAASC,EAAAA,EAAAA,IAAc,gCAAgC1F,EAAK2F,KAAM,eACxEJ,EAAGK,OAAO,OAAQH,GAElB,MAAOzF,KAAK6F,SAAczC,EAAAA,EAAM0C,KAAK,gBAAiBP,EAAI,CACtDQ,QAAS,CACL,OAAU,mBACV,eAAiB,sBACjB,YAAcC,aAAaC,QAAQ,gBAIxCJ,EAAKV,SACJC,EAAAA,GAAMC,QAAQ,uBACda,YAAW,IAAKjD,OAAOrE,SAASuH,UAAU,MAElD,MACIf,EAAAA,GAAMgB,MAAMpG,EAAKsF,QAGzB,CAAE,MAAOc,GACLrB,QAAQC,IAAIoB,EAAMd,SAClBF,EAAAA,GAAMgB,MAAM,oCAChB,CACA5H,EAAS,CAAEyG,KAAK,iBAChBjD,IAAW,EAAM,EAoCfyB,GAAY4C,IACjB,IAADC,EACI,IAAI5C,EAAU/C,GAAgB4F,MAAK/B,GAAOA,EAAIb,KAAO0C,IACrD,GAAG3C,EAAQ8C,UAAiE,IAAtD9C,EAAQ8C,QAAQ/B,cAAcgC,QAAQ,aAGxD,OAFA/C,GAAOgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOhD,GAAO,IAAEiD,KAAK,KAAMnE,MAAM,IACxCN,GAAawB,GAnGShC,IAAsBD,IAsGhD,MAAMmF,EAAmBC,KAAKC,MAAMD,KAAKE,UAAUlG,KACnD,IAAImG,EAA6C,QAAlCV,EAAGM,EAAiB1C,WAAc,IAAAoC,OAAA,EAA/BA,EAAiCC,MAAK/B,GAAOA,EAAIb,KAAO0C,IAE1E,GAAIW,IAAgBjI,EAAQ,CACxB,IAAIkI,EAAeD,EAAYxE,MAAQ,EACnC0E,EAAiBxD,EAAQyD,SAAWF,EACxC,IAAwB,IAApBC,EACA,OAAOE,SAASC,cAAc,kBAAkB3D,EAAQC,GAAG,MAAM2D,UAAUC,IAAI,aAI3E,IAADC,EAAAC,EAFP,GAAI1I,EAGAiC,GAA8C,QAApCwG,EAA4B,QAA5BC,EAAC5G,GAAaqD,WAAc,IAAAuD,OAAA,EAA3BA,EAA6BzE,cAAM,IAAAwE,EAAAA,EAAE,QAFhDxG,GAAWH,GAAaqD,IAAewD,WAAUC,GAAQA,EAAKhE,KAAOD,EAAQC,MAKjFrC,IAAkBoF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGrF,IAAe,IAAE,CAACqC,EAAQC,IAAKuD,KACtDF,EAAYxE,MAAQyE,EACpBnG,GAAgB8F,GAChBpI,EAAS,CAAEyG,KAAM,kBAAmBC,QAAQ0B,GAEhD,KAAO,CAAC,IAADgB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACHjH,GAA8C,QAApC4G,EAA4B,QAA5BC,EAAChH,GAAaqD,WAAc,IAAA2D,OAAA,EAA3BA,EAA6B7E,cAAM,IAAA4E,EAAAA,EAAE,GAChDlE,GAAOgD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOhD,GAAO,IAAElB,MAAO,IAC9B,IAAI0F,EAAqI,QAA7HJ,EAAqC,QAArCC,EAAGI,OAAOC,OAAOvH,IAAcwH,cAAM,IAAAN,OAAA,EAAlCA,EAAoCxD,QAAQoD,GAAQA,EAAKhE,KAAOD,EAAQC,KAAI2E,QAAQ,CAACC,EAAMZ,IAASY,EAAOZ,EAAKnF,OAAO,UAAG,IAAAsF,EAAAA,EAAG,EACxIZ,EAAiBxD,EAAQyD,UAAae,EAAW,GACrD,IAAwB,IAApBhB,EACA,OAAOE,SAASC,cAAc,kBAAkB3D,EAAQC,GAAG,MAAM2D,UAAUC,IAAI,aAEnFjG,IAAkBoF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGrF,IAAe,IAAE,CAACqC,EAAQC,IAAKuD,KACtDpG,IAAe4F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG7F,IAAY,IAAC,CAACqD,IAAgB,IAA+B,QAA9B8D,EAAGnH,GAAaqD,WAAc,IAAA8D,EAAAA,EAAE,GAAItE,MACvFlF,EAAS,CAAEyG,KAAM,kBAAmBC,SAAOwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM7F,IAAY,IAAC,CAACqD,IAAgB,IAA+B,QAA9B+D,EAAGpH,GAAaqD,WAAc,IAAA+D,EAAAA,EAAE,GAAIvE,MAExH,GAcE8E,GAAcA,IAAMpH,IAAUD,IAuB9BsH,GAAiB5D,IACnBA,EAAE6D,OAAOC,IAAMC,CAAQ,EAGrBC,GAAiBC,IACnB1I,GAAYkE,EAAAA,EAAAA,IAAMR,GAAY9D,KAAKG,SAASoE,QAAOC,GAAOA,EAAIuE,cAAcD,IAAO,IACnF5H,IAAa4H,EAAM,EAGjBE,GAAkBA,KACpB,IAAIC,EAAK7B,SAASC,cAAc,4BAC7B4B,GACCA,EAAGC,eAAe,CACdC,SAAS,SACTC,MAAO,UAEf,GAGJxG,EAAAA,EAAAA,YAAU,KACN,GAAI3C,EAAY,CACZS,GAAcV,EAAKqJ,YACnB,MAAMC,EAAO,GACbtJ,EAAKqJ,WAAWE,SAASC,GAAQF,EAAKE,EAAI7F,IAAM6F,EAAIC,QACpDnJ,EAAQgJ,EACZ,CAUA,OATGxF,GAAY7D,YAC6B,IAArC6D,GAAY9D,KAAKG,SAAS6C,OACzBxC,GAAa,GAEbA,GAAa,GAEjBJ,GAAYkE,EAAAA,EAAAA,IAAMR,GAAY9D,KAAKG,SAAU,IAC7CS,GAAmBkD,GAAY9D,KAAKG,WAEjC,KACHS,GAAmB,IACnBR,EAAY,GAAG,CAClB,GACH,CAAEH,EAAWD,EAAM8D,GAAY9D,KAAM8D,GAAY7D,UAAWvB,KAE9DkE,EAAAA,EAAAA,YAAU,KACN9B,GAAgB7B,GAChB+J,KACO,KACHlI,GAAgB,GAAG,IAEzB,CAAE7B,KAEJ2D,EAAAA,EAAAA,YAAU,KACH5D,GACCsC,GAAmBtC,GAEhB,IAAMsC,GAAmB,CAAC,KACnC,CAAC1C,EAAUI,IAEb,MAAM0K,GAAO,CACTC,OAAO,OACPC,aAAa,SACbC,QAAQ,OACRC,WAAW,SACXC,MAAM,OACNC,gBAAiB,UACjBC,UAAU,OAqCPhF,KAAKiF,KAAcC,EAAAA,EAAAA,KAEpBC,GAAcC,IAChB,GAAGxI,GAAS,CACR,IAAIyI,EACO,UAARD,GACCC,EAAY,IACZ1I,GAAU,MAEV0I,EAAY3I,GAAS0I,EACrBzI,GAAUD,GAAS0I,IAEvBvJ,IAAe4F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EAAM7F,IAAY,IAAC,CAACqD,IAAgBrD,GAAaqD,IAAeqG,KAAI,CAAC5C,EAAM6C,KACnFA,IAAKzJ,KACJ4G,GAAIjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOiB,GAAI,IAAErF,MAAMgI,KAEpB3C,OAEf,GAGE8C,GAAM,CAAC9H,SAAU,QAEvB,OACI+H,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAAA,OAAKG,UAAS,+BAAAvH,OAA8C,aAAb4G,IAA2B,iCAAkCU,SAAA,CAC5D,IAAzCzC,OAAO2C,KAAKlL,GAAkBoD,SAA6C,KAA5BpD,EAAiBuF,QAAiC,aAAb+E,GAmCpF,MAlCCa,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUG,MAAO,CAACjB,MAAM,QAASJ,OAAO,QAAQsB,SAAS,YAAYL,UAChFG,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACC,QAAQ,EAAKP,UAChBF,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACC,SAtJJxG,IAGtB,GAFAA,EAAEC,iBAEe,KAAdhF,GAAoC,MAAhBA,EAAqB,OAAOwL,EAAAA,EAAAA,IAAQ,0DAE3D9M,EAAS,CAAEyG,KAAM,YACjB7B,EAAAA,EAAM0C,KAAK,8BAA+B,CAACyF,KAAMzM,EAAWgB,IAAcyD,MAAKiI,IAAa,IAAZ,KAACxL,GAAKwL,EAE/ExL,EAAKmF,QACJC,EAAAA,GAAMC,QAAQrF,EAAKsF,SACnB9G,EAAS,CAAEyG,KAAM,WAAYC,QAASlF,EAAKyL,UAC3C5L,EAAiBG,EAAKyL,UAEtBrG,EAAAA,GAAMgB,MAAMpG,EAAKsF,QACrB,IACD1B,OAAM,SAAQC,SAAQ,IAAIrF,EAAS,CAClCyG,KAAM,kBACP,EAqImD2F,SAAA,EAC9BF,EAAAA,EAAAA,MAACgB,EAAAA,EAAW,CAAAd,SAAA,EACRG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,iBAAgB,KAACG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,sBAE3BG,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAAAf,UACNG,EAAAA,EAAAA,KAACa,EAAAA,EAAG,CAAAhB,UACAG,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAAAjB,UACAF,EAAAA,EAAAA,MAACoB,EAAAA,EAAS,CAAAlB,SAAA,EACNG,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAAAnB,UACFG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,oCAEPG,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CACF/G,KAAM,OACNgH,YAAanN,EACboN,SAAUrH,GAAK9E,EAAe8E,EAAE6D,OAAOyD,OACvCnB,MAAO,CAACoB,OAAO,8BAMnC1B,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAACxB,UAAW,yBAAyBD,SAAA,EAC7CG,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACS,GAAI,EAAGzB,UAAU,gBAAgB0B,QAASA,IAAK7N,EAAU,KAAKkM,SAAE,UAGrEG,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAACS,GAAI,EAAE1B,UACPG,EAAAA,EAAAA,KAAA,UAAQF,UAAU,wBAAwB5F,KAAI,SAAW2F,SAAE,wBAQlE,aAAbV,KAA2Ba,EAAAA,EAAAA,KAAA,OAAAH,UACvBF,EAAAA,EAAAA,MAAA,MAAIG,UAAU,cAAcG,MAAO,CAAErI,SAAS,OAAQ6J,WAAW,OAAQ5B,SAAA,CACxE9L,EAAS,IAAE2N,WAAsC,QAA5BvO,EAAC2C,GAAaqD,WAAc,IAAAhG,OAAA,EAA3BA,EAA6BoK,QAAO,CAACoE,EAAKC,IAAOD,EAAOC,EAAInK,MAAQiK,WAAWE,EAAIrK,QAAQ,IAAIsK,QAAQ,SAItIlC,EAAAA,EAAAA,MAAA,OAAKG,UAAS,iBAAAvH,OAAgC,aAAb4G,GAAwB,GAAG,kBAAoBc,MAAO,CAACzG,OAAgD,IAAzC4D,OAAO2C,KAAKlL,GAAkBoD,SAA6C,KAA5BpD,EAAiBuF,OAAkB,YAAY,GAAG4E,MAAmB,aAAbG,GAAwB,OAAO,SAASU,SAAA,CACxO3G,GAASsG,KAAKsC,IAAYnC,EAAAA,EAAAA,MAAA,OAAmBoC,IAAK1O,EAAYyM,UAAS,2BAAAvH,OAA6BY,KAAgB2I,EAAQ,GAAG,SAAQ,KAAAvJ,OAAIzC,GAAaqD,KAAkBrD,GAAaqD,IAAelB,QAAuB,aAAbkH,GAAyB,iBAAiB,IACxPc,MAAO,CACH+B,aAAa,OACb/C,gBAAgB,WACtBY,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKG,UAAS,QAAAvH,OAAUzC,GAAaqD,KAAkBrD,GAAaqD,IAAelB,OAAQ,SAAS,IAAMgI,MAAOtB,GAAKkB,SAAA,EAClHG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,4BAA4BG,MAAO,CAACrI,SAAS,WAC1DoI,EAAAA,EAAAA,KAAA,KAAGF,UAAU,OAAMD,SAAC,+BAEtB/J,GAAaqD,KAAkBrD,GAAaqD,IAAeqG,KAAK,CAAC5C,EAAKqF,KAAWtC,EAAAA,EAAAA,MAAA,OAAiBG,UAAS,2BAAAvH,OAA6BvC,KAAiBiM,GAAS,YAAc,UAASrF,EAAKhE,GAAI4I,QAASA,IAAKvL,GAAWgM,GAAOpC,SAAA,EAChOF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,eAAcD,SAAA,EACzBF,EAAAA,EAAAA,MAAA,KAAGM,MAAO,CAACiC,SAAS,SAASrC,SAAA,CAAC,IAAEjD,EAAKpF,KAAK,QAC1CwI,EAAAA,EAAAA,KAAA,UAAQF,UAAU,QAAQ,aAAYlD,EAAKrF,MAAMsI,SAAE9L,EAAU,KAAM6I,EAAKnF,MAAQiK,WAAW9E,EAAKrF,QAAQsK,QAAQ,SAEpHlC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,SAAQD,SAAA,EACnBF,EAAAA,EAAAA,MAAA,QAAMG,UAAU,WAAUD,SAAA,CAAC,IAAE6B,WAAW9E,EAAKnF,OAAOoK,QAAQ,GAAG,OACpD,UAAVjF,EAAKhE,KAAgBoH,EAAAA,EAAAA,KAAA,KAAGF,UAAU,YAAWD,SAAA,GAAAtH,OAAKxE,EAAW,IAAM2N,WAAW9E,EAAKrF,OAAOsK,QAAQ,GAAE,OAAAtJ,OAAMqE,EAAKhB,KAAMgB,EAAKhB,KAAO,eAEtIoE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,MAAM0B,QAASA,IAxNlCS,KACnBlM,IAAe4F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EAAM7F,IAAY,IAAC,CAACqD,IAAgBrD,GAAaqD,IAAeK,QAAO,CAACoD,EAAM6C,IAAKA,IAAKwC,OACvGxO,EAAS,CAAEyG,KAAM,kBAAmBC,SAAOwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM7F,IAAY,IAAC,CAACqD,IAAgBrD,GAAaqD,IAAeK,QAAO,CAACoD,EAAM6C,IAAKA,IAAKwC,OAAW,EAsNrFE,CAAeF,GAAOpC,UAACG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBATgBmC,OAT3DH,MAqBtCnC,EAAAA,EAAAA,MAAA,OAAKG,UAAS,iCAAAvH,OAAmCzC,GAAaqD,KAAkBrD,GAAaqD,IAAelB,QAAuB,aAAbkH,GAA0B,GAAG,UAAYc,MAAO,CAACrB,OAAQ,QAAQiB,SAAA,EACnLG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,MAAKD,UAChBF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,mBAAkBD,SAAA,EAC7BG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUD,UACrBG,EAAAA,EAAAA,KAACoC,EAAAA,GAAI,CAACtC,UAAU,uCAAuCuC,GAAE,YAAA9J,OAAcY,IAAiB8G,MAAO,CAAChB,gBAAgB,UAAUD,MAAM,OAAOa,SAAC,iBAE5IG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2EAA0ED,UACrFG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBD,UAC9BG,EAAAA,EAAAA,KAAA,KAAGC,MAAO,CAACqC,WAAW,KAAKzC,UAACF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,gBAC/BF,EAAAA,EAAAA,MAAA,QAAMG,UAAU,eAAeG,MAAO,CAACsC,KAAK,EAAE3K,SAAS,UAAUiI,SAAA,CAAE9L,EAAS,IAAE2N,WAAsC,QAA5BtO,EAAC0C,GAAaqD,WAAc,IAAA/F,OAAA,EAA3BA,EAA6BmK,QAAO,CAACoE,EAAKC,IAAOD,EAAOC,EAAInK,MAAQiK,WAAWE,EAAIrK,QAAQ,IAAIsK,QAAQ,GAAG,OAAQ,mBAK3NlC,EAAAA,EAAAA,MAAA,OAAKG,UAAU,WAAUD,SAAA,CACpB,CAAC,EAAE,EAAE,GAAGL,KAAKgD,IAAMxC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAoB0B,QAASA,IAAKnC,GAAYmD,GAAI3C,UACjFF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,oCAAoC2C,UAAW3L,GAASmJ,MAAOvI,GAASmI,SAAA,CAAC,KAACF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,IAAE2C,EAAG,OAAK,QAD1DA,MAGnDxC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAW0B,QAlPhCkB,KACd3M,IAAe4F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAD,EAAM7F,IAAY,IAAC,CAACqD,IAAgB,MACnD1F,EAAS,CAAEyG,KAAM,kBAAmBC,SAAOwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM7F,IAAY,IAAE,CAACqD,IAAgB,MAAM,EAgPrB0G,UACzCF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,0BAA0B5F,KAAK,SAAS+F,MAAOvI,GAASmI,SAAA,CAAC,KAACG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,WAAU,aAGjGF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,WAAUD,SAAA,CACnB,CAAC,EAAE,EAAE,GAAGL,KAAKgD,IAAMxC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAoB0B,QAASA,IAAKnC,GAAYmD,GAAI3C,UAClFF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,oCAAoC2C,UAAW3L,GAASmJ,MAAOvI,GAASmI,SAAA,CAAC,KAACF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,IAAE2C,EAAG,OAAK,QADzDA,MAGpDxC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAEnBH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,WAAUD,SAAA,CACpB,CAAC,EAAE,EAAE,GAAGL,KAAK/F,IAAOuG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAqB0B,QAASA,IAAKnC,GAAY5F,GAAKoG,UACpFF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,oCAAoC2C,UAAW3L,GAASmJ,MAAOvI,GAASmI,SAAA,CAAC,KAACF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,IAAEpG,EAAI,OAAK,QAD1DA,MAGpDuG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAGnBH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,WAAUD,SAAA,EACrBG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,oCAAoC2C,UAAW3L,GAAS0K,QAASA,IAAKnC,GAAY,KAAMY,MAAOvI,GAASmI,SAAA,CAAC,KAACG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,QAAO,UAE1IG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,oCAAoC2C,UAAW3L,GAAS0K,QAASA,IAAKnC,GAAY,GAAIY,MAAOvI,GAASmI,SAAA,CAAC,KAACG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,QAAO,UAExIG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUD,UACrBF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,oCAAoC2C,UAAW3L,GAAS0K,QAASA,IAAInC,GAAY,SAAUY,MAAOvI,GAASmI,SAAA,CAAC,KAACG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,UAAS,UAE/IG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAW0B,QAASA,IAAKzK,IAAYD,IAAS+I,UACzDF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,oCAAmCD,SAAA,CAAE,KAACF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,IAAG/I,GAAqB,OAAb,aAAoB,OAAK,kBAMjG,aAAbqI,IAA0BQ,EAAAA,EAAAA,MAAA,OAAKG,UAAU,qCAAqCG,MAAO,CAClFrB,OAAO,OACP+D,MAAM,MACNnJ,OAAiD,IAAzC4D,OAAO2C,KAAKlL,GAAkBoD,SAA6C,KAA5BpD,EAAiBuF,OAAkB,YAAY,IACpGyF,SAAA,EAGFF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAiBG,MAAO,CAAChB,gBAAgB,UAAUtH,UAAU,GAAIqH,MAAM,MAAM4D,OAAO,KAAK/C,SAAA,EACpGF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAoBG,MAAO,CAAC4C,SAAS,UAAWd,IAAKxO,EAAKsM,SAAA,CACnEnK,EAAa8J,KAAI,CAACsD,EAAIrD,KAAOO,EAAAA,EAAAA,KAAA,OAAaF,UAAS,iBAAAvH,OAAuB,IAAJkH,EAAO,SAAS,IAAMQ,MAAO,CAACvB,OAAMqE,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAASF,EAAIpE,QAAS,QAAQ,QAASuE,WAAWH,EAAIpE,OAAQ8C,QAASA,IAAI1D,GAAegF,EAAIlK,IAAIiH,SACpNiD,EAAItL,KAAMmC,SAAS,KAAQmJ,EAAItL,KAAMxD,MAAM,KAAK,GAAI8O,EAAItL,MADrBiI,MAGzCO,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAgB0B,QAASA,IAAK1D,GAAe,MAAOmC,MAAO,CAACgD,WAAW,QAASjE,MAAM,IAAKkE,YAAY,IAAIrD,SAAC,WAG3HG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,4BAA4BG,MAAO,CAACkD,OAAO,GAAGR,MAAM,IAAKnB,QA3a9E1H,IACdE,QAAQC,IAAIzG,EAAO4P,QAAQC,cAC3B7P,EAAO4P,QAAQE,SAAS,CACpBC,IAAK,EACLnF,SAAU,WAGd,IAAIF,EAAK7B,SAASC,cAAc,eAC7B4B,GACCA,EAAGC,eAAe,CACdC,SAAS,SACTmF,IAAK,GAEb,EA8Z+G1D,UACvFG,EAAAA,EAAAA,KAAA,UAAQF,UAAU,2BAA2BG,MAAO,CAACoB,OAAO,cAAcxB,UACtEG,EAAAA,EAAAA,KAAA,KAAGF,UAAU,2BAIzBE,EAAAA,EAAAA,KAAA,UAAQF,UAAS,6BAAgCG,MAAO,CAACsD,IAAI,EAAEX,OAAO,EAAEL,MAAM,IAAKf,QAASA,IAAKjO,EAAK6P,QAAQI,SAAS,CAACjB,MAAM,IAAKnE,SAAS,WAAWyB,UACnJG,EAAAA,EAAAA,KAAA,KAAGC,MAAOP,GAAKI,UAAU,iDAE7BE,EAAAA,EAAAA,KAAA,UAAQF,UAAU,6BAA6BG,MAAO,CAAC0C,OAAO,GAAGY,IAAI,EAAEX,OAAO,GAAKpB,QAASA,IAAIjO,EAAK6P,QAAQI,SAAS,CAACjB,KAAK,IAAKnE,SAAS,WAAWyB,UACjJG,EAAAA,EAAAA,KAAA,KAAGC,MAAOP,GAAKI,UAAU,qDAGjCH,EAAAA,EAAAA,MAAA,OAAKG,UAAU,WAAWiC,IAAKvO,EAAOqM,SAAA,CAE9B3J,KAAU8J,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUD,UAC/BG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAgB0B,QAASA,IAAI/D,KAAwBoC,UAChEF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,OAAMD,SAAA,EACjBG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOD,UAClBG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAYlC,IAAK6F,EAAQC,IAAK,aAEjD1D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAQG,MAAO,CAACvB,MAAM,QAASuE,WAAW,aAAapD,UAClEF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,eAAcD,SAAA,CAAC,gBAE7BG,EAAAA,EAAAA,KAAA,QAAMF,UAAU,gCAOtC1K,EAASoK,KAAK,CAACmE,EAAKC,KAAO5D,EAAAA,EAAAA,KAAA,OAAKF,UAAW,WAAWD,SAC/C8D,EAAInE,KAAI,CAAC7G,EAAQ8G,KAAC,IAAAoE,EAAA,OACflE,EAAAA,EAAAA,MAAA,OAAaG,UAAS,iBAAAvH,OAAoBI,EAAQyD,SAAWzD,EAAQlB,QAAS,GAAKkB,EAAQyD,SAAWnI,EAAW0E,EAAQC,MAAQ,GAAmC,IAA9BkL,SAASnL,EAAQyD,UAAiB,YAAY,IAAMoF,QAASA,IAAI9I,GAAUC,EAAQC,IAAK,UAASD,EAAQC,GAAGiH,SAAA,EAC9OF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,OAAOG,MAAO,CAACtI,UAAU,KAAKkI,SAAA,CAEzCzG,KACA4G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOD,UAClBG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAYlC,IAAKmG,gCAA4CpL,EAAQrB,MAAO0M,QAAStG,GAAgBgG,IAAK/K,EAAQnB,UAGrIwI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAQG,MAAO,CAACtI,WAAYyB,IAAgB,UAAWsF,OAAMqE,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAS1N,EAAUqD,EAAQqF,eAAgB,QAAQ,QAASiF,WAAW3N,EAAUqD,EAAQqF,cAAc6B,UAC3LF,EAAAA,EAAAA,MAAA,UAAQG,UAAU,eAAeG,MAAO,CAACgE,aAAa,UAAUpE,SAAA,EAC3DqE,EAAAA,EAAAA,IAASvL,EAAQnB,KAAM,KAEpBmB,EAAQnB,KAAKS,OAAS,MAC1B+H,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaD,SAAElH,EAAQnB,gBAKnDmI,EAAAA,EAAAA,MAAA,OAAKG,UAAU,SAAQD,SAAA,EACnBF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,MAAKD,SAAA,EAChBG,EAAAA,EAAAA,KAAA,SAAAH,SAAO,SACPG,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACrI,SAAS,OAAOiI,SAAElH,EAAQwL,UAE3CxE,EAAAA,EAAAA,MAAA,OAAKG,UAAU,QAAOD,SAAA,EAClBG,EAAAA,EAAAA,KAAA,SAAAH,SAAO,cACPG,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAACrI,SAAS,OAAOiI,SAAGlH,EAAQyD,UAAkC,QAA1ByH,EAAI5P,EAAW0E,EAAQC,WAAG,IAAAiL,EAAAA,EAAG,aAzB/EpE,EA4BJ,KA9B4CmE,QAoC7C,IAApBxO,EAAS6C,SAAiB/B,KAAU8J,EAAAA,EAAAA,KAAA,OAAKF,UAAU,uDACpDG,MAAO,CAACrB,OAAO,0BAA0BiB,SAEjCrK,GAAaN,GAAWyK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACxBG,EAAAA,EAAAA,KAAA,MAAAH,SAAI,sBACJG,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mCAAmC0B,QAAS5H,GAAmBiG,SAC3E7I,IAAcgJ,EAAAA,EAAAA,KAAA,KAAGF,UAAU,0BAA0B,4BAG3DE,EAAAA,EAAAA,KAAA,KAAGF,UAAU,+BAIjB,SAGZE,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACC,OAAQhK,GAAUyJ,UACrBF,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACC,SApROzG,UAErBC,EAAEC,iBACF,MAAMS,EAAK,IAAIC,SAMf,GALAD,EAAGK,OAAO,OAAQzD,GAAOI,MACzBgD,EAAGK,OAAO,QAASzD,GAAOG,OAC1BiD,EAAGK,OAAO,UAAWzD,GAAOZ,SAC5BgE,EAAGK,OAAO,WAAYzD,GAAOK,OAC7B+C,EAAGK,OAAO,QAASzD,GAAOE,QACtBF,GAAOI,OAASJ,GAAOG,QAAUH,GAAOZ,QACxC,OAAO+J,EAAAA,EAAAA,IAAQ,4BAGnB9M,EAAS,CAAEyG,KAAK,YAChB,MAAM,KAACjF,SAAcoD,EAAAA,EAAM0C,KAAK,0BAA2BP,EAAI,CAC3DQ,QAAQ,CACJ,OAAgB,mBAChB,eAAiB,sBACjB,YAAiBC,aAAaC,QAAQ,gBAG9CzH,EAAS,CAAEyG,KAAK,iBACZjF,EAAKmF,OACLC,EAAAA,GAAMC,QAAQrF,EAAKsF,SAEnBF,EAAAA,GAAMgB,MAAMpG,EAAKsF,QACrB,EA0PyCsF,SAAA,EACjCG,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CAAAd,SAAE,wBAGdF,EAAAA,EAAAA,MAACiB,EAAAA,EAAS,CAACX,MAAO,CAACmE,QAAQ,IAAIvE,SAAA,EAC3BF,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAAAhB,SAAA,EACAG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOD,UAClBG,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAAAnB,SAAC,cAEXG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOD,UAClBG,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAlB,UACNG,EAAAA,EAAAA,KAAA,SACI9F,KAAK,OACLiH,SAAUrH,GAAKzC,IAASsE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGvE,IAAM,IAAEI,KAAMsC,EAAE6D,OAAOyD,SACpDiD,aAAcjN,GAAOI,KACrBsI,UAAU,kBAK1BH,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAAAhB,SAAA,EACAG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOD,UAClBG,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAAAnB,SAAC,eAEXG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOD,UAClBG,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAlB,UACNG,EAAAA,EAAAA,KAAA,SACI9F,KAAK,OACL4F,UAAU,QACVqB,SAAUrH,GAAKzC,IAASsE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGvE,IAAM,IAAEG,MAAOuC,EAAE6D,OAAOyD,SACrDiD,aAAcjN,GAAOG,MACrB2J,YAAanN,YAK7B4L,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAAAhB,SAAA,EACAG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOD,UAClBG,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAAAnB,SAAC,eAEXG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOD,UAClBG,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAlB,UACNG,EAAAA,EAAAA,KAAA,SACI9F,KAAK,OACL4F,UAAU,QACVqB,SAAUrH,GAAKzC,IAASsE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGvE,IAAM,IAAEK,MAAOqC,EAAE6D,OAAOyD,SACrDiD,aAAcjN,GAAOK,gBAKrCkI,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAAAhB,SAAA,EACAG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOD,UAClBG,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAAAnB,SAAC,iBAEXG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOD,UAClBG,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAAAlB,UACNG,EAAAA,EAAAA,KAAA,SACI9F,KAAK,OACL4F,UAAU,QACVoB,YAAY,gBACZC,SAAUrH,GAAKzC,IAASsE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGvE,IAAM,IAAEZ,QAASsD,EAAE6D,OAAOyD,SACvDiD,aAAcjN,GAAOZ,kBAKrCwJ,EAAAA,EAAAA,KAACa,EAAAA,EAAG,CAAAhB,UACAF,EAAAA,EAAAA,MAAA,SAAOG,UAAU,qBAAoBD,SAAA,EACjCG,EAAAA,EAAAA,KAAA,KAAGF,UAAW,oBAAqB,SACnCE,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CACF/G,KAAK,OACL4F,UAAU,SACVwE,OAAO,UACPnD,SAjUTrH,IACf,MAAMc,EAAOd,EAAE6D,OAAO4G,MAAM,GAC5BlN,IAASsE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGvE,IAAM,IAAEE,MAAOsD,IAAM,IAgUb,gCAKd+E,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAAzB,SAAA,EACRG,EAAAA,EAAAA,KAAA,UAAQF,UAAU,4BAA4B5F,KAAK,SAASsH,QAASA,IAAK/D,KAAwBoC,SAAE,aACpGG,EAAAA,EAAAA,KAAA,UAAQF,UAAU,8BAA6BD,SAAC,sBAIxDG,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACC,OAAQ1J,GAAOmJ,UAClBF,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACC,SA3hBHxG,IAAM,IAAD0K,EAChB1K,EAAEC,iBACF,MAAM8B,EAAmBC,KAAKC,MAAMD,KAAKE,UAAUlG,KACnD,IAAImG,EAA6C,QAAlCuI,EAAG3I,EAAiB1C,WAAc,IAAAqL,OAAA,EAA/BA,EAAiChJ,MAAK/B,GAAOA,EAAIb,KAAO1B,GAAU0B,KAEpF,GAAIqD,IAAgBjI,EAAQ,CAExB,IAAImI,EAAiBjF,GAAUkF,SAAWlF,GAAUO,MACpD,IAAwB,IAApB0E,EACA,OAAOE,SAASC,cAAc,kBAAkBpF,GAAU0B,GAAG,MAAM2D,UAAUC,IAAI,aAGrFjG,IAAkBoF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGrF,IAAe,IAAE,CAACY,GAAU0B,IAAKuD,KACxDF,EAAYxE,MAAQP,GAAUO,MAC9B1B,GAAgB8F,GAChBpI,EAAS,CAAEyG,KAAM,kBAAmBC,QAAQ0B,GAEhD,KAAO,CAAC,IAAD4I,EAAAC,EAAAC,EAAAC,EAEH,IAAIzH,EAAuI,QAA/HsH,EAAqC,QAArCC,EAAGtH,OAAOC,OAAOvH,IAAcwH,cAAM,IAAAoH,OAAA,EAAlCA,EAAoClL,QAAQoD,GAAQA,EAAKhE,KAAO1B,GAAU0B,KAAI2E,QAAQ,CAACC,EAAMZ,IAASY,EAAOZ,EAAKnF,OAAO,UAAG,IAAAgN,EAAAA,EAAG,EAC1ItI,EAAiBjF,GAAUkF,UAAae,EAAW,GACvD,IAAwB,IAApBhB,EACA,OAAOE,SAASC,cAAc,kBAAkBpF,GAAU0B,GAAG,MAAM2D,UAAUC,IAAI,aAErFjG,IAAkBoF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGrF,IAAe,IAAE,CAACY,GAAU0B,IAAKuD,KACxDpG,IAAe4F,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG7F,IAAY,IAAC,CAACqD,IAAgB,IAA+B,QAA9BwL,EAAG7O,GAAaqD,WAAc,IAAAwL,EAAAA,EAAE,GAAIzN,OACvFzD,EAAS,CAAEyG,KAAM,kBAAmBC,SAAOwB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM7F,IAAY,IAAC,CAACqD,IAAgB,IAA+B,QAA9ByL,EAAG9O,GAAaqD,WAAc,IAAAyL,EAAAA,EAAE,GAAI1N,OAExH,CACAP,IAAsBD,IACtBuH,IAAiB,EA6fc4B,SAAA,EACnBG,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CAAAd,UACRG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,uBAEPF,EAAAA,EAAAA,MAACiB,EAAAA,EAAS,CAAAf,SAAA,EACNF,EAAAA,EAAAA,MAACkB,EAAAA,EAAG,CAAAhB,SAAA,EACAG,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAAAjB,UACAF,EAAAA,EAAAA,MAACoB,EAAAA,EAAS,CAAAlB,SAAA,EACNG,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAAAnB,UACFG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,eAEPG,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CACF/G,KAAK,OACLgH,YAAanN,EACboN,SAAUrH,GAAK3C,IAAYwE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGzE,IAAS,IAAEK,MAAMuC,EAAE6D,OAAOyD,SAC1DiD,aAAcnN,GAAUK,MACxB0I,MAAO,CAACoB,OAAO,0BAI3BrB,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAAAjB,UACAF,EAAAA,EAAAA,MAACoB,EAAAA,EAAS,CAAAlB,SAAA,EACNG,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAAAnB,UACFG,EAAAA,EAAAA,KAAA,KAAAH,SAAG,gBAEPG,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CACF/G,KAAK,OACLgH,YAAW,WACXC,SAAUrH,GAAK3C,IAAYwE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGzE,IAAS,IAAE0E,KAAK9B,EAAE6D,OAAOyD,SACzDiD,aAAcnN,GAAU0E,KACxBqE,MAAO,CAACoB,OAAO,6BAK/BrB,EAAAA,EAAAA,KAACa,EAAAA,EAAG,CAAAhB,UACAG,EAAAA,EAAAA,KAACc,EAAAA,EAAG,CAAAjB,UACAF,EAAAA,EAAAA,MAACoB,EAAAA,EAAS,CAAAlB,SAAA,EACNG,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAAAnB,SAAC,yBAGPG,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CACF/G,KAAK,SACLiH,SAAUrH,GAAI3C,IAAYwE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGzE,IAAS,IAAEO,MAAOqC,EAAE6D,OAAOyD,SAC1DiD,aAAcnN,GAAUO,mBAM5CkI,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAAzB,SAAA,EACRG,EAAAA,EAAAA,KAAA,UAAQF,UAAU,4BAA4B5F,KAAK,SAASsH,QAASA,IAAK7K,IAAsBD,IAAQmJ,SAAE,YAG1GG,EAAAA,EAAAA,KAAA,UAAQF,UAAU,8BAA8B5F,KAAI,SAAW2F,SAAE,mBAI7EG,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CAACC,OAAQzL,EAAUkQ,KAAK,KAAIhF,UAC9BF,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACC,SAAU1G,GAAmBiG,SAAA,EAC/BG,EAAAA,EAAAA,KAACW,EAAAA,EAAW,CAAAd,SAAC,2BAGbG,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAAAf,UACNG,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACE,SAAUrH,GAAIrF,EAAOqF,EAAE6D,OAAOyD,OAAQlH,KAAK,OAAO1C,KAAK,cAElEmI,EAAAA,EAAAA,MAAC2B,EAAAA,EAAW,CAAAzB,SAAA,EACRG,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mCAAmC5F,KAAK,SAASsH,QAASA,IAAK5M,GAAaD,GAAUkL,SAAC,YACzGG,EAAAA,EAAAA,KAAA,UAAQF,UAAU,qCAAoCD,SAAE,uBAMhF,C,wHCxvBA,MAuIalF,EAAgBA,CAACmK,EAASC,KAMnC,IALA,IAAIC,EAAMF,EAAQ9Q,MAAM,KACpBiR,EAAOD,EAAI,GAAGE,MAAM,WAAW,GAC/BC,EAAOC,KAAKJ,EAAIA,EAAI/M,OAAS,IAC7BoN,EAAIF,EAAKlN,OACTqN,EAAQ,IAAIC,WAAWF,GACrBA,KACFC,EAAMD,GAAKF,EAAKK,WAAWH,GAE/B,OAAO,IAAII,KAAK,CAACH,GAAQP,EAAU,CAAC7K,KAAK+K,GAAM,EAUtCS,EAAgBC,IACzB,IAAKA,EAAQ,OAAOA,EACpB,GAAGA,EAAOhM,SAAS,KAAK,CACpB,IAAIiM,EAAK,GAIT,OAHAD,EAAO3R,MAAM,KAAKwK,SAASqH,IACxBD,GAAK,IAAKC,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,EAAE,IAElDJ,CACX,CACA,OAAOD,EAAOG,OAAO,GAAGC,cAAgBJ,EAAOK,MAAM,EAAE,EAsB9CzF,EAAU0F,IACZ5L,EAAAA,EAAAA,IAAM4L,EACT,CACEC,KAAM,eACNjG,MAAO,CACL+B,aAAc,OACdiB,WAAY,OACZvE,MAAO,UAMNsE,EAAYmD,IAGrB,IAAIA,GAAqB,iBAAPA,EACd,OAAOA,EAKQ,KAFnBA,EAAMA,EAAIC,QAAQ,KAAM,KAEhBnO,SACJkO,EAAMA,EAAInS,MAAM,IAAIwL,KAAI6G,GAAKA,EAAIA,IAAGC,KAAK,KAO7C,MAAO,CAAEC,EAJCzC,SAASqC,EAAIH,MAAM,EAAG,GAAI,IAIxBQ,EAHF1C,SAASqC,EAAIH,MAAM,EAAG,GAAI,IAGrBS,EAFL3C,SAASqC,EAAIH,MAAM,EAAG,GAAI,IAElB,EAGTjD,EAAe2D,IAExB,IAAIC,EAAS3D,EAAS0D,GACtB,QAAcE,IAAXD,EAAsB,OAAOD,EAChC,MAAM,EAAEH,EAAC,EAAEC,EAAC,EAAEC,GAAME,EAMpB,MAHkB,KAAQJ,EAAI,KAAQC,EAAI,KAAQC,EAG/B,GAAG,EAGnB,SAASlN,EAAMsN,EAAOhC,GACzB,MAAMiC,EAAS,GACf,IAAID,EAAO,MAAO,GAF0BE,UAAA9O,OAAA,QAAA2O,IAAAG,UAAA,IAAAA,UAAA,IAG1BF,EAAMG,QAAQ,CAAC,GACjC,IAAK,IAAIvH,EAAI,EAAGA,EAAIoH,EAAM5O,OAAQwH,GAAKoF,EAEnCiC,EAAOG,KAAKJ,EAAMb,MAAMvG,EAAGA,EAAIoF,IAEnC,OAAOiC,CACX,CAEO,MAAM5C,EAAWA,CAACgD,EAAMC,KAE3B,IAAQ,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMjP,QAASkP,EAAW,CAE1B,OADoBD,EAAKE,UAAU,EAAGD,GAAa,KAEvD,CACA,OAAOD,CAAI,EAGFG,EAA2BC,IACpC,MAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAOF,EAAKG,cACZC,EAAQC,OAAOL,EAAKM,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAMH,OAAOL,EAAKS,WAAWF,SAAS,EAAG,KACzCG,EAAQL,OAAOL,EAAKW,YAAYJ,SAAS,EAAG,KAC5CK,EAAUP,OAAOL,EAAKa,cAAcN,SAAS,EAAG,KACtCF,OAAOL,EAAKc,cAAcP,SAAS,EAAG,KACtD,MAAM,GAANvP,OAAUkP,EAAI,KAAAlP,OAAIoP,EAAK,KAAApP,OAAIwP,EAAG,KAAAxP,OAAI0P,EAAK,KAAA1P,OAAI4P,EAAO,C","sources":["components/pos/POS.js","helpers/utils.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'; \r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useGetProductCategoriesQuery, useGetPosProductsQuery } from '../../features/centerSlice';\r\nimport { isColorDark, hexToRgb, chunk, wrapText, Warning, dataURLtoFile } from '../../helpers/utils';\r\nimport labelImg from '../../asset/images/default.png';\r\nimport addNew from '../../asset/images/image.png';\r\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { useSearch } from '../../contexts/SearchContext';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Row, Label, Input, FormGroup, Col, Form } from 'reactstrap';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction POS() {\r\n    const sectionRef = useRef(null);\r\n    const cRef = useRef(null);\r\n    const cntRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const navigator = useNavigate();\r\n    const location = useLocation();\r\n    const { currency, split, cartStocks, cartProducts, openingCash, appKey } = useSelector( state => state.auth );\r\n    const [ key, setKey] = useState(appKey)\r\n    const [appModal , setAppModal] = useState(false)\r\n    const [ openingAmountSet, setOpeningAmount ] = useState(openingCash); \r\n    const [ enteredCash , setEnteredCash ] = useState('');\r\n    const { data, isSuccess } = useGetProductCategoriesQuery();\r\n    const [ products, setProducts ] = useState([])\r\n    const [ catColors, putCats] = useState({})\r\n    const [ noProduct, setNoProduct ] = useState(false)\r\n    const [ prCategories, setCategories ] = useState([])\r\n    const [ initialProducts, setInitialProducts] = useState([]);\r\n    const [ KartProducts, setCartProducts ] = useState(cartProducts);\r\n    const [ currentProduct, setCurrent ] = useState(0);\r\n    const [ Other, toggleOther ] = useState(false);\r\n    const [ otherOpen, setModal ] = useState(false);\r\n    const [ availableStocks, setAvailableStocks ] = useState(cartStocks);\r\n    const [ barcode, setBarcode ] = useState('');\r\n    const [ opened, toggleVegetableModal ] = useState(false);\r\n    const [ number, setNumber ] = useState('');\r\n    const [ editing, setEditing ] = useState(false);\r\n    const [ loadingPhone, setLoading ]= useState(false);\r\n    const [vegetable, setVegetable] = useState({});\r\n    const [custom, setCustom] = useState({image:null, price:0, name:'', barcode:'', stock:0});\r\n    \r\n    const btnStyle = {minHeight:'60px', fontSize:'1.4rem'}\r\n\r\n    useEffect(() => {\r\n\r\n        let inputBuffer = \"\";\r\n        const handleKeyDown = (event) => {\r\n\r\n            const { key } = event;\r\n            // Check for \"Enter\" key to signal the end of a barcode\r\n            if (key === \"Enter\") {\r\n                setBarcode(inputBuffer); // Update the barcode state \r\n                inputBuffer = \"\"; // Reset buffer for the next scan\r\n            } else {\r\n                // Append the key to the buffer (only if it's a character key)\r\n                if (key.length === 1) {\r\n                    inputBuffer += key;\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n        return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n\r\n    }, [barcode]);\r\n\r\n    useEffect(()=> {\r\n        if(barcode) {\r\n            axios.get(`products/barcode/${barcode}`).then(({data})=> {\r\n                addToCart(data.product.id)\r\n                setBarcode('')\r\n            }).catch(()=>{}).finally(()=> null);\r\n        }\r\n        return () => null\r\n    },[barcode])\r\n    \r\n    const allProducts = useGetPosProductsQuery();\r\n    const { searchQuery, sessions, activeSession, displayImage } = useSearch();\r\n\r\n    useEffect(() => {\r\n        if(allProducts.data?.products){\r\n            setProducts(chunk(allProducts.data.products.filter(ite => (ite.name).toLowerCase().includes(searchQuery.toLowerCase())),4))\r\n        }\r\n        return () => setProducts([]);\r\n    },[searchQuery])\r\n\r\n    const handleVegetable = () => toggleVegetableModal(!opened)\r\n\r\n    const scrollTop = e => {\r\n        console.log(cntRef.current.scrollHeight)\r\n        cntRef.current.scrollTo({\r\n            top: 0, // Scroll to the top\r\n            behavior: \"smooth\", // Smooth scrolling effect\r\n        });\r\n\r\n        let el = document.querySelector(`.t-scroller`);\r\n        if(el) {\r\n            el.scrollIntoView({\r\n                behavior:'smooth',\r\n                top: 0\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const fetchPhoneProducts = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            setLoading(true);\r\n            console.log(key);\r\n            if(!key) {\r\n                return setAppModal(!appModal)\r\n            }\r\n            dispatch({ type: \"SET_APP_KEY\", payload: key })\r\n            dispatch({ type:\"LOADING\" });\r\n\r\n            const {data} = await axios.get(`https://pos.dftech.in/sync-products/${key}`);\r\n            if(data.status) {\r\n                toast.success(data.message);\r\n                let fd = new FormData();\r\n                const midFile= dataURLtoFile(`data:application/json;base64,`+data.file, 'client.json');\r\n                fd.append('file', midFile);\r\n\r\n                const {data:resp} = await axios.post('products/sync', fd, {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        \"Content-Type\" : \"multipart/form-data\",\r\n                        'pos-token' : localStorage.getItem('pos-token')\r\n                    }\r\n                });\r\n \r\n                if(resp.status) {\r\n                    toast.success(\"Importing completed\");\r\n                    setTimeout(()=> window.location.reload(), 2400);\r\n                }\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error.message);\r\n            toast.error(\"Couln't fetch products right now!\")\r\n        }\r\n        dispatch({ type:\"STOP_LOADING\" });\r\n        setLoading(false)\r\n    }\r\n\r\n    const addVeg = e => {\r\n        e.preventDefault();\r\n        const copyKartProducts = JSON.parse(JSON.stringify(KartProducts));\r\n        let thisProduct = copyKartProducts[activeSession]?.find(ite => ite.id === vegetable.id);\r\n        // check if the product is already in cart\r\n        if( thisProduct && !split ) {\r\n            // let updatedStock = thisProduct.stock + 1;\r\n            let availableStock = vegetable.quantity - vegetable.stock;\r\n            if( availableStock === -1 ) {\r\n                return document.querySelector('.also[data-id=\"'+vegetable.id+'\"]').classList.add('stock-out');\r\n            }\r\n            // update the remaining stock each product\r\n            setAvailableStocks({...availableStocks, [vegetable.id]: availableStock });\r\n            thisProduct.stock = vegetable.stock;\r\n            setCartProducts(copyKartProducts);\r\n            dispatch({ type: \"CHOOSEN_PRODUCT\", payload:copyKartProducts });\r\n        \r\n        } else {\r\n \r\n            let consumed = Object.values(KartProducts).flat()?.filter( item => item.id === vegetable.id).reduce( (prev, item) => prev + item.stock, 0 )?? 0;\r\n            let availableStock = vegetable.quantity - ( consumed + 1 );\r\n            if( availableStock === -1 ) {\r\n                return document.querySelector('.also[data-id=\"'+vegetable.id+'\"]').classList.add('stock-out');\r\n            }\r\n            setAvailableStocks({...availableStocks, [vegetable.id]: availableStock });\r\n            setCartProducts({...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], vegetable] });\r\n            dispatch({ type: 'CHOOSEN_PRODUCT', payload: {...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], vegetable] } });\r\n\r\n        }\r\n        toggleVegetableModal(!opened)\r\n        scrollToSection()\r\n    }\r\n    \r\n    const addToCart = prID => \r\n    {\r\n        let product = initialProducts.find(ite => ite.id === prID); \r\n        if(product.catName && product.catName.toLowerCase().indexOf('vegetable')!==-1 ) {\r\n            product = {...product, unit:'kg', stock:1}\r\n            setVegetable(product)\r\n            return handleVegetable() \r\n        }\r\n        const copyKartProducts = JSON.parse(JSON.stringify(KartProducts));\r\n        let thisProduct = copyKartProducts[activeSession]?.find(ite => ite.id === prID);\r\n        // check if the product is already in cart\r\n        if( thisProduct && !split ) {\r\n            let updatedStock = thisProduct.stock + 1;\r\n            let availableStock = product.quantity - updatedStock;\r\n            if( availableStock === -1 ) {\r\n                return document.querySelector('.also[data-id=\"'+product.id+'\"]').classList.add('stock-out');\r\n            }\r\n            if(!split) {  // update the current project highlight\r\n                setCurrent(KartProducts[activeSession].findIndex(item => item.id === product.id))\r\n            } else { // update the current project highlight if splittin products is off\r\n                setCurrent(KartProducts[activeSession]?.length??0) \r\n            }\r\n            // update the remaining stock each product\r\n            setAvailableStocks({...availableStocks, [product.id]: availableStock });\r\n            thisProduct.stock = updatedStock;\r\n            setCartProducts(copyKartProducts);\r\n            dispatch({ type: \"CHOOSEN_PRODUCT\", payload:copyKartProducts });\r\n        \r\n        } else {\r\n            setCurrent(KartProducts[activeSession]?.length??0 ) \r\n            product = {...product, stock: 1 }\r\n            let consumed = Object.values(KartProducts).flat()?.filter( item => item.id === product.id).reduce( (prev, item) => prev + item.stock, 0 )?? 0;\r\n            let availableStock = product.quantity - ( consumed + 1 );\r\n            if( availableStock === -1 ) {\r\n                return document.querySelector('.also[data-id=\"'+product.id+'\"]').classList.add('stock-out');\r\n            }\r\n            setAvailableStocks({...availableStocks, [product.id]: availableStock });\r\n            setCartProducts({...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], product] });\r\n            dispatch({ type: 'CHOOSEN_PRODUCT', payload: {...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], product] } });\r\n            // update the current project highlight\r\n        }\r\n        \r\n    }\r\n\r\n    const resetCart = () => {\r\n        setCartProducts( {...KartProducts,[activeSession]: [] });\r\n        dispatch({ type: \"CHOOSEN_PRODUCT\", payload: {...KartProducts, [activeSession]: []} });\r\n    }\r\n    // Reverse the stock decrement here\r\n    const removeFromCart = index => {\r\n        setCartProducts( {...KartProducts,[activeSession]: KartProducts[activeSession].filter((item, i)=> i!== index) });\r\n        dispatch({ type: 'CHOOSEN_PRODUCT', payload: {...KartProducts,[activeSession]: KartProducts[activeSession].filter((item, i)=> i!== index) } });\r\n    }\r\n\r\n    const toggleModal = () => setModal(!otherOpen)\r\n\r\n    const openTheFuckingDay = e => {\r\n        e.preventDefault();\r\n\r\n        if(enteredCash==='' || enteredCash === '0') return Warning(\"You can't open without a single cash amount in drawer!\");\r\n\r\n        dispatch({ type: \"LOADING\" });\r\n        axios.post(\"pos/opening-day-cash-amount\", {cash: currency + enteredCash}).then(({data}) => {\r\n            \r\n            if(data.status) {\r\n                toast.success(data.message);\r\n                dispatch({ type: \"SET_CASH\", payload: data.created })\r\n                setOpeningAmount(data.created)\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n        }).catch(()=>{}).finally(()=>dispatch({\r\n            type: \"STOP_LOADING\"\r\n        }))\r\n\r\n    }\r\n\r\n    const handleImgError = e => {\r\n        e.target.src = labelImg\r\n    }\r\n    // category se filter karega\r\n    const filterProducts = catID => {\r\n        setProducts(chunk(allProducts.data.products.filter(ite => ite.category_id===catID),4))\r\n        toggleOther(!catID)\r\n    }\r\n\r\n    const scrollToSection = () => {\r\n        let el = document.querySelector(`.chosen-product.selected`);\r\n        if(el) {\r\n            el.scrollIntoView({\r\n                behavior:'smooth',\r\n                block: 'center'\r\n            })\r\n        }\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if( isSuccess ) {\r\n            setCategories(data.categories)\r\n            const cats = [];\r\n            data.categories.forEach( cat => (cats[cat.id] = cat.color));\r\n            putCats(cats);\r\n        }\r\n        if(allProducts.isSuccess) {\r\n            if(allProducts.data.products.length === 0 ){\r\n                setNoProduct(true);\r\n            } else {\r\n                setNoProduct(false)\r\n            }\r\n            setProducts(chunk(allProducts.data.products, 4))\r\n            setInitialProducts(allProducts.data.products);\r\n        }\r\n        return () => {\r\n            setInitialProducts([])\r\n            setProducts([])\r\n        }\r\n    },[ isSuccess, data, allProducts.data, allProducts.isSuccess, navigator]);\r\n\r\n    useEffect(()=> {\r\n        setCartProducts(cartProducts);\r\n        scrollToSection()\r\n        return () => {\r\n            setCartProducts([]);\r\n        }\r\n    },[ cartProducts ]);\r\n\r\n    useEffect(()=> {\r\n        if(cartStocks){\r\n            setAvailableStocks(cartStocks)\r\n        }\r\n        return () => setAvailableStocks({})\r\n    },[location, cartStocks])\r\n \r\n    const base = {\r\n        height:'69vh',\r\n        placeContent:'center',\r\n        display:'grid',\r\n        placeItems:'center',\r\n        width:'100%',\r\n        backgroundColor: '#dadada', \r\n        marginTop:'5%'\r\n    }\r\n\r\n    const addCustomProduct = async e => \r\n    {\r\n        e.preventDefault();\r\n        const fd = new FormData();\r\n        fd.append('name', custom.name);\r\n        fd.append('price', custom.price);\r\n        fd.append('barcode', custom.barcode);\r\n        fd.append('quantity', custom.stock);\r\n        fd.append('image', custom.image);\r\n        if(!custom.name || !custom.price || !custom.barcode) {\r\n            return Warning('Fill the required fields');\r\n        }\r\n\r\n        dispatch({ type:\"LOADING\" })\r\n        const {data} = await axios.post(`/products/create-custom`, fd, {\r\n            headers:{ \r\n                \"Accept\"       :\"application/json\",\r\n                \"Content-Type\" : \"multipart/form-data\",\r\n                \"pos-token\"    : localStorage.getItem('pos-token')\r\n            }\r\n        });\r\n        dispatch({ type:\"STOP_LOADING\" })\r\n        if( data.status ) {\r\n            toast.success(data.message);\r\n        } else { \r\n            toast.error(data.message);\r\n        }       \r\n    }\r\n\r\n    const handleFile = e => {\r\n        const file = e.target.files[0];\r\n        setCustom({...custom, image: file})\r\n    }\r\n    \r\n    const {type:screenType} = useParams();\r\n    \r\n    const changeInput = input => {\r\n        if(editing) {\r\n            let newAmount\r\n            if(input==='clear') {\r\n                newAmount = '0'\r\n                setNumber(''); \r\n            } else {\r\n                newAmount = number + input;  \r\n                setNumber(number + input); \r\n            } \r\n            setCartProducts( {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                if(i=== currentProduct ) {\r\n                    item = {...item, price:newAmount}\r\n                }\r\n                return item\r\n            }) });\r\n        }\r\n    }\r\n\r\n    const fs2 = {fontSize: '2rem'}\r\n\r\n    return (\r\n        <>\r\n            <div className={`col-md-12 position-relative ${screenType==='customer' && \"d-grid justify-content-center\"}`} >\r\n                { (Object.keys(openingAmountSet).length === 0 || !openingAmountSet.status === true) && screenType!=='customer'? (\r\n                    <div className='overlay' style={{width:'100vw', height:'100vh',position:'absolute'}}>\r\n                        <Modal isOpen={true}>\r\n                            <Form onSubmit={openTheFuckingDay}>\r\n                                <ModalHeader>\r\n                                    <b>Day Opening!</b> <p>Good morning </p> \r\n                                </ModalHeader>\r\n                                <ModalBody>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    <b>Enter Opening Cash In Drawer</b>\r\n                                                </Label>\r\n                                                <Input \r\n                                                    type={'text'}\r\n                                                    placeholder={currency}\r\n                                                    onChange={e => setEnteredCash(e.target.value)}\r\n                                                    style={{border:'1px solid gray'}}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ModalBody>\r\n                                <ModalFooter className={'justify-content-center'}>\r\n                                    <Col md={5} className='btn btn-light' onClick={()=> navigator('/')} >\r\n                                        Back\r\n                                    </Col>\r\n                                    <Col md={5} >\r\n                                        <button className='w-100 btn btn-success' type={`submit`} > Start </button>\r\n                                    </Col>\r\n                                </ModalFooter>\r\n                            </Form>\r\n                        </Modal>\r\n                    </div>\r\n                ): null}\r\n                {\r\n                    screenType==='customer' && <div >\r\n                        <h2 className='text-center' style={{ fontSize:'3rem', fontWeight:'900' }}>\r\n                        {currency} {parseFloat(KartProducts[activeSession]?.reduce((acc, cur)=> acc + (cur.stock * parseFloat(cur.price)),0)).toFixed(2)}\r\n                        </h2>\r\n                    </div>\r\n                }\r\n                <div className={`col-md-4 pt-3 ${screenType==='customer'?'':'position-fixed'}`} style={{filter:Object.keys(openingAmountSet).length === 0 || !openingAmountSet.status === true ? 'blur(5px)':'',width:screenType==='customer'?'100%':'38.8%'}}>\r\n                    { sessions.map( session => (<div key={session} ref={sectionRef} className={`container ms-2 put-here ${activeSession===session?'':'d-none'} ${KartProducts[activeSession] && KartProducts[activeSession].length && screenType!=='customer' ?'action-visible':''}`} \r\n                        style={{\r\n                            borderRadius:'20px',\r\n                            backgroundColor:'#dadada'\r\n                    }}>\r\n                        <div className={`card ${KartProducts[activeSession] && KartProducts[activeSession].length? 'd-none':''}`} style={base}>\r\n                            <i className=\"fa-solid fa-cart-shopping\" style={{fontSize:'60px'}} />\r\n                            <b className=\"mt-3\"> Start adding products </b>\r\n                        </div>\r\n                        { KartProducts[activeSession] && KartProducts[activeSession].map( (item,index) => (<div key={index} className={`row chosen-product mt-2 ${currentProduct===index && 'selected'}`} data-id={item.id} onClick={()=> setCurrent(index)}>\r\n                            <div className=\"d-flex w-100\">\r\n                                <b style={{maxWidth:'24rem'}}> {item.name} </b>\r\n                                <strong className=\"price\" data-price={item.price}>{currency +' '+ (item.stock * parseFloat(item.price)).toFixed(2)}</strong>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <span className=\"quantity\"> {parseFloat(item.stock).toFixed(2)} </span>\r\n                                {item.id!=='quick' && <p className=\"ms-3 mt-1\">{`${currency + ' ' + parseFloat(item.price).toFixed(2)} / ${item.unit? item.unit : 'Units'}`}</p>}\r\n                            </div>\r\n                            <button className=\"btn\" onClick={()=>removeFromCart(index)}><i className=\"mdi mdi-close\"/></button>\r\n                        </div>))}\r\n                    </div>))}\r\n                    <div className={`container ms-2 mt-3 actionBar ${KartProducts[activeSession] && KartProducts[activeSession].length && screenType!=='customer' ? '':'d-none'}`} style={{height: '54vh'}}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12 d-flex\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <Link className=\"btn btn-light btn-rounded text-white\" to={`/payment/${activeSession}`} style={{backgroundColor:'#04537d',width:'93%'}}> Payment </Link>\r\n                                </div>\r\n                                <div className=\"col-sm-6 d-flex justify-content-end align-items-center position-relative\">\r\n                                    <div className='position-absolute'>\r\n                                        <p style={{lineHeight:2.1}}><b> Total: &nbsp; \r\n                                        <span className=\"total-amount\" style={{left:0,fontSize:'2.3rem'}}>{currency} {parseFloat(KartProducts[activeSession]?.reduce((acc, cur)=> acc + (cur.stock * parseFloat(cur.price)),0)).toFixed(2)} </span> </b></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            {[1,2,3].map( it => <div className=\"col-sm-3\" key={it} onClick={()=> changeInput(it)}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing} style={btnStyle}> <b> {it} </b> </button>\r\n                            </div>)}\r\n                            <div className=\"col-sm-3\" onClick={resetCart}>\r\n                                <button className=\"btn btn-light text-dark\" type=\"button\" style={btnStyle}> <b>Delete</b> </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            { [4,5,6].map( it => <div className=\"col-sm-3\" key={it} onClick={()=> changeInput(it)}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing} style={btnStyle}> <b> {it} </b> </button>\r\n                            </div>)}\r\n                            <div className=\"col-sm-3\"/>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            {[7,8,9].map( ite => <div className=\"col-sm-3\" key={ite} onClick={()=> changeInput(ite)}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing} style={btnStyle}> <b> {ite} </b> </button>\r\n                            </div>)}\r\n                            <div className=\"col-sm-3\">\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            <div className=\"col-sm-3\">\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing} onClick={()=> changeInput('.')} style={btnStyle}> <b> . </b> </button>\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing} onClick={()=> changeInput(0)} style={btnStyle}> <b> 0 </b> </button>\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing} onClick={()=>changeInput('clear')} style={btnStyle}> <b>Clear</b> </button>\r\n                            </div>\r\n                            <div className=\"col-sm-3\" onClick={()=> setEditing(!editing)}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" > <b> {!editing?'Edit Price':'Done'} </b> </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {screenType!=='customer' ? <div className=\"col-md-7 position-absolute library\" style={{\r\n                    height:'70vh',\r\n                    right:'5px',\r\n                    filter: Object.keys(openingAmountSet).length === 0 || !openingAmountSet.status === true ? 'blur(5px)':''\r\n                    }}\r\n                    \r\n                >\r\n                    <div className=\"position-fixed\" style={{backgroundColor:'#a0bfcf',minHeight:70, width:'58%',zIndex:100}}>\r\n                        <div className=\"category row ms-5\" style={{flexWrap:'nowrap'}} ref={cRef}>\r\n                            { prCategories.map((Cat,i) => (<div key={i} className={`category-item ${i===0 ?'active':''}`} style={{color:isColorDark(hexToRgb(Cat.color))? 'white':'black', background:Cat.color}} onClick={()=>filterProducts(Cat.id)}>\r\n                                {(Cat.name).includes('/') ? (Cat.name).split('/')[1]: Cat.name }\r\n                            </div>))}\r\n                            <div className='category-item' onClick={()=> filterProducts(null)} style={{background:\"azure\", width:200, marginRight:80}}>\r\n                                Other \r\n                            </div>\r\n                            <div className='position-fixed t-scroller' style={{bottom:40,right:40}} onClick={scrollTop}>\r\n                                <button className='btn btn-rounded bg-white' style={{border:\"2px dashed\"}}>\r\n                                    <i className='fa fa-arrow-up'/>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <button className={`btn prev position-relative`} style={{top:5,zIndex:2,left:-30}} onClick={()=> cRef.current.scrollBy({left:-200, behavior:'smooth'})}>\r\n                            <i style={fs2} className=\"fa-solid fa-circle-chevron-left text-dark\"/>\r\n                        </button>\r\n                        <button className=\"btn next position-absolute\" style={{right:-10,top:5,zIndex:2 }} onClick={()=>cRef.current.scrollBy({left:200, behavior:'smooth'})}>\r\n                            <i style={fs2} className=\"fa-solid fa-circle-chevron-right text-dark\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"contents\" ref={cntRef}>\r\n                        {\r\n                            Other && (<div className='row mt-3' >\r\n                                <div className='col-md-3 also' onClick={()=>toggleModal(!otherOpen)}>\r\n                                    <div className='cell'>\r\n                                        <div className='w-100'>\r\n                                            <img className='title-img' src={addNew} alt={\"Other\"}/>\r\n                                        </div>\r\n                                        <div className='w-100' style={{color:'black', background:'lightgray'}}>\r\n                                            <strong className='wrapped-text'>\r\n                                                Add New &nbsp;\r\n                                                <span className='fa fa-plus fs-5' />\r\n                                            </strong>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>)\r\n                        }\r\n                        { products.map( (row, k) => (<div className={'row mt-3'} key={k}>\r\n                                {row.map((product,i ) => (\r\n                                    <div key={i} className={`col-md-3 also ${(product.quantity - product.stock)===0 || product.quantity - cartStocks[product.id] === 0 || parseInt(product.quantity)=== 0 ? 'stock-out':''}`} onClick={()=>addToCart(product.id)} data-id={product.id}>\r\n                                        <div className='cell' style={{minHeight:135}}>\r\n                                            {\r\n                                            displayImage &&\r\n                                            <div className='w-100'>\r\n                                                <img className='title-img' src={process.env.REACT_APP_BACKEND_URI+'images/'+product.image} onError={handleImgError} alt={product.name}/>\r\n                                            </div>\r\n                                            }\r\n                                            <div className='w-100' style={{minHeight: !displayImage && 'inherit' ,color:isColorDark(hexToRgb(catColors[product.category_id]))? 'white':'black', background:catColors[product.category_id]}}>\r\n                                                <strong className='wrapped-text' style={{alignContent:'center'}}>\r\n                                                    {wrapText(product.name, 100)}\r\n                                                    {\r\n                                                        product.name.length > 100 &&\r\n                                                    <span className='tooltiptext'>{product.name}</span>\r\n                                                    }\r\n                                                </strong>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='extras'>\r\n                                            <div className='tax'>\r\n                                                <small>Tax</small>\r\n                                                <div style={{fontSize:'800'}}>{product.tax}</div>\r\n                                            </div>\r\n                                            <div className='stock'>\r\n                                                <small>Items : </small>\r\n                                                <div style={{fontSize:'800'}}>{ product.quantity - (cartStocks[product.id]?? 0) }</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>))\r\n                        }\r\n                        \r\n                    </div>\r\n                    {products.length === 0 && !Other && (<div className=\"lib-loader justify-content-center align-items-center\" \r\n                    style={{height:'-webkit-fill-available'}} >\r\n                        {\r\n                            noProduct && isSuccess? <>\r\n                            <h1> No products... </h1>\r\n                            <button className='btn btn-rounded btn-warning fs-4' onClick={fetchPhoneProducts}> \r\n                                { loadingPhone? <i className='fa fa-spin fa-spinner'/>:'Sync phone products'} \r\n                            </button> \r\n                            </> : \r\n                            <i className='fa fa-spin fa-spinner' />\r\n                        }\r\n                        \r\n                    </div>)}\r\n                </div>: null}\r\n            </div>\r\n\r\n            <Modal isOpen={otherOpen}>\r\n                <Form onSubmit={addCustomProduct}>\r\n                <ModalHeader >\r\n                    Add Custom Product\r\n                </ModalHeader>\r\n                <ModalBody style={{padding:60}}>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Name </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    onChange={e => setCustom({...custom, name: e.target.value})}\r\n                                    defaultValue={custom.name}\r\n                                    className='input'\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Price </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    className='input'\r\n                                    onChange={e => setCustom({...custom, price: e.target.value})}\r\n                                    defaultValue={custom.price}\r\n                                    placeholder={currency}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Stock </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    className='input'\r\n                                    onChange={e => setCustom({...custom, stock: e.target.value})}\r\n                                    defaultValue={custom.stock}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Barcode </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    className='input'\r\n                                    placeholder='Enter barcode'\r\n                                    onChange={e => setCustom({...custom, barcode: e.target.value})}\r\n                                    defaultValue={custom.barcode}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <label className='custom-file-upload' > \r\n                            <i className={'fa fa-paperclip'} /> &nbsp;\r\n                            <Input \r\n                                type='file' \r\n                                className='d-none'\r\n                                accept='image/*'\r\n                                onChange={handleFile}\r\n                            />\r\n                            Upload Product Image\r\n                        </label>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className='btn btn-light btn-rounded' type='button' onClick={()=> toggleModal(!otherOpen)} > Close </button>\r\n                    <button className='btn btn-primary btn-rounded'> Submit </button>\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            <Modal isOpen={opened}>\r\n                <Form onSubmit={addVeg}>\r\n                    <ModalHeader>\r\n                        <b> Add Vegetable </b>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        <b> Price </b>\r\n                                    </Label>\r\n                                    <Input \r\n                                        type='text'\r\n                                        placeholder={currency}\r\n                                        onChange={e => setVegetable({...vegetable, price:e.target.value})}\r\n                                        defaultValue={vegetable.price}\r\n                                        style={{border:'1px solid gray'}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        <b> Weight </b>\r\n                                    </Label>\r\n                                    <Input \r\n                                        type='text'\r\n                                        placeholder={`KGs / gm`}\r\n                                        onChange={e => setVegetable({...vegetable, unit:e.target.value})}\r\n                                        defaultValue={vegetable.unit}\r\n                                        style={{border:'1px solid gray'}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Quantity (optional)\r\n                                    </Label>\r\n                                    <Input \r\n                                        type='number'\r\n                                        onChange={e=> setVegetable({...vegetable, stock: e.target.value})}\r\n                                        defaultValue={vegetable.stock}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        <button className='btn btn-light btn-rounded' type='button' onClick={()=> toggleVegetableModal(!opened)} >\r\n                            Cancel\r\n                        </button>\r\n                        <button className='btn btn-rounded btn-success' type={`submit`} > Add </button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            <Modal isOpen={appModal} size='sm'>\r\n                <Form onSubmit={fetchPhoneProducts}>\r\n                    <ModalHeader>\r\n                        Enter application key \r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Input onChange={e=> setKey(e.target.value)} type='text' name='appKey'/>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className='btn btn-light btn-sm btn-rounded' type='button' onClick={()=> setAppModal(!appModal)}>Cancel</button>\r\n                        <button className='btn btn-success btn-sm btn-rounded' > Submit </button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default POS","import $ from 'jquery'\r\nimport toast from 'react-hot-toast';\r\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport const validate = (fields,exceptions=[]) => {\r\n    let result={}\r\n    var shouldGo=true;\r\n    if(exceptions.length)\r\n    {\r\n        exceptions.forEach( item => {\r\n            delete fields[item]\r\n        })\r\n    }\r\n    Object.keys(fields).forEach(f =>\r\n    {\r\n        let shout = '';\r\n        let invalid = false;\r\n        let tInputs = [$(`input[name=${f}]`), $(`select[name=${f}]`), $(`textarea[name=${f}]`), $(`.${f}`)]\r\n        if(fields[f]==null || fields[f].length===0)\r\n        {\r\n            result[f]=`Required!`;\r\n            shouldGo=false;\r\n            invalid = true;\r\n        }\r\n        tInputs.forEach( input => {\r\n\r\n            let minLength = $(input).attr('type')!== 'date' ? $(input).attr('min'): 0;\r\n            let maxLength = $(input).attr('max');\r\n            let type = $(input).attr('cast');\r\n            let isDate = $(input).attr('type')==='date' && $(input).attr('req');\r\n            if($(input).val()?.length && (minLength || maxLength))\r\n            {\r\n                if($(input).val().length < parseInt(minLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should be of at least ${minLength} characters!`\r\n                    result[f] = shout;\r\n                }\r\n                if($(input).val().length > parseInt(maxLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should not be greater than ${maxLength} characters!`;\r\n                    result[f] = shout;\r\n                }\r\n            }\r\n            if(type)\r\n            { \r\n                if(input.val() && type === 'num')\r\n                {\r\n                    if(parseInt($(input).val().length )!== $(input).val().length) {\r\n                        shout= `Should be in numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n                if( $(input).val() && type=== 'str' )\r\n                {\r\n                    if( /^([^0-9]*)$/.test($(input).val())===false )\r\n                    {\r\n                        shout= `Should not contain numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n            }\r\n            if(isDate)\r\n            {\r\n                if(!isValidDate($(input).val(),18))\r\n                {\r\n                    invalid = true\r\n                    shout = 'Invalid date';\r\n                    result[f] = shout;\r\n                } else {\r\n                    shout = '';\r\n                }\r\n                // return\r\n            }\r\n            if(shout)   \r\n            {\r\n                if($(input).parents('.col-md-12, .col').find('small.text-danger').length)\r\n                {\r\n                    $(input).parents('.col-md-12, .col').find('small.text-danger').text(shout)\r\n                } else {\r\n                    $(input).parents('.col-md-12, .col').append('<small class=\"text-danger\">'+shout+'</small>')\r\n                }\r\n            } else {\r\n                $(input).parents('.col-md-12, .col').find('small.text-danger').remove()\r\n            }\r\n            if(invalid){\r\n                shouldGo = false;\r\n                $(input).addClass('placeholder-error')\r\n                .attr('placeholder',result[f]).css('border','1px solid red');\r\n            } else {\r\n                $(input).removeClass('placeholder-error').attr('placeholder',result[f]).css('border','');\r\n            }\r\n        })\r\n    })\r\n    return {result, shouldGo};\r\n}\r\n\r\nexport const getCurrentDate = (delimiter='-') => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year+delimiter+month+delimiter+day}`;\r\n}\r\n\r\nexport const formatDate = (date=null,format='Ymd') => {\r\n    const dateObj = date?new Date(date): new Date();\r\n    const year = dateObj.getFullYear();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(dateObj.getDate()).padStart(2, '0');\r\n    if(format[0]==='Y')\r\n    {\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n    if(format[0]==='d')\r\n    {\r\n        return `${day}-${month}-${year}`;\r\n    }\r\n}\r\n\r\nexport const getCurrentDay = () => {\r\n    return daysOfWeek[(new Date()).getDay()];\r\n}\r\n\r\nexport const getCurrentTime = () => {\r\n    const currentDate = new Date();\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nexport const toBase64 = blob => {\r\n\r\n}\r\n\r\nexport const dataURLtoFile = (dataurl, filename) => {\r\n    var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[arr.length - 1]), \r\n        n = bstr.length, \r\n        u8arr = new Uint8Array(n);\r\n    while(n--){\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\nexport const isValidDate = ( date, range ) => {\r\n    let today = getCurrentDate();\r\n    let year = today.split('-')[0];\r\n    let intended = new Date(today.replace(year, (parseInt(year)-range)));\r\n    return intended > new Date(date)\r\n}\r\n\r\nexport const capitalFirst = (string) => {\r\n    if (!string) return string; // Handle empty or null strings\r\n    if(string.includes(' ')){\r\n        let str= '';\r\n        string.split(' ').forEach( part => {\r\n           str+=' '+ part.charAt(0).toUpperCase() + part.slice(1); \r\n        })\r\n        return str;\r\n    }\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const getDocumentName = id => {\r\n\r\n    const documents = {\r\n        1 : 'VISIT PHOTO',\r\n        2 : 'AADHAAR CARD',\r\n        3 : 'VOTER CARD',\r\n        4 : 'GROUP PHOTO',\r\n        5 : 'CGT_FIRST',\r\n        6 : 'CGT_SECOND',\r\n        7 : 'CIBIL',\r\n        8 : 'SANCTION LETTER',\r\n        9 : 'KYC',\r\n        10 : 'BANK PASSBOOK',\r\n        11 : 'RELATION PROOF DOCUMENT',\r\n    }\r\n    return documents[id];\r\n    \r\n}\r\n\r\nexport const Warning = msg => {\r\n    return toast(msg,\r\n        {\r\n          icon: '⚠️',\r\n          style: {\r\n            borderRadius: '10px',\r\n            background: '#333',\r\n            color: '#fff',\r\n          },\r\n        }\r\n    );\r\n}\r\n\r\nexport const hexToRgb = (hex) => {\r\n    // Remove the '#' if present\r\n\r\n    if(!hex || typeof hex == 'object'){\r\n        return hex\r\n    }\r\n\r\n    hex = hex.replace(/^#/, '');\r\n    // Convert shorthand hex (e.g., #03F) to full form (e.g., #0033FF)\r\n    if (hex.length === 3) {\r\n        hex = hex.split('').map(h => h + h).join('');\r\n    }\r\n    // Convert hex to RGB\r\n    const r = parseInt(hex.slice(0, 2), 16);\r\n    const g = parseInt(hex.slice(2, 4), 16);\r\n    const b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport const isColorDark = (hexColor) => {\r\n    // Convert hex color to RGB\r\n    let output = hexToRgb(hexColor)\r\n    if(output === undefined) return hexColor\r\n    const { r, g, b } = output\r\n\r\n    // Calculate the luminance\r\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n\r\n    // Return true if the color is dark, else false\r\n    return luminance < 128;\r\n}\r\n\r\nexport function chunk(array, size, uncategorized = false) {\r\n    const result = [];\r\n    if(!array) return []\r\n    if(uncategorized) array.unshift({})\r\n    for (let i = 0; i < array.length; i += size) {\r\n        // Use slice to get a chunk of the specified size and push it to the result array\r\n        result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const wrapText = (text, maxLength) => {\r\n\r\n    if (text?.length > maxLength) {\r\n        let truncatedText = text.substring(0, maxLength) + '...';\r\n        return truncatedText;\r\n    }\r\n    return text\r\n}\r\n\r\nexport const formatDatefromTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    const seconds = String(date.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n  "],"names":["_KartProducts$activeS9","_KartProducts$activeS10","sectionRef","useRef","cRef","cntRef","dispatch","useDispatch","navigator","useNavigate","location","useLocation","currency","split","cartStocks","cartProducts","openingCash","appKey","useSelector","state","auth","key","setKey","useState","appModal","setAppModal","openingAmountSet","setOpeningAmount","enteredCash","setEnteredCash","data","isSuccess","useGetProductCategoriesQuery","products","setProducts","catColors","putCats","noProduct","setNoProduct","prCategories","setCategories","initialProducts","setInitialProducts","KartProducts","setCartProducts","currentProduct","setCurrent","Other","toggleOther","otherOpen","setModal","availableStocks","setAvailableStocks","barcode","setBarcode","opened","toggleVegetableModal","number","setNumber","editing","setEditing","loadingPhone","setLoading","vegetable","setVegetable","custom","setCustom","image","price","name","stock","btnStyle","minHeight","fontSize","useEffect","inputBuffer","handleKeyDown","event","length","window","addEventListener","removeEventListener","axios","get","concat","then","_ref","addToCart","product","id","catch","finally","allProducts","useGetPosProductsQuery","searchQuery","sessions","activeSession","displayImage","useSearch","_allProducts$data","chunk","filter","ite","toLowerCase","includes","fetchPhoneProducts","async","e","preventDefault","console","log","type","payload","status","toast","success","message","fd","FormData","midFile","dataURLtoFile","file","append","resp","post","headers","localStorage","getItem","setTimeout","reload","error","prID","_copyKartProducts$act2","find","catName","indexOf","_objectSpread","unit","copyKartProducts","JSON","parse","stringify","thisProduct","updatedStock","availableStock","quantity","document","querySelector","classList","add","_KartProducts$activeS3","_KartProducts$activeS4","findIndex","item","_KartProducts$activeS5","_KartProducts$activeS6","_Object$values$flat$f2","_Object$values$flat2","_KartProducts$activeS7","_KartProducts$activeS8","consumed","Object","values","flat","reduce","prev","toggleModal","handleImgError","target","src","labelImg","filterProducts","catID","category_id","scrollToSection","el","scrollIntoView","behavior","block","categories","cats","forEach","cat","color","base","height","placeContent","display","placeItems","width","backgroundColor","marginTop","screenType","useParams","changeInput","input","newAmount","map","i","fs2","_jsxs","_Fragment","children","className","keys","_jsx","style","position","Modal","isOpen","Form","onSubmit","Warning","cash","_ref2","created","ModalHeader","ModalBody","Row","Col","FormGroup","Label","Input","placeholder","onChange","value","border","ModalFooter","md","onClick","fontWeight","parseFloat","acc","cur","toFixed","session","ref","borderRadius","index","maxWidth","removeFromCart","Link","to","lineHeight","left","it","disabled","resetCart","right","zIndex","flexWrap","Cat","isColorDark","hexToRgb","background","marginRight","bottom","current","scrollHeight","scrollTo","top","scrollBy","addNew","alt","row","k","_cartStocks$product$i","parseInt","process","onError","alignContent","wrapText","tax","padding","defaultValue","accept","files","_copyKartProducts$act","_Object$values$flat$f","_Object$values$flat","_KartProducts$activeS","_KartProducts$activeS2","size","dataurl","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","capitalFirst","string","str","part","charAt","toUpperCase","slice","msg","icon","hex","replace","h","join","r","g","b","hexColor","output","undefined","array","result","arguments","unshift","push","text","maxLength","substring","formatDatefromTimestamp","timestamp","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getSeconds"],"sourceRoot":""}