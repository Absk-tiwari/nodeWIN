{"version":3,"file":"static/js/429.0e12047f.chunk.js","mappings":"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","sources":["components/config/Notes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\r\nimport { useGetNotesQuery } from '../../features/centerSlice';\r\nimport Keyboard from 'react-simple-keyboard';\r\n\r\nexport default function Notes() {\r\n    const [fields, setFields] = useState({})\r\n    const dispatch = useDispatch();\r\n\r\n    const {currency} = useSelector( state => state.auth )\r\n    const [notes, setNotes] = useState([]);\r\n    const [open, setModal] = useState(false);\r\n    const [image, setImage] = useState(null);\r\n    const {data, isSuccess} = useGetNotesQuery();\r\n\r\n    const toggleModal = () => setModal(!open)\r\n\r\n    const change = e => setFields({...fields, [e.target.name]:e.target.value})\r\n\r\n    const deleteNote = (id) => {\r\n\r\n        if(!window.confirm('Are you sure?')) return;\r\n\r\n        dispatch({type:\"LOADING\"});\r\n\r\n        axios.get(`/notes/remove/${id}`).then(({data})=> {\r\n            console.log(data)\r\n            setNotes(notes.filter(item => item.id!== id));\r\n        }).catch(err => {})\r\n        .finally(()=> dispatch({type:\"STOP_LOADING\"}));\r\n        \r\n    }\r\n\r\n    const createNote = e => {\r\n        console.log(fields, notes)\r\n        e.preventDefault();\r\n        if(!image) return toast.error(\"Choose an image!\");\r\n        let fd = new FormData();\r\n        fd.append('image', image);\r\n        fd.append('amount', fields.amount);\r\n        if(notes.some( n => n.amount === fields.amount)) {\r\n            return toast.error(`${fields.amount} note is already added!`);\r\n        }\r\n        dispatch({ type:\"LOADING\" });\r\n\r\n        axios.post(`/notes/create`, fd , {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                \"Content-Type\" : \"multipart/form-data\",\r\n                'pos-token' : localStorage.getItem('pos-token')\r\n            }\r\n        }).then(({data}) => {\r\n            if(data.status) {\r\n                toast.success(\"Note added!\");\r\n                toggleModal()\r\n            }\r\n            setNotes([...notes, data.note])\r\n        }).catch( er => toast.error(er.response?.responseText?? 'Something went wrong!') )\r\n        .finally(() => dispatch({ type: \"STOP_LOADING\" }) )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(isSuccess) {\r\n            setNotes(data.notes)\r\n        }\r\n    },[data, isSuccess])\r\n    const [position, setPosition] = useState({x: window.screen.availWidth / 3, y: window.screen.availHeight / 3 });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [offset, setOffset] = useState({  x: 0, y: 0  });\r\n\r\n    const handleMouseDown = (e) => {\r\n        setDragging(true);\r\n        setOffset({\r\n          x: e.clientX - position.x,\r\n          y: e.clientY - position.y,\r\n        });\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!dragging) return;\r\n        setPosition({\r\n            x: e.clientX - offset.x,\r\n            y: e.clientY - offset.y,\r\n        });\r\n    }\r\n    const handleMouseUp = () => setDragging(false);\r\n    const [ focused, setFocused ] = useState('');\r\n    const [scale, setScale] = useState(localStorage.getItem('_keyboard_scale')??1); // Default scale (1 = 100%)\r\n    const decrease = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.max(scale - 0.1, 0.5))\r\n        setScale(prev => Math.max(prev - 0.1, 0.5))\r\n    }\r\n    const increase = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.min(JSON.parse(scale) + 0.1, 2))\r\n        setScale(prev => Math.min(JSON.parse(prev) + 0.1, 2))\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"d-grid mt-3\" >\r\n                    <div id=\"category\">\r\n                        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <button className=\"btn btn-sm btn-success\" onClick={toggleModal}> Add New</button>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"table-responsive w-100 categoryTable\">\r\n                                        <table className='table table-bordered' style={{borderRadius:10}}>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.No</th>\r\n                                                    <th>Amount</th>\r\n                                                    <th>Image</th>\r\n                                                    <th>Status</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {notes.map( (item,i) => (\r\n                                                    <tr key={item.id}>\r\n                                                        <td>{++i}</td>\r\n                                                        <td> {currency} {item.amount} </td>\r\n                                                        <td><img src={process.env.REACT_APP_BACKEND_URI+'images/'+item.image} style={{ borderRadius:0,width:60 }} alt='' /></td>\r\n                                                        <td>\r\n                                                            <input type={`checkbox`} style={{display:'none'}} id={`btn`+item.id} name={'status'} defaultChecked={item.status} className='status'/>\r\n                                                            <label htmlFor={`btn`+item.id} />\r\n                                                            <div className='plate'/>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <button className={`btn btn-danger btn-sm`} onClick={()=>deleteNote(item.id)} >\r\n                                                                Delete\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Modal isOpen={open} toggle={toggleModal} > \r\n                <Form onSubmit={createNote} >\r\n                    <ModalHeader > Update Product </ModalHeader>\r\n                        <ModalBody>\r\n                            <Container>\r\n                                <Row>\r\n                                    <FormGroup>\r\n                                        <Label> Amount </Label>\r\n                                        <Input\r\n                                            type={'text'}\r\n                                            name='amount'\r\n                                            onClick={()=> setFocused('amount')}\r\n                                            onBlur={()=> setFocused(null)}\r\n                                            pattern=\"^\\d+(\\.\\d+)?$\"\r\n                                            onChange={change}\r\n                                            value={fields.amount}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Row>\r\n                                <Row>\r\n                                    <FormGroup>\r\n                                        <Label> Image </Label>\r\n                                        <Input \r\n                                            type='file'\r\n                                            accept='image/*'\r\n                                            onChange={e => setImage(e.target.files[0])}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Row> \r\n                            </Container>\r\n                        </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-light btn-rounded\" type=\"button\" onClick={toggleModal}>\r\n                            Close\r\n                        </button>\r\n                        <button className=\"btn btn-success btn-rounded\" type=\"submit\" >\r\n                            Upload\r\n                        </button>\r\n                    </ModalFooter> \r\n                </Form>\r\n            </Modal>\r\n            {focused && <div className='mt-4 position-fixed w-50' style={{zIndex:9999, top:60 }}>\r\n            <div\r\n                style={{\r\n                    overflow: \"hidden\",\r\n                    position: \"relative\",\r\n                }}\r\n                onMouseMove={handleMouseMove}\r\n                onMouseUp={handleMouseUp}\r\n            >\r\n                <div\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: `${position.y}px`,\r\n                        left: `${position.x}px`,\r\n                        cursor: dragging ? \"grabbing\" : \"grab\",\r\n                        zIndex: 1000,\r\n                        width:700,\r\n                        resize:'both',\r\n                        overflow:'auto',\r\n                        transform: `scale(${scale})`, transformOrigin: \"top center\"\r\n                    }}\r\n                >\r\n                    <div\r\n                    onMouseDown={handleMouseDown}\r\n                        style={{\r\n                            background: \"#444\",\r\n                            color: \"#fff\",\r\n                            padding: \"5px 10px\",\r\n                            cursor: \"grab\",\r\n                            textAlign: \"center\",\r\n                            borderRadius: \"8px 8px 0 0\",\r\n                        }}\r\n                    >\r\n                        Hold To Drag \r\n                    </div>\r\n                        <Keyboard\r\n                            onChange={e => setFields({...fields, amount:e})}\r\n                            layout={{\r\n                                default: [\r\n                                \"1 2 3 4 5 6 7 8 9 0 {bksp}\",\r\n                            ]}}\r\n                        />\r\n                    <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                        <button className='btn btn-light btn-rounded' onClick={()=>setFields({...fields, amount:''})} style={{border:'1px solid gray'}}>CLEAR</button>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={decrease}>-</button>\r\n                        <span> Size: {Math.round(scale * 100)}% </span>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={increase}>+</button>\r\n                        <button onClick={()=>setFocused(!focused)} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\n"],"names":["Notes","_localStorage$getItem","fields","setFields","useState","dispatch","useDispatch","currency","useSelector","state","auth","notes","setNotes","open","setModal","image","setImage","data","isSuccess","useGetNotesQuery","toggleModal","useEffect","position","setPosition","x","window","screen","availWidth","y","availHeight","dragging","setDragging","offset","setOffset","focused","setFocused","scale","setScale","localStorage","getItem","_jsxs","_Fragment","children","_jsx","className","id","onClick","style","borderRadius","map","item","i","amount","src","process","width","alt","type","display","name","defaultChecked","status","htmlFor","deleteNote","confirm","axios","get","concat","then","_ref","console","log","filter","catch","err","finally","Modal","isOpen","toggle","Form","onSubmit","e","preventDefault","toast","error","fd","FormData","append","some","n","post","headers","_ref2","success","note","er","_er$response$response","_er$response","response","responseText","ModalHeader","ModalBody","Container","Row","FormGroup","Label","Input","onBlur","pattern","onChange","_objectSpread","target","value","accept","files","ModalFooter","zIndex","top","overflow","onMouseMove","clientX","clientY","onMouseUp","handleMouseUp","left","cursor","resize","transform","transformOrigin","onMouseDown","background","color","padding","textAlign","Keyboard","layout","default","justifyContent","border","decrease","setItem","Math","max","prev","round","increase","min","JSON","parse"],"sourceRoot":""}