{"version":3,"file":"static/js/802.3caf5a8a.chunk.js","mappings":"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","sources":["../node_modules/reactstrap/esm/Card.js","../node_modules/reactstrap/esm/CardBody.js","components/Sales.js","helpers/utils.js"],"sourcesContent":["var _excluded = [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Toggles card padding using `.card-body` */\n  body: PropTypes.bool,\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change background color of component */\n  color: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** Inverts the color */\n  inverse: PropTypes.bool,\n  /** Changes the card to have only outline */\n  outline: PropTypes.bool,\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction Card(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    color = props.color,\n    body = props.body,\n    inverse = props.inverse,\n    outline = props.outline,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    innerRef = props.innerRef,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? \"\".concat(outline ? 'border' : 'bg', \"-\").concat(color) : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\nCard.propTypes = propTypes;\nexport default Card;","var _excluded = [\"className\", \"cssModule\", \"innerRef\", \"tag\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  /** Add custom class */\n  className: PropTypes.string,\n  /** Change underlying component's CSS base class name */\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func]),\n  /** Set a custom element for this component */\n  tag: tagPropType\n};\nfunction CardBody(props) {\n  var className = props.className,\n    cssModule = props.cssModule,\n    innerRef = props.innerRef,\n    _props$tag = props.tag,\n    Tag = _props$tag === void 0 ? 'div' : _props$tag,\n    attributes = _objectWithoutProperties(props, _excluded);\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n}\nCardBody.propTypes = propTypes;\nexport default CardBody;","import React, { useRef } from 'react';\r\nimport $ from 'jquery';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { capitalFirst, formatDatefromTimestamp } from '../helpers/utils';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter, Form, Card, CardBody } from 'reactstrap';\r\nimport toast from 'react-hot-toast';\r\n$.fn.DataTable.ext.errMode = 'none';\r\nexport default function Sales() {\r\n    \r\n    const dispatch = useDispatch();\r\n    const tableRef = useRef();\r\n    const [ closing_cash, setClosingCash ] = useState(0)\r\n    const [ orders, setOrders] = useState([]);\r\n    const [ orderProducts, setOrderProducts] = useState([]);\r\n    const [ open, setModal ] = useState(false);\r\n    const [ reportModal, setReportModal ] = useState(false);\r\n    const [ total, setTotal ] = useState(0);\r\n    const [ sessionID, setSessionID ] = useState(1);\r\n    const [ paymentMethod, setPaymentMethod ]= useState(0);\r\n    const [ cashierEmail, setCashierEmail ] = useState('');\r\n    const [ reportType, setReportType ] = useState('');\r\n    const [ dates, setDates ] = useState({ from:'', to:''})\r\n\r\n    const {isAdmin, currency, openingCash} = useSelector( state => state.auth );\r\n    const setDate = e => setDates({...dates, [e.target.name]: e.target.value });\r\n    const [today, setToday] = useState(true);\r\n\r\n    const view = e => {\r\n        dispatch({ type:`LOADING` });\r\n        const order = orders[e.target.dataset.index];\r\n        if( order ) {\r\n            axios.get(`orders/view-order/${order.id}`).then(({data})=> { \r\n                const {products, session} = data;\r\n                const sessionData = JSON.parse(session.data);\r\n                setTotal(data.order.amount);\r\n                setPaymentMethod(data.order.payment_mode);\r\n                setSessionID(order.session_id)\r\n                setCashierEmail(data.cashier?.email)\r\n                toggleModal();\r\n                \r\n                let orderedProducts = Object.values(products).map( pr => ({...pr, stock:sessionData?.quantity[pr.id]}) );\r\n                if((sessionData?.products??[]).indexOf('quick') !== -1) {\r\n                    let overallExcept = orderedProducts.reduce( (pre,a) => pre + parseFloat(a.price * sessionData?.quantity[a.id]), 0);\r\n                    let otherPrice = data.order.amount - overallExcept;\r\n                    orderedProducts = [...orderedProducts, {name:\"Others\", price: otherPrice, id:`quick`, stock: sessionData?.quantity['quick']}];\r\n                }\r\n                setOrderProducts(orderedProducts);\r\n\r\n            }).catch()\r\n            .finally( () => dispatch({ type:`STOP_LOADING` }))\r\n        } else {\r\n            console.log(order, e.target.dataset.index, orders)\r\n        }\r\n    }\r\n\r\n    const toggleModal = () => setModal(!open)\r\n\r\n    const toggleReport = () => setReportModal(!reportModal)\r\n\r\n    const generateReceipt = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if(reportType) {\r\n            console.log(openingCash)\r\n            const payload = {\r\n                currency,\r\n                today,\r\n                from: dates.from,\r\n                to: dates.to,\r\n                register_id: openingCash.id,\r\n                closing_cash,\r\n            }\r\n            if(reportType==='X') {\r\n                dispatch({ type:\"LOADING\" })\r\n                \r\n                const {data} = await axios.post(`/orders/x-report`, payload);\r\n                if(data.status) {\r\n                    toast.success(data.message );\r\n                } else {\r\n                    toast.error(data.message)\r\n                }\r\n                dispatch({ type:\"STOP_LOADING\" })\r\n\r\n            } else {\r\n                if(window.confirm(\"This will reset all sessions for current cash registered!\")) {\r\n                    \r\n                    dispatch({ type:\"LOADING\" })\r\n                    const {data} = await axios.post(`orders/z-report`, payload);\r\n                    if(data.status) {\r\n                        if(window.electronAPI){\r\n                            window.electronAPI.printReport(data.html)\r\n                        }\r\n                        localStorage.setItem('cartSessions','[1]');\r\n                        dispatch({ type:\"RESET_KART\" });\r\n                        dispatch({ type: \"DAY_CLOSE\" })\r\n                        toast.success(data.message)\r\n                    } else {\r\n                        toast.error(data.message);\r\n                    }\r\n                    dispatch({ type:\"STOP_LOADING\" })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        axios.get('orders').then(({data}) => setOrders(data.orders)).catch(()=>{})\r\n        return () => null\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        $(tableRef.current).DataTable({\r\n            paging: true,\r\n            searching: true,\r\n            info: true,\r\n            ordering: true,\r\n            pageLength:40\r\n        });\r\n        return ()=> null;\r\n    },[orders])\r\n\r\n    return (\r\n        <>\r\n        <div className=\"content-wrapper\" style={{width:'100%'}}>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                    <div className='d-block position-absolute' style={{zIndex:9999,right:60}}>\r\n                        <button className='btn btn-success btn-rounded' onClick={toggleReport}> Generate Report </button>\r\n                    </div>\r\n                    <div className=\"card mt-5\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-hover table-bordered\" ref={tableRef} >\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th> Order ID </th>\r\n                                            <th> Session ID </th>\r\n                                            <th> Customer </th>\r\n                                            <th> Amount </th>\r\n                                            <th> Date </th>\r\n                                            <th> Transaction Type </th>\r\n                                            {isAdmin && (<>\r\n                                                <th> Cashier </th>\r\n                                                <th> Action </th>\r\n                                            </>)}\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        { orders.map((order,i) => (<tr key={order.id}>\r\n                                            <td>{order.id}</td>\r\n                                            <td>{order.session_id}</td>\r\n                                            <td>{order.customer?.name}</td>\r\n                                            <td>{currency +\" \"+parseFloat(order.amount).toFixed(2) }</td>\r\n                                            <td>{formatDatefromTimestamp(order.created_at)}</td>\r\n                                            <td>{order.transaction_type}</td>\r\n                                            { isAdmin && (<>\r\n                                                <td> {order.cashier?.name} </td>\r\n                                                <td>\r\n                                                    <Link type=\"button\" data-index={i} className=\"text-decoration-none\" onClick={view}> View </Link>\r\n                                                </td>\r\n                                            </>)}\r\n                                        </tr>))}\r\n                                        \r\n                                        { orders.length===0 && <tr>\r\n                                            <td colSpan={9} >\r\n                                                <p className=\"text-danger text-center\"> No orders yet </p>\r\n                                            </td>\r\n                                        </tr> }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <Modal isOpen={reportModal} >\r\n            <Form onSubmit={generateReceipt}>\r\n                <ModalHeader>\r\n                    <span className=\"report-type\"> Generate-Report</span>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Card>\r\n                        <CardBody>\r\n                            <div className=\"card-body asking\">\r\n                                <div className=\"container\" style={{placeItems:'center'}}>\r\n                                    <div className=\"row\">\r\n                                        <b> Select Type </b>\r\n                                    </div>\r\n                                    <div className=\"row mt-2\">\r\n                                        <button className={`btn btn-rounded btn-success ms-3 ${reportType && reportType!=='X' ? 'btn-inactive':''}`} type='button' onClick={()=> setReportType('X')} style={{border:'5px solid #afe9f5'}}> X-Report </button>\r\n                                        <button className={`btn btn-rounded btn-danger ms-3 ${reportType && reportType!=='Z'?'btn-inactive': ''}`} type='button' onClick={()=> setReportType('Z')} style={{border:'5px solid #afe9f5'}}> Z-Report </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body the-report\" style={{ display:reportType==='' && 'none' }}>\r\n                                <input type=\"hidden\" name=\"type\" defaultValue={reportType}/>\r\n                                <div className=\"row mb-2\">\r\n                                    <div className=\"col-3\">\r\n                                        <label htmlFor=\"\"> Today </label>\r\n                                    </div>\r\n                                    <div className=\"col-7\">\r\n                                        <input type=\"checkbox\" name=\"today\" checked={today} onChange={()=>setToday(!today)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-3\">\r\n                                    <div className=\"col-3\" style={{alignSelf:'center'}}>\r\n                                        <strong className=\"mt-3\"> From </strong>\r\n                                    </div>\r\n                                    <div className=\"col-9\">\r\n                                        <input type=\"date\" name=\"from\" className=\"form-control\" onChange={setDate} style={{float:'right'}}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3\" style={{alignSelf:'center'}}>\r\n                                        <strong className=\"mt-3\"> To </strong>\r\n                                    </div>\r\n                                    <div className=\"col-9\">\r\n                                        <input type=\"date\" name=\"to\" className=\"form-control\" onChange={setDate} style={{float:'right'}}/>\r\n                                    </div>\r\n                                </div>\r\n                                {\r\n                                    reportType==='Z' && (<div className=\"row mt-3\">\r\n                                        <div className=\"col-12\">\r\n                                            <input className='input' type=\"number\" style={{border:'1px solid'}} placeholder={`Closing cash in drawer `+currency} required name=\"closing_cash\" onChange={e => setClosingCash(e.target.value)}/>\r\n                                        </div>\r\n                                    </div>)\r\n                                }\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button type=\"button\" className=\"bg-light btn btn-rounded\" onClick={toggleReport}>Close</button>\r\n                    <button className=\"bg-info btn text-white btn-rounded\" > Generate </button>\r\n                </ModalFooter>\r\n            </Form>\r\n        </Modal>\r\n       \r\n        <Modal isOpen={open}>\r\n            <ModalHeader>\r\n                <p style={{fontSize:'1.5rem'}}>Order Details</p>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"col-lg-12\" id=\"receipt\">\r\n                    <div className=\"container\" style={{backgroundColor:'white',paddingBottom:'10px',borderRadius:'15px'}} >\r\n                        <div className=\"row\" style={{display:'flex'}}>\r\n                            <div className=\"d-grid text-center w-100\" style={{justifyContent:'center'}}>\r\n                                <p > Served by <b>{cashierEmail}</b> </p>\r\n                                Session <h2 className=\"sessionID\">#{sessionID}</h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"receipt\" style={{width:'90%',background:'#fff',marginLeft:'5%'}}>\r\n                                {orderProducts.map( (order,i) => <div key={i} className='row mt-2 chosen-product' >\r\n                                        <div className='d-flex w-100'>\r\n                                            <b>{order.name}</b>\r\n                                            <strong className='price'> Qty: {order.stock}</strong>\r\n                                        </div>\r\n                                        <div className='d-flex'>\r\n                                            <p className='ms-3 mt-1' style={{fontFamily:'cursive'}}>\r\n                                                { currency +' '+ order.price }\r\n                                                { order.id !=='quick' && '/ Units'}  \r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"\">\r\n                                    <div className=\"row d-flex mt-3\" style={{justifyContent:'space-between'}}>\r\n                                        <div>\r\n                                            <h2>TOTAL </h2>\r\n                                            <p></p>\r\n                                        </div>\r\n                                        <div>\r\n                                            <h2> {currency+ ' ' + parseFloat(total).toFixed(2) } </h2>\r\n                                            <p></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row d-flex mt-0\" style={{justifyContent:'space-between'}}>\r\n                                        <div>\r\n                                            <small> { capitalFirst(paymentMethod) } </small>\r\n                                        </div>\r\n                                        <div>\r\n                                            <small> {currency+ '' + parseFloat(total).toFixed(2) } </small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button className='btn btn-light btn-rounded' onClick={()=> toggleModal(!open)}> Close </button>\r\n            </ModalFooter>\r\n        </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n","import $ from 'jquery'\r\nimport toast from 'react-hot-toast';\r\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport const validate = (fields,exceptions=[]) => {\r\n    let result={}\r\n    var shouldGo=true;\r\n    if(exceptions.length)\r\n    {\r\n        exceptions.forEach( item => {\r\n            delete fields[item]\r\n        })\r\n    }\r\n    Object.keys(fields).forEach(f =>\r\n    {\r\n        let shout = '';\r\n        let invalid = false;\r\n        let tInputs = [$(`input[name=${f}]`), $(`select[name=${f}]`), $(`textarea[name=${f}]`), $(`.${f}`)]\r\n        if(fields[f]==null || fields[f].length===0)\r\n        {\r\n            result[f]=`Required!`;\r\n            shouldGo=false;\r\n            invalid = true;\r\n        }\r\n        tInputs.forEach( input => {\r\n\r\n            let minLength = $(input).attr('type')!== 'date' ? $(input).attr('min'): 0;\r\n            let maxLength = $(input).attr('max');\r\n            let type = $(input).attr('cast');\r\n            let isDate = $(input).attr('type')==='date' && $(input).attr('req');\r\n            if($(input).val()?.length && (minLength || maxLength))\r\n            {\r\n                if($(input).val().length < parseInt(minLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should be of at least ${minLength} characters!`\r\n                    result[f] = shout;\r\n                }\r\n                if($(input).val().length > parseInt(maxLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should not be greater than ${maxLength} characters!`;\r\n                    result[f] = shout;\r\n                }\r\n            }\r\n            if(type)\r\n            { \r\n                if(input.val() && type === 'num')\r\n                {\r\n                    if(parseInt($(input).val().length )!== $(input).val().length) {\r\n                        shout= `Should be in numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n                if( $(input).val() && type=== 'str' )\r\n                {\r\n                    if( /^([^0-9]*)$/.test($(input).val())===false )\r\n                    {\r\n                        shout= `Should not contain numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n            }\r\n            if(isDate)\r\n            {\r\n                if(!isValidDate($(input).val(),18))\r\n                {\r\n                    invalid = true\r\n                    shout = 'Invalid date';\r\n                    result[f] = shout;\r\n                } else {\r\n                    shout = '';\r\n                }\r\n                // return\r\n            }\r\n            if(shout)   \r\n            {\r\n                if($(input).parents('.col-md-12, .col').find('small.text-danger').length)\r\n                {\r\n                    $(input).parents('.col-md-12, .col').find('small.text-danger').text(shout)\r\n                } else {\r\n                    $(input).parents('.col-md-12, .col').append('<small class=\"text-danger\">'+shout+'</small>')\r\n                }\r\n            } else {\r\n                $(input).parents('.col-md-12, .col').find('small.text-danger').remove()\r\n            }\r\n            if(invalid){\r\n                shouldGo = false;\r\n                $(input).addClass('placeholder-error')\r\n                .attr('placeholder',result[f]).css('border','1px solid red');\r\n            } else {\r\n                $(input).removeClass('placeholder-error').attr('placeholder',result[f]).css('border','');\r\n            }\r\n        })\r\n    })\r\n    return {result, shouldGo};\r\n}\r\n\r\nexport const getCurrentDate = (delimiter='-') => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year+delimiter+month+delimiter+day}`;\r\n}\r\n\r\nexport const formatDate = (date=null,format='Ymd') => {\r\n    const dateObj = date?new Date(date): new Date();\r\n    const year = dateObj.getFullYear();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(dateObj.getDate()).padStart(2, '0');\r\n    if(format[0]==='Y')\r\n    {\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n    if(format[0]==='d')\r\n    {\r\n        return `${day}-${month}-${year}`;\r\n    }\r\n}\r\n\r\nexport const getCurrentDay = () => {\r\n    return daysOfWeek[(new Date()).getDay()];\r\n}\r\n\r\nexport const getCurrentTime = () => {\r\n    const currentDate = new Date();\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nexport const toBase64 = blob => {\r\n\r\n}\r\n\r\nexport const dataURLtoFile = (dataurl, filename) => {\r\n    var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[arr.length - 1]), \r\n        n = bstr.length, \r\n        u8arr = new Uint8Array(n);\r\n    while(n--){\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\nexport const isValidDate = ( date, range ) => {\r\n    let today = getCurrentDate();\r\n    let year = today.split('-')[0];\r\n    let intended = new Date(today.replace(year, (parseInt(year)-range)));\r\n    return intended > new Date(date)\r\n}\r\n\r\nexport const capitalFirst = (string) => {\r\n    if (!string) return string; // Handle empty or null strings\r\n    if(string.includes(' ')){\r\n        let str= '';\r\n        string.split(' ').forEach( part => {\r\n           str+=' '+ part.charAt(0).toUpperCase() + part.slice(1); \r\n        })\r\n        return str;\r\n    }\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const getDocumentName = id => {\r\n\r\n    const documents = {\r\n        1 : 'VISIT PHOTO',\r\n        2 : 'AADHAAR CARD',\r\n        3 : 'VOTER CARD',\r\n        4 : 'GROUP PHOTO',\r\n        5 : 'CGT_FIRST',\r\n        6 : 'CGT_SECOND',\r\n        7 : 'CIBIL',\r\n        8 : 'SANCTION LETTER',\r\n        9 : 'KYC',\r\n        10 : 'BANK PASSBOOK',\r\n        11 : 'RELATION PROOF DOCUMENT',\r\n    }\r\n    return documents[id];\r\n    \r\n}\r\n\r\nexport const Warning = msg => {\r\n    return toast(msg,\r\n        {\r\n          icon: '⚠️',\r\n          style: {\r\n            borderRadius: '10px',\r\n            background: '#333',\r\n            color: '#fff',\r\n          },\r\n        }\r\n    );\r\n}\r\n\r\nexport const hexToRgb = (hex) => {\r\n    // Remove the '#' if present\r\n\r\n    if(!hex || typeof hex == 'object'){\r\n        return hex\r\n    }\r\n\r\n    hex = hex.replace(/^#/, '');\r\n    // Convert shorthand hex (e.g., #03F) to full form (e.g., #0033FF)\r\n    if (hex.length === 3) {\r\n        hex = hex.split('').map(h => h + h).join('');\r\n    }\r\n    // Convert hex to RGB\r\n    const r = parseInt(hex.slice(0, 2), 16);\r\n    const g = parseInt(hex.slice(2, 4), 16);\r\n    const b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport const isColorDark = (hexColor) => {\r\n    // Convert hex color to RGB\r\n    let output = hexToRgb(hexColor)\r\n    if(output === undefined) return hexColor\r\n    const { r, g, b } = output\r\n\r\n    // Calculate the luminance\r\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n\r\n    // Return true if the color is dark, else false\r\n    return luminance < 128;\r\n}\r\n\r\nexport function chunk(array, size, uncategorized = false) {\r\n    const result = [];\r\n    if(!array) return []\r\n    if(uncategorized) array.unshift({})\r\n    for (let i = 0; i < array.length; i += size) {\r\n        // Use slice to get a chunk of the specified size and push it to the result array\r\n        result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const wrapText = (text, maxLength) => {\r\n\r\n    if (text?.length > maxLength) {\r\n        let truncatedText = text.substring(0, maxLength) + '...';\r\n        return truncatedText;\r\n    }\r\n    return text\r\n}\r\n\r\nexport const formatDatefromTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    const seconds = String(date.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n  "],"names":["_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","body","PropTypes","className","color","cssModule","innerRef","inverse","outline","tag","tagPropType","Card","props","_props$tag","Tag","attributes","classes","mapToCssModules","classNames","concat","React","ref","CardBody","Sales","dispatch","useDispatch","tableRef","useRef","closing_cash","setClosingCash","useState","orders","setOrders","orderProducts","setOrderProducts","open","setModal","reportModal","setReportModal","total","setTotal","sessionID","setSessionID","paymentMethod","setPaymentMethod","cashierEmail","setCashierEmail","reportType","setReportType","dates","setDates","from","to","isAdmin","currency","openingCash","useSelector","state","auth","setDate","e","_objectSpread","name","value","today","setToday","view","type","order","dataset","index","axios","get","id","then","_ref","_data$cashier","_sessionData$products","data","products","session","sessionData","JSON","parse","amount","payment_mode","session_id","cashier","email","toggleModal","orderedProducts","values","map","pr","stock","quantity","overallExcept","reduce","pre","a","parseFloat","price","otherPrice","catch","finally","console","log","toggleReport","useEffect","_ref2","$","current","DataTable","paging","searching","info","ordering","pageLength","_jsxs","_Fragment","children","_jsx","style","width","zIndex","right","onClick","_order$customer","_order$cashier","customer","toFixed","formatDatefromTimestamp","created_at","transaction_type","Link","colSpan","Modal","isOpen","Form","onSubmit","async","preventDefault","payload","register_id","post","status","toast","success","message","error","window","confirm","electronAPI","printReport","html","localStorage","setItem","ModalHeader","ModalBody","placeItems","border","display","defaultValue","htmlFor","checked","onChange","alignSelf","float","placeholder","required","ModalFooter","fontSize","backgroundColor","paddingBottom","borderRadius","justifyContent","background","marginLeft","fontFamily","capitalFirst","ext","errMode","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","string","includes","str","forEach","part","charAt","toUpperCase","slice","Warning","msg","icon","hexToRgb","hex","replace","h","join","r","parseInt","g","b","isColorDark","hexColor","output","undefined","chunk","array","size","result","unshift","push","wrapText","text","maxLength","substring","timestamp","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getSeconds"],"sourceRoot":""}