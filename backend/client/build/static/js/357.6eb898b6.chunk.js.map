{"version":3,"file":"static/js/357.6eb898b6.chunk.js","mappings":"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","sources":["components/pos/POS.js","helpers/utils.js"],"sourcesContent":["import React, { memo, useCallback, useEffect, useRef, useState } from 'react'; \r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useGetProductCategoriesQuery, useGetPosProductsQuery, commonApiSlice } from '../../features/centerSlice';\r\nimport { isColorDark, hexToRgb, chunk, wrapText, Warning, dataURLtoFile } from '../../helpers/utils';\r\nimport labelImg from '../../asset/images/default.png';\r\nimport addNew from '../../asset/images/image.png';\r\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { useSearch } from '../../contexts/SearchContext';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Row, Label, Input, FormGroup, Col, Form } from 'reactstrap';\r\nimport toast from 'react-hot-toast';\r\nimport Keyboard from 'react-simple-keyboard' \r\n\r\nfunction POS() {\r\n    const sectionRef = useRef(null);\r\n    const cRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const navigator = useNavigate();\r\n    const location = useLocation();\r\n    const { currency, split, cartStocks, cartProducts, openingCash, appKey, inventory } = useSelector( state => state.auth );\r\n    const [ key, setKey] = useState(appKey);\r\n    const chunkSize = window.screen.availWidth < 1200? 3 : 4;\r\n    const [appModal , setAppModal] = useState(false)\r\n    const [ openingAmountSet, setOpeningAmount ] = useState(openingCash); \r\n    const [ reloadCount] = useState(0);\r\n    const [ enteredCash , setEnteredCash ] = useState('');\r\n    const { data, isSuccess } = useGetProductCategoriesQuery();\r\n    const [ products, setProducts ] = useState([])\r\n    const [ catColors, putCats] = useState({})\r\n    const [ noProduct, setNoProduct ] = useState(false)\r\n    const [ prCategories, setCategories ] = useState([])\r\n    const [ initialProducts, setInitialProducts] = useState([]);\r\n    const [ KartProducts, setCartProducts ] = useState(cartProducts);\r\n    const [ currentProduct, setCurrent ] = useState(0);\r\n    const [ Other, toggleOther ] = useState(false);\r\n    const [ otherOpen, setModal ] = useState(false);\r\n    const [ availableStocks, setAvailableStocks ] = useState(cartStocks);\r\n    const [ barcode, setBarcode ] = useState('');\r\n    const [ opened, toggleVegetableModal ] = useState(false);\r\n    const [ number, setNumber ] = useState('');\r\n    const [ qty, setQty ] = useState('');\r\n    const [ editing, setEditing ] = useState(false);\r\n    const [ loadingPhone, setLoading ]= useState(false);\r\n    const [ editingQT, setEditingQT ]= useState(false);\r\n    const [vegetable, setVegetable] = useState({});\r\n    const [custom, setCustom] = useState({image:null, price:'', name:'', barcode:'', stock:5000});\r\n    // for v-keyboard\r\n    const [ focused, setFocused] = useState('')\r\n    const [ focusedCustom, setFocusedCustom] = useState('')\r\n    const fillCustom = e => {\r\n        setCustom({...custom, [focusedCustom]: e})       \r\n    }\r\n    const [position, setPosition] = useState({ x: window.screen.availWidth/3, y: window.screen.availHeight / 3 });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [dragged, setDragged] = useState(false);\r\n    const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n    const keyboardRef = useRef();\r\n    const ckeyboardRef = useRef();\r\n    const [layout, setLayout] = useState(\"default\")\r\n    const handleMouseDown = useCallback((e) => {\r\n        setDragging(true);\r\n        setDragged(true);\r\n        setOffset({\r\n            x: e.clientX - position.x,\r\n            y: e.clientY - position.y,\r\n        });\r\n    }, [position]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        if (!dragging) return;\r\n        setPosition({\r\n            x: e.clientX - offset.x,\r\n            y: e.clientY - offset.y,\r\n        });\r\n    }, [dragging, offset]);\r\n\r\n    const handleMouseUp = useCallback(() => setDragging(false), []);\r\n\r\n    // end for v-keyboard\r\n    const btnStyle = {minHeight:60, fontSize:'1rem'}\r\n    useEffect(() => {\r\n        let inputBuffer = \"\";\r\n        const handleKeyDown = (event) => {\r\n            const { key } = event;\r\n            if (key === \"Enter\") { event.preventDefault();setBarcode(inputBuffer);inputBuffer = \"\"; } else {\r\n                if (key.length === 1) {\r\n                    inputBuffer += key;\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener(\"keydown\", handleKeyDown);\r\n        return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n    }, [barcode]);\r\n\r\n    \r\n    \r\n    const allProducts = useGetPosProductsQuery();\r\n    const { searchQuery, sessions, activeSession, displayImage, sale } = useSearch();\r\n\r\n    useEffect(() => {\r\n        if(allProducts.data?.products){\r\n            setProducts(chunk(allProducts.data.products.filter(ite => (ite.name).toLowerCase().includes(searchQuery.toLowerCase())), chunkSize))\r\n        }\r\n        return () => setProducts([]);\r\n    },[searchQuery])\r\n\r\n    const handleVegetable = () => toggleVegetableModal(!opened)\r\n\r\n    const scrollTop = e => window.scrollTo(0,0)\r\n\r\n    const fetchPhoneProducts = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            setLoading(true);\r\n            if(!key) {\r\n                return setAppModal(!appModal)\r\n            }\r\n            dispatch({ type: \"SET_APP_KEY\", payload: key })\r\n            dispatch({ type:\"LOADING\" });\r\n\r\n            const {data} = await axios.get(`https://pos.dftech.in/sync-products/${key}`);\r\n            if(data.status) {\r\n                toast.success(data.message);\r\n                let fd = new FormData();\r\n                const midFile= dataURLtoFile(`data:application/json;base64,`+data.file, 'client.json');\r\n                fd.append('file', midFile);\r\n\r\n                const {data:resp} = await axios.post('products/sync', fd, {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        \"Content-Type\" : \"multipart/form-data\",\r\n                        'pos-token' : localStorage.getItem('pos-token')\r\n                    }\r\n                });\r\n \r\n                if(resp.status) {\r\n                    toast.success(\"Importing completed\");\r\n                    setTimeout(()=> window.location.reload(), 2400);\r\n                }\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error.message);\r\n            toast.error(\"Couln't fetch products right now!\")\r\n        }\r\n        dispatch({ type:\"STOP_LOADING\" });\r\n        setLoading(false)\r\n    }\r\n\r\n    const addVeg = e => {\r\n        e.preventDefault();\r\n        const copyKartProducts = JSON.parse(JSON.stringify(KartProducts));\r\n        let thisProduct = copyKartProducts[activeSession]?.find(ite => ite.id === vegetable.id); // check if the product is already in cart\r\n        if( thisProduct && !split ) {\r\n            let availableStock = vegetable.quantity - vegetable.stock;\r\n            if(inventory && availableStock <= 0 ) {\r\n                Warning(\"Dispatching only available stocks...\")\r\n                document.querySelector('.also[data-id=\"'+vegetable.id+'\"]').classList.add('stock-out');\r\n                availableStock = vegetable.quantity\r\n                vegetable.stock = availableStock\r\n            }\r\n            // update the remaining stock each product\r\n            if(inventory) {\r\n                setAvailableStocks({...availableStocks, [vegetable.id]: availableStock });\r\n            }\r\n            thisProduct.stock = vegetable.stock;\r\n            setCartProducts(copyKartProducts);\r\n            dispatch({ type: \"CHOOSEN_PRODUCT\", payload:copyKartProducts });\r\n            if(!split) {  // update the current project highlight\r\n                setCurrent(KartProducts[activeSession].findIndex(item => item.id === thisProduct.id))\r\n            } else { // update the current project highlight if splittin products is off\r\n                setCurrent(KartProducts[activeSession]?.length??0) \r\n            }\r\n        \r\n        } else {\r\n            setCurrent(KartProducts[activeSession]?.length??0 ) \r\n            let consumed = Object.values(KartProducts).flat()?.filter( item => item.id === vegetable.id).reduce( (prev, item) => prev + item.stock, 1 )?? 1;\r\n            let availableStock = vegetable.quantity - vegetable.stock?? consumed;\r\n            if(inventory && availableStock <= 0 ) {\r\n                Warning(\"Dispatching only available stocks..\")\r\n                document.querySelector('.also[data-id=\"'+vegetable.id+'\"]').classList.add('stock-out');\r\n                availableStock = vegetable.quantity\r\n                vegetable.stock = availableStock\r\n            }\r\n            if(inventory) setAvailableStocks({...availableStocks, [vegetable.id]: availableStock });\r\n            setCartProducts({...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], vegetable] });\r\n            dispatch({ type: 'CHOOSEN_PRODUCT', payload: {...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], vegetable] } });\r\n\r\n        }\r\n        toggleVegetableModal(!opened)\r\n        scrollToSection()\r\n        window.electronAPI?.reloadWindow()\r\n    }\r\n    \r\n    const addToCart = prID => \r\n    {\r\n        setEditingQT(false); setQty('');\r\n        let product = initialProducts.find(ite => ite.id === prID); \r\n        if(product.catName && product.catName.toLowerCase().indexOf('vegetable')!==-1 && !cartProducts[activeSession]?.find(i => i.id===prID)) {\r\n            if( availableStocks[product.id] === 0 || parseInt(product.quantity) === 0 ) return \r\n            product = {...product, unit:'kg', stock:1}\r\n            setVegetable(product)\r\n            return handleVegetable() \r\n        }\r\n        const copyKartProducts = JSON.parse(JSON.stringify(KartProducts));\r\n        let thisProduct = copyKartProducts[activeSession]?.find(ite => ite.id === prID);\r\n        // check if the product is already in cart\r\n        if( thisProduct && !split ) {\r\n            let updatedStock = thisProduct.stock + 1;\r\n            let availableStock = product.quantity - updatedStock;\r\n            if(inventory && availableStock === -1 ) {\r\n                return document.querySelector('.also[data-id=\"'+product.id+'\"]').classList.add('stock-out');\r\n            }\r\n            if(!split) {  // update the current project highlight\r\n                setCurrent(KartProducts[activeSession].findIndex(item => item.id === product.id))\r\n            } else { // update the current project highlight if splittin products is off\r\n                setCurrent(KartProducts[activeSession]?.length??0) \r\n            }\r\n            // update the remaining stock each product\r\n            if(inventory) setAvailableStocks({...availableStocks, [product.id]: availableStock });\r\n            thisProduct.stock = updatedStock;\r\n            setCartProducts(copyKartProducts);\r\n            dispatch({ type: \"CHOOSEN_PRODUCT\", payload:copyKartProducts });\r\n        \r\n        } else {\r\n            setCurrent(KartProducts[activeSession]?.length??0 ) \r\n            product = {...product, stock: 1 }\r\n            let consumed = Object.values(KartProducts).flat()?.filter( item => item.id === product.id).reduce( (prev, item) => prev + item.stock, 0 )?? 0;\r\n            let availableStock = product.quantity - ( consumed + 1 );\r\n            if(inventory && availableStock === -1 ) {\r\n                return document.querySelector('.also[data-id=\"'+product.id+'\"]').classList.add('stock-out');\r\n            }\r\n            if(inventory) setAvailableStocks({...availableStocks, [product.id]: availableStock });\r\n            setCartProducts({...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], product] });\r\n            dispatch({ type: 'CHOOSEN_PRODUCT', payload: {...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], product] } });\r\n            // update the current project highlight\r\n        }\r\n        window.electronAPI?.reloadWindow()\r\n        \r\n    }\r\n\r\n    const resetCart = () => {\r\n        setCartProducts( {...KartProducts,[activeSession]: [] });\r\n        dispatch({ type: \"CHOOSEN_PRODUCT\", payload: {...KartProducts, [activeSession]: []} });\r\n        window.electronAPI?.reloadWindow()\r\n    }\r\n    // Reverse the stock decrement here\r\n    const removeFromCart = index => {\r\n        setCartProducts( {...KartProducts,[activeSession]: KartProducts[activeSession].filter((item, i)=> i!== index) });\r\n        dispatch({ type: 'CHOOSEN_PRODUCT', payload: {...KartProducts,[activeSession]: KartProducts[activeSession].filter((item, i)=> i!== index) } });\r\n        window.electronAPI?.reloadWindow()\r\n    }\r\n\r\n    const toggleModal = () => setModal(!otherOpen)\r\n\r\n    const openTheFuckingDay = e => {\r\n        e.preventDefault();\r\n        if(!enteredCash || enteredCash === '0') return Warning(\"You can't open without a single cash amount in drawer!\");\r\n\r\n        dispatch({ type: \"LOADING\" });\r\n        axios.post(\"pos/opening-day-cash-amount\", {cash: currency + enteredCash}).then(({data}) => {\r\n            \r\n            if(data.status) {\r\n                toast.success(data.message);\r\n                dispatch({ type: \"SET_CASH\", payload: data.created })\r\n                setOpeningAmount(data.created)\r\n            } else toast.error(data.message);\r\n\r\n        }).catch(()=>{}).finally(()=>dispatch({ type: \"STOP_LOADING\" }))\r\n\r\n    }\r\n\r\n    const handleImgError = e => e.target.src = labelImg\r\n\r\n    const [items, setItems] = useState(prCategories);\r\n    const [draggedItemIndex, setDraggedItemIndex] = useState(null);\r\n\r\n    const handleDragStart = (index) => setDraggedItemIndex(index)\r\n\r\n    const handleDragOver = (e, index) => {\r\n        e.preventDefault();\r\n        if (draggedItemIndex === index) return;\r\n        const newItems = [...items];\r\n        const draggedItem = newItems.splice(draggedItemIndex, 1)[0];\r\n        newItems.splice(index, 0, draggedItem);\r\n        setDraggedItemIndex(index);\r\n        setItems(newItems);\r\n        dispatch(\r\n            commonApiSlice.util.updateQueryData(`getProductCategories`, undefined, cache=> {\r\n                cache['categories'] = newItems\r\n            })\r\n        )\r\n        setCategories(newItems);\r\n    };\r\n\r\n    const handleDrop = () => setDraggedItemIndex(null)\r\n\r\n    const filterProducts = catID => {\r\n        if(allProducts.isSuccess && allProducts.data.products) {\r\n            setProducts(chunk(allProducts.data.products.filter(ite => ite.category_id===catID),chunkSize));toggleOther(!catID)\r\n            if(chunk(allProducts.data.products.filter(ite => ite.category_id===catID),chunkSize)) setNoProduct(true)\r\n        }\r\n    }\r\n\r\n    const scrollToSection = () => {\r\n        let el = document.querySelector(`.chosen-product.selected`);\r\n        if(el) {\r\n            el.scrollIntoView({\r\n                behavior:'smooth',\r\n                block: 'center'\r\n            })\r\n        }\r\n    };\r\n\r\n    useEffect(()=> {\r\n        if(barcode && !otherOpen) {\r\n            axios.get(`products/barcode/${barcode}`).then(({data})=> {\r\n                if(!data.status) {\r\n                    Warning(\"Product not in inventory!\")\r\n                    toggleModal()\r\n                    setCustom({...custom, barcode: barcode})\r\n                }\r\n                setBarcode('')\r\n                addToCart(data.product.id)\r\n            }).catch(()=>{}).finally(()=> null);\r\n        } else {\r\n            if(barcode) {\r\n                setCustom({...custom, barcode:JSON.parse(JSON.stringify(barcode))})\r\n            }\r\n            setBarcode('')\r\n            // setTimeout(()=> setBarcode(''),1500)\r\n        }\r\n        return () => null\r\n    },[barcode])\r\n    \r\n    useEffect(() => {\r\n        if( isSuccess ) {\r\n            setCategories(data.categories)\r\n            const cats = [];\r\n            data.categories.forEach( cat => (cats[cat.id] = cat.color));\r\n            putCats(cats);\r\n            setItems(data.categories)\r\n        }\r\n        if(allProducts.isSuccess) {\r\n            if(allProducts.data.products?.length === 0 ){\r\n                setNoProduct(true);\r\n            } else {\r\n                setNoProduct(false)\r\n            }\r\n            setProducts(chunk(allProducts.data.products, chunkSize))\r\n            setInitialProducts(allProducts.data.products);\r\n            filterProducts(data?.categories[0]?.id)\r\n        }\r\n        return () => {\r\n            setInitialProducts([])\r\n            setProducts([])\r\n        }\r\n    },[ isSuccess, data, allProducts.data, allProducts.isSuccess, navigator]);\r\n\r\n    useEffect(()=> {\r\n        setCartProducts(cartProducts);\r\n        scrollToSection()\r\n        return () => {\r\n            setCartProducts([]);\r\n        }\r\n    },[ cartProducts, reloadCount ]);\r\n\r\n    useEffect(()=> {\r\n        if(cartStocks){\r\n            setAvailableStocks(cartStocks)\r\n        }\r\n        return () => setAvailableStocks({})\r\n    },[location, cartStocks])\r\n \r\n    const base = {\r\n        height:'69vh',\r\n        placeContent:'center',\r\n        display:'grid',\r\n        placeItems:'center',\r\n        width:'100%',\r\n        backgroundColor: '#dadada', \r\n        marginTop:'5%'\r\n    }\r\n\r\n    const addCustomProduct = async e => \r\n    {\r\n        e.preventDefault();\r\n        const fd = new FormData();\r\n        fd.append('name', custom.name);\r\n        fd.append('price', custom.price);\r\n        fd.append('barcode', custom.barcode);\r\n        fd.append('quantity', custom.stock);\r\n        fd.append('image', custom.image);\r\n        if(!custom.name || !custom.price ) {\r\n            return Warning('Fill the required fields');\r\n        }\r\n        if(custom.name?.toLowerCase().indexOf('veg') === -1 && !custom.barcode) {\r\n            return Warning(\"Barcode is required!\")\r\n        }\r\n\r\n        dispatch({ type:'LOADING' })\r\n        const {data} = await axios.post(`/products/create-custom`, fd, {\r\n            headers:{ \r\n                \"Accept\"       :\"application/json\",\r\n                \"Content-Type\" : \"multipart/form-data\",\r\n                \"pos-token\"    : localStorage.getItem('pos-token')\r\n            }\r\n        });\r\n        dispatch({ type:'STOP_LOADING' })\r\n        if( data.status ) {\r\n            setInitialProducts([...initialProducts, data.product])\r\n            dispatch(\r\n                commonApiSlice.util.updateQueryData('getPosProducts', undefined, cache => {\r\n                    const {products} = cache;\r\n                    if(products){\r\n                        products.push(data.product)\r\n                    }\r\n                })\r\n            )\r\n            dispatch(\r\n                commonApiSlice.util.updateQueryData('getProducts', undefined, cache => {\r\n                    const {products} = cache;\r\n                    if(products){\r\n                        products.push(data.product)\r\n                    }\r\n                })\r\n            )\r\n            toast.success(data.message);\r\n        } else { \r\n            toast.error(data.message);\r\n        }       \r\n    }\r\n\r\n    const handleFile = e => {\r\n        const file = e.target.files[0];\r\n        setCustom({...custom, image: file})\r\n    }\r\n    \r\n    const {type:screenType} = useParams();\r\n\r\n    useEffect(()=>{\r\n        window.electronAPI?.onDataReceived(data => {\r\n            if(data && data.reload){\r\n                if(screenType==='customer') {\r\n                    window.location.reload()\r\n                }\r\n            }\r\n        })\r\n    },[cartProducts])\r\n    \r\n    const changeInput = (input,e) => \r\n    {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if( editing ) {\r\n            let newAmount;\r\n            if(input==='clear') {\r\n                newAmount = '0'\r\n                setNumber(''); \r\n            } else {\r\n                newAmount = number + input;  \r\n                setNumber(number + input); \r\n            } \r\n            setCartProducts( {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                if(i=== currentProduct ) {\r\n                    item = {...item, price:newAmount}\r\n                }\r\n                return item\r\n            }) });\r\n            dispatch({\r\n                type:\"CHOOSEN_PRODUCT\",\r\n                payload: {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                    if(i=== currentProduct ) {\r\n                        item = {...item, price:newAmount}\r\n                    }\r\n                    return item\r\n                })}\r\n            });\r\n        }\r\n        if( editingQT ) {\r\n            let newAmount;\r\n            if(input==='clear') {\r\n                newAmount = '0';\r\n                setQty('');\r\n            } else {\r\n                newAmount = qty + input;\r\n                if(inventory) {\r\n                    const {quantity} = cartProducts[activeSession][currentProduct];\r\n                    if(parseFloat(newAmount) > parseFloat(quantity)) return Warning( newAmount + \" stocks are not available\" );\r\n                }\r\n                setQty(newAmount);\r\n            }\r\n            \r\n            setCartProducts({...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                if(i=== currentProduct ) {\r\n                    item = {...item, stock:newAmount }\r\n                }\r\n                return item\r\n            }) });\r\n\r\n            dispatch({\r\n                type:\"CHOOSEN_PRODUCT\",\r\n                payload: {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                    if(i=== currentProduct ) {\r\n                        item = {...item, stock:newAmount }\r\n                    }\r\n                    return item\r\n                })}\r\n            })\r\n        }\r\n        window.electronAPI?.reloadWindow()\r\n    }\r\n\r\n    const [presetTxt, setPreset] = useState('')\r\n    useEffect(() => {\r\n        ckeyboardRef.current?.clearInput()\r\n    }, [presetTxt])\r\n\r\n\r\n    // handling size \r\n    const [scale, setScale] = useState(localStorage.getItem('_keyboard_scale')??1); // Default scale (1 = 100%)\r\n\r\n    const decrease = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.max(scale - 0.1, 0.5))\r\n        setScale(prev => Math.max(prev - 0.1, 0.5))\r\n    }\r\n    const increase = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.min(JSON.parse(scale) + 0.1, 2))\r\n        setScale(prev => Math.min(JSON.parse(prev) + 0.1, 2))\r\n    }\r\n    const fs2 = {fontSize: '2rem'}\r\n\r\n    return (\r\n        <>\r\n            <div className={`col-md-12 position-relative ${screenType==='customer' && \"d-grid justify-content-center\"}`} >\r\n                { (Object.keys(openingAmountSet).length === 0 || !openingAmountSet.status === true) && screenType!=='customer'? (\r\n                    <div className='overlay' style={{width:'100vw', height:'100vh',position:'absolute'}}>\r\n                        <Modal isOpen={true}>\r\n                            <Form onSubmit={openTheFuckingDay}>\r\n                                <ModalHeader>\r\n                                    <b>Day Opening!</b> <p>Good morning </p> \r\n                                </ModalHeader>\r\n                                <ModalBody>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    <b>Enter Opening Cash In Drawer</b>\r\n                                                </Label>\r\n                                                <Input \r\n                                                    type={'text'}\r\n                                                    placeholder={currency}\r\n                                                    onClick={()=>setFocused('cash')}\r\n                                                    onChange={e => setEnteredCash(e)}\r\n                                                    value={enteredCash}\r\n                                                    style={{border:'1px solid gray'}}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ModalBody>\r\n                                <ModalFooter className={'justify-content-center'}>\r\n                                    <Col md={5} className='btn btn-light' onClick={()=> navigator('/')} >\r\n                                        Back\r\n                                    </Col>\r\n                                    <Col md={5} >\r\n                                        <button className='w-100 btn btn-success' type={`submit`} > Start </button>\r\n                                    </Col>\r\n                                </ModalFooter>\r\n                            </Form>\r\n                        </Modal>\r\n                    </div>\r\n                ): null}\r\n                {\r\n                    screenType==='customer' && <div >\r\n                        <h2 className='text-center' style={{ fontSize:'3rem', fontWeight:'900' }}>\r\n                        {currency} {parseFloat(KartProducts[activeSession]?.reduce((acc, cur)=> acc + (cur.stock * parseFloat(cur.price)),0)).toFixed(2)}\r\n                        </h2>\r\n                    </div>\r\n                }\r\n                <div className={`col-md-4 pt-3 ${screenType==='customer'?'':'position-fixed'}`} style={{filter:Object.keys(openingAmountSet).length === 0 || !openingAmountSet.status === true ? 'blur(5px)':'',width:screenType==='customer'?'100%':'38.8%'}}>\r\n                    { sessions.map( session => (<div key={session} ref={sectionRef} className={`container ms-2 put-here ${activeSession===session?'':'d-none'} ${KartProducts[activeSession] && KartProducts[activeSession].length && screenType!=='customer' ?'action-visible':''}`} \r\n                        style={{\r\n                            borderRadius:'20px',\r\n                            backgroundColor:'#dadada'\r\n                    }}>\r\n                        <div className={`card ${KartProducts[activeSession] && KartProducts[activeSession].length? 'd-none':''}`} style={base}>\r\n                            <i className=\"fa-solid fa-cart-shopping\" style={{fontSize:'60px'}} />\r\n                            <b className=\"mt-3\"> Start adding products </b>\r\n                        </div>\r\n                        { KartProducts[activeSession] && KartProducts[activeSession].map( (item,index) => (<div key={index} className={`row chosen-product mt-2 ${currentProduct===index && 'selected'}`} data-id={item.id} onClick={()=> setCurrent(index)}>\r\n                            <div className=\"d-flex w-100\">\r\n                                <b style={{maxWidth:'24rem'}}> {item.name} </b>\r\n                                <strong className=\"price\" data-price={item.price}>{currency +' '+ (item.stock * parseFloat(item.price)).toFixed(2)}</strong>\r\n                            </div>\r\n                            <div className=\"d-flex\">\r\n                                <span className=\"quantity\"> {parseFloat(item.stock).toFixed(2)} </span>\r\n                                {item.id!=='quick' && <p className=\"ms-3 mt-1\">{`${currency + ' ' + parseFloat(item.price).toFixed(2)} / ${item.unit? item.unit : 'Units'}`}</p>}\r\n                            </div>\r\n                            <button className=\"btn\" onClick={()=>removeFromCart(index)}><i className=\"mdi mdi-close\"/></button>\r\n                        </div>))}\r\n                    </div>))}\r\n                    <div className={`container ms-2 mt-3 actionBar ${KartProducts[activeSession] && KartProducts[activeSession].length && screenType!=='customer' ? '':'d-none'}`} style={{height: '54vh'}}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12 d-flex\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <Link className=\"btn btn-light btn-rounded text-white\" to={`/payment/${activeSession}`} style={{backgroundColor:'#04537d',width:'93%'}}> {sale?'Payment':\"Return\"} </Link>\r\n                                </div>\r\n                                <div className=\"col-sm-6 d-flex justify-content-end align-items-center position-relative\">\r\n                                    <div className='position-absolute'>\r\n                                        <p style={{lineHeight:2.1}}><b> Total: &nbsp; \r\n                                        <span className=\"total-amount\" style={{left:0,fontSize:'2.3rem'}}>{!sale && '-'} {currency} {parseFloat(KartProducts[activeSession]?.reduce((acc, cur)=> acc + (cur.stock * parseFloat(cur.price)),0)).toFixed(2)} </span> </b></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            {[1,2,3].map( it => <div className=\"col-sm-3\" key={it} onClick={(e)=> changeInput(it,e)}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} style={btnStyle}> <b> {it} </b> </button>\r\n                            </div>)}\r\n                            <div className=\"col-sm-3\" onClick={resetCart}>\r\n                                <button className=\"btn btn-light text-dark w-100 num\" type=\"button\" style={{...btnStyle,padding:10}}> <b>Cancel {sale?'Sale':'Return'}</b> </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            { [4,5,6].map( it => <div className=\"col-sm-3\" key={it} onClick={(e)=> changeInput(it,e)}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} style={btnStyle}> <b> {it} </b> </button>\r\n                            </div>)}\r\n                            <div className=\"col-sm-3\"/>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            {[7,8,9].map( ite => <div className=\"col-sm-3\" key={ite} onClick={(e)=> changeInput(ite,e)}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} style={btnStyle}> <b> {ite} </b> </button>\r\n                            </div>)}\r\n                            <div className=\"col-sm-3\" onClick={()=> {\r\n                                if( editingQT===true ) {\r\n                                    setQty('')\r\n                                } \r\n                                setEditingQT(!editingQT)\r\n                            }}>\r\n                                <button className='btn btn-light num w-100' style={{...btnStyle,padding:10}}><b>{!editingQT?'Edit Qty':'Done'}</b></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            <div className=\"col-sm-3\">\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} onClick={e => changeInput('.',e)} style={btnStyle}> <b> . </b> </button>\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} onClick={e=> changeInput(0, e)} style={btnStyle}> <b> 0 </b> </button>\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} onClick={e=>changeInput('clear',e)} style={{...btnStyle,padding:'15px 10px'}}> <b>Reset</b> </button>\r\n                            </div>\r\n                            <div className=\"col-sm-3\" onClick={(e)=> {\r\n                                if(editing===false){\r\n                                    setNumber(0)\r\n                                    setCartProducts( {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                                        if(i=== currentProduct ) {\r\n                                            item = {...item, price:0}\r\n                                        }\r\n                                        return item\r\n                                    }) });\r\n                                    dispatch({\r\n                                        type:\"CHOOSEN_PRODUCT\",\r\n                                        payload: {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                                            if(i=== currentProduct ) {\r\n                                                item = {...item, price:0}\r\n                                            }\r\n                                            return item\r\n                                        })}\r\n                                    });\r\n                                }\r\n                                setEditing(!editing)\r\n                            }}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" style={{...btnStyle,padding:10}}> <b> {!editing?'Edit Price':'Done'} </b> </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {screenType!=='customer' ? <div className=\"col-md-7 position-absolute library\" style={{\r\n                    height:'70vh',\r\n                    right:'5px',\r\n                    filter: Object.keys(openingAmountSet).length === 0 || !openingAmountSet.status === true ? 'blur(5px)':''\r\n                    }}\r\n                    \r\n                >\r\n                    <div className=\"position-fixed\" style={{backgroundColor:'#a0bfcf',minHeight:70, width:'-webkit-fill-available',zIndex:100,marginTop:-1}}>\r\n                        <div className=\"category row ms-5\" style={{flexWrap:'nowrap'}} ref={cRef}>\r\n\r\n                            { prCategories.map((Cat,i) => (<div key={i} \r\n                                className={`category-item ${i===0 ?'active':''}`} \r\n                                style={{color:isColorDark(hexToRgb(Cat.color))? 'white':'black',background:Cat.color,minWidth:'150px'}} \r\n                                onClick={()=>filterProducts(Cat.id)}\r\n                                draggable={true}\r\n                                onDragStart={() => handleDragStart(i)}\r\n                                onDragOver={e => handleDragOver(e,i)}\r\n                                onDrop={handleDrop}\r\n                            >\r\n                                {(Cat.name).includes('/') ? (Cat.name).split('/')[1]: Cat.name }\r\n                            </div>))}\r\n\r\n                            <div className='category-item' onClick={()=> filterProducts(null)} style={{background:\"azure\", width:200, marginRight:80}}>\r\n                                Other \r\n                            </div>\r\n                            <div className='position-fixed t-scroller' style={{bottom:40,right:40}} onClick={scrollTop}>\r\n                                <button className='btn btn-rounded bg-white' style={{border:\"2px dashed\"}}>\r\n                                    <i className='fa fa-arrow-up'/>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <button className={`btn prev position-relative`} style={{top:5,zIndex:2,left:-30}} onClick={()=> cRef.current.scrollBy({left:-200, behavior:'smooth'})}>\r\n                            <i style={fs2} className=\"fa-solid fa-circle-chevron-left text-dark\"/>\r\n                        </button>\r\n                        <button className=\"btn next position-absolute\" style={{right:-10,top:5,zIndex:2 }} onClick={()=>cRef.current.scrollBy({left:200, behavior:'smooth'})}>\r\n                            <i style={fs2} className=\"fa-solid fa-circle-chevron-right text-dark\" />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"contents\" >\r\n                        {\r\n                            Other && (<div className='row mt-3' >\r\n                                <div className={`col-md-${chunkSize===3?'4':'3'} also`} onClick={()=>toggleModal(!otherOpen)}>\r\n                                    <div className='cell'>\r\n                                        <div className='w-100'>\r\n                                            <img className='title-img' src={addNew} alt={\"Other\"}/>\r\n                                        </div>\r\n                                        <div className='w-100' style={{color:'black', background:'lightgray'}}>\r\n                                            <strong className='wrapped-text'>\r\n                                                Add New &nbsp;\r\n                                                <span className='fa fa-plus fs-5' />\r\n                                            </strong>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>)\r\n                        }\r\n                        { products.map( (row, k) => (<div className={'row mt-3'} key={k}>\r\n                                {row.map((product,i ) => (\r\n                                    <div key={i} className={`col-md-${chunkSize===3?'4':'3'} also ${(product.quantity - product.stock)===0 || product.quantity - cartStocks[product.id] === 0 || parseInt(product.quantity)=== 0 ? 'stock-out':''}`} onClick={()=>addToCart(product.id)} data-id={product.id}>\r\n                                        <div className='cell' style={{minHeight:135}}>\r\n                                            {\r\n                                            (displayImage || product.category_id === prCategories[0].id) &&\r\n                                            <div className='w-100'>\r\n                                                <img className='title-img' src={process.env.REACT_APP_BACKEND_URI+'images/'+product.image} onError={handleImgError} alt={product.name}/>\r\n                                            </div>\r\n                                            }\r\n                                            <div className='w-100' style={{minHeight: !displayImage && product.category_id !== prCategories[0].id && 'inherit' ,color:isColorDark(hexToRgb(catColors[product.category_id]))? 'white':'black', background:catColors[product.category_id]}}>\r\n                                                <strong className='wrapped-text' style={{alignContent:'center'}}>\r\n                                                    {wrapText(product.name, 100)}\r\n                                                    {\r\n                                                        product.name.length > 100 &&\r\n                                                    <span className='tooltiptext'>{product.name}</span>\r\n                                                    }\r\n                                                </strong>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='extras'>\r\n                                            <div className='tax'>\r\n                                                <small> Tax </small>\r\n                                                <div style={{fontSize:'800'}}>{product.tax}</div>\r\n                                            </div>\r\n                                            <div className='stock'>\r\n                                                <small>Items : </small>\r\n                                                <div style={{fontSize:'800'}}>{ product.quantity - (cartStocks[product.id]?? 0) }</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>))\r\n                        }\r\n                        \r\n                    </div>\r\n                    {products.length === 0 && !Other && (<div className=\"lib-loader justify-content-center align-items-center\" \r\n                    style={{height:'30rem',placeContent:'center',textAlign:'center'}} >\r\n                        {\r\n                            noProduct && isSuccess? <>\r\n                            <h1>  {prCategories.length ? 'No products for this category': 'No products...'}</h1>\r\n                            <button className='btn btn-rounded btn-warning fs-4' onClick={fetchPhoneProducts}> \r\n                                { loadingPhone? <i className='fa fa-spin fa-spinner'/>:'Sync phone products'} \r\n                            </button> \r\n                            </> : \r\n                            <i className='fa fa-spin fa-spinner' />\r\n                        }\r\n                        \r\n                    </div>)}\r\n                </div>: null}\r\n            </div>\r\n\r\n            <Modal isOpen={otherOpen} fade={false}>\r\n                <Form onSubmit={addCustomProduct}>\r\n                <ModalHeader >\r\n                    Add Custom Product\r\n                </ModalHeader>\r\n                <ModalBody style={{padding:20}}>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Name </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    onChange={e => setCustom({...custom, name: e.target.value})}\r\n                                    value={custom.name}\r\n                                    onClick={e => {\r\n                                        setFocusedCustom('name')\r\n                                        setPreset('custom.name')\r\n                                        if(!dragged) setPosition({...position, y: e.target.getBoundingClientRect().y + 50})\r\n                                    }}\r\n                                    className='input'\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Price </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    className='input'\r\n                                    onChange={e => setCustom({...custom, price: e.target.value})}\r\n                                    onClick={e => {\r\n                                        setFocusedCustom('price')\r\n                                        setPreset('custom.price')\r\n                                        if(!dragged) setPosition({...position, y: e.target.getBoundingClientRect().y + 50})\r\n                                    }}\r\n                                    value={custom.price}\r\n                                    placeholder={currency}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Stock </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    className='input'\r\n                                    onChange={e => setCustom({...custom, stock: e.target.value})}\r\n                                    onClick={ e => {\r\n                                        setFocusedCustom('stock')\r\n                                        setPreset('custom.stock')\r\n                                        if(!dragged) setPosition({...position, y: e.target.getBoundingClientRect().y + 50})\r\n                                    }}\r\n                                    value={custom.stock}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Barcode </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    className='input'\r\n                                    placeholder='Enter barcode'\r\n                                    onChange={e => setCustom({...custom, barcode: e.target.value})}\r\n                                    value={custom.barcode}\r\n                                    onClick={e => {\r\n                                        setFocusedCustom('barcode')\r\n                                        setPreset('custom.barcode')\r\n                                        if(!dragged) setPosition({...position, y: e.target.getBoundingClientRect().y + 50})\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <label className='custom-file-upload' > \r\n                            <i className={'fa fa-paperclip'} /> &nbsp;\r\n                            <Input \r\n                                type='file' \r\n                                className='d-none'\r\n                                accept='image/*'\r\n                                onChange={handleFile}\r\n                            />\r\n                            Upload Product Image\r\n                        </label>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className='btn btn-light btn-rounded' type='button' onClick={()=> toggleModal(!otherOpen)} > Close </button>\r\n                    <button className='btn btn-primary btn-rounded'> Submit </button>\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            <Modal isOpen={opened} fade={false}>\r\n                <Form onSubmit={addVeg}>\r\n                    <ModalHeader>\r\n                        <b> Add Vegetable </b>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        <b> Price </b>\r\n                                    </Label>\r\n                                    <Input \r\n                                        type='text'\r\n                                        placeholder={currency}\r\n                                        onChange={e => setVegetable({...vegetable, price:e.target.value})}\r\n                                        defaultValue={vegetable.price}\r\n                                        style={{border:'1px solid gray'}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        <b> Weight </b>\r\n                                    </Label>\r\n                                    <Input \r\n                                        type='text'\r\n                                        placeholder={`KGs / gm`}\r\n                                        onChange={e => setVegetable({...vegetable, unit:e.target.value})}\r\n                                        defaultValue={vegetable.unit}\r\n                                        style={{border:'1px solid gray'}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Quantity (optional)\r\n                                    </Label>\r\n                                    <Input \r\n                                        type='text'\r\n                                        pattern=\"^\\d+(\\.\\d+)?$\"\r\n                                        onChange={e=> setVegetable({...vegetable, stock: e.target.value})}\r\n                                        defaultValue={vegetable.stock}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        <button className='btn btn-light btn-rounded' type='button' onClick={()=> toggleVegetableModal(!opened)} >\r\n                            Cancel\r\n                        </button>\r\n                        <button className='btn btn-rounded btn-success' type={`submit`} > Add </button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            <Modal isOpen={appModal} size='sm' fade={false}>\r\n                <Form onSubmit={fetchPhoneProducts}>\r\n                    <ModalHeader>\r\n                        Enter application key \r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Input onChange={e=> setKey(e.target.value)} type='text' name='appKey'/>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className='btn btn-light btn-sm btn-rounded' type='button' onClick={()=> setAppModal(!appModal)}>Cancel</button>\r\n                        <button className='btn btn-success btn-sm btn-rounded' > Submit </button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            {focused && <div className='mt-4 position-fixed w-50' style={{zIndex:9999, top:60 }}>\r\n                <div\r\n                    style={{\r\n                        overflow: \"hidden\",\r\n                        position: \"relative\",\r\n                    }}\r\n                    onMouseMove={handleMouseMove}\r\n                    onMouseUp={handleMouseUp}\r\n                    >\r\n                    <div\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            top: `${position.y}px`,\r\n                            left: `${position.x}px`,\r\n                            cursor: dragging ? \"grabbing\" : \"grab\",\r\n                            zIndex: 1000,\r\n                            width:700\r\n                        }}\r\n                    >\r\n                        <div\r\n                        onMouseDown={handleMouseDown}\r\n                            style={{\r\n                                background: \"#444\",\r\n                                color: \"#fff\",\r\n                                padding: \"5px 10px\",\r\n                                cursor: \"grab\",\r\n                                textAlign: \"center\",\r\n                                borderRadius: \"8px 8px 0 0\",\r\n                            }}\r\n                        >\r\n                            Hold To Drag \r\n                        </div>\r\n                            <Keyboard\r\n                                onChange={e => setEnteredCash(e)}\r\n                                keyboardRef={(r) => (keyboardRef.current = r)}\r\n                                layout={{\r\n                                    default:[\r\n                                        \"1 2 3 4 5 6 7 8 9 0 . {bksp}\",\r\n                                    ],\r\n                                }}\r\n                            />\r\n                        <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                            <button className='btn btn-light btn-rounded' onClick={()=>{\r\n                                setEnteredCash('')\r\n                            }} style={{border:'1px solid gray'}}>CLEAR</button>\r\n                            <button onClick={()=>setFocused('')} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            {focusedCustom && <div className='mt-4 position-fixed w-50' style={{zIndex:9999, top:60 }}>\r\n                <div\r\n                    style={{\r\n                        overflow: \"hidden\",\r\n                        position: \"relative\",\r\n                    }}\r\n                    onMouseMove={handleMouseMove}\r\n                    onMouseUp={handleMouseUp}\r\n                    >\r\n                    <div\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            top: `${position.y}px`,\r\n                            left: `${position.x}px`,\r\n                            cursor: dragging ? \"grabbing\" : \"grab\",\r\n                            zIndex: 1000,\r\n                            width:700,\r\n                            transform: `scale(${scale})`, transformOrigin: \"top center\"\r\n                        }}\r\n                    >\r\n                        <div\r\n                        onMouseDown={handleMouseDown}\r\n                            style={{\r\n                                background: \"#444\",\r\n                                color: \"#fff\",\r\n                                padding: \"5px 10px\",\r\n                                cursor: \"grab\",\r\n                                textAlign: \"center\",\r\n                                borderRadius: \"8px 8px 0 0\",\r\n                            }}\r\n                        >\r\n                            Hold To Drag \r\n                        </div>\r\n                            <Keyboard\r\n                                onChange={fillCustom}\r\n                                keyboardRef={(r) => (ckeyboardRef.current = r)}\r\n                                onKeyPress={(e) => {\r\n                                    if(e === \"{lock}\")\r\n                                    {\r\n                                        setLayout((prev) => (prev === \"default\" ? \"shift\" : \"default\"))\r\n                                    }\r\n                                }}\r\n                                layout={{\r\n                                    default: ['price','stock'].includes(focusedCustom)? [\r\n                                        \"1 2 3\",\r\n                                        \"4 5 6\",\r\n                                        \"7 8 9\",\r\n                                        \"0 . {bksp}\"\r\n                                    ]:[\r\n                                        \"1 2 3 4 5 6 7 8 9 0\",\r\n                                        \"q w e r t y u i o p\",\r\n                                        \"{lock} a s d f g h j k l\",\r\n                                        \"z x c v b n m {bksp}\",\r\n                                        \"{space}\"\r\n                                    ],\r\n                                    shift: [\r\n                                        \"1 2 3 4 5 6 7 8 9 0\",\r\n                                        \"Q W E R T Y U I O P\",\r\n                                        \"{lock} A S D F G H J K L\",\r\n                                        \"Z X C V B N M {bksp}\",\r\n                                        \"{space}\"\r\n                                    ]\r\n                                }}\r\n                                display={{\r\n                                    \"{bksp}\":['price','stock'].includes(focusedCustom) ? 'X': 'backspace',\r\n                                    '{space}' : \" \",\r\n                                    '{lock}' : \"Caps\"\r\n                                }}\r\n                                layoutName={layout}\r\n                            />\r\n                        <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                            <button className='btn btn-light btn-rounded' onClick={()=>{\r\n                                setCustom({...custom, [focusedCustom]:''})\r\n                                ckeyboardRef.current.clearInput()\r\n                            }} style={{border:'1px solid gray'}}>CLEAR</button>\r\n                            <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={decrease}>-</button>\r\n                            <span style={{placeContent:'center'}}> Size: {Math.round(scale * 100)}% </span>\r\n                            <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={increase}>+</button>\r\n                            <button onClick={()=>setFocusedCustom('')} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(POS)","import $ from 'jquery'\r\nimport toast from 'react-hot-toast';\r\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport const validate = (fields,exceptions=[]) => {\r\n    let result={}\r\n    var shouldGo=true;\r\n    if(exceptions.length)\r\n    {\r\n        exceptions.forEach( item => {\r\n            delete fields[item]\r\n        })\r\n    }\r\n    Object.keys(fields).forEach(f =>\r\n    {\r\n        let shout = '';\r\n        let invalid = false;\r\n        let tInputs = [$(`input[name=${f}]`), $(`select[name=${f}]`), $(`textarea[name=${f}]`), $(`.${f}`)]\r\n        if(fields[f]==null || fields[f].length===0)\r\n        {\r\n            result[f]=`Required!`;\r\n            shouldGo=false;\r\n            invalid = true;\r\n        }\r\n        tInputs.forEach( input => {\r\n\r\n            let minLength = $(input).attr('type')!== 'date' ? $(input).attr('min'): 0;\r\n            let maxLength = $(input).attr('max');\r\n            let type = $(input).attr('cast');\r\n            let isDate = $(input).attr('type')==='date' && $(input).attr('req');\r\n            if($(input).val()?.length && (minLength || maxLength))\r\n            {\r\n                if($(input).val().length < parseInt(minLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should be of at least ${minLength} characters!`\r\n                    result[f] = shout;\r\n                }\r\n                if($(input).val().length > parseInt(maxLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should not be greater than ${maxLength} characters!`;\r\n                    result[f] = shout;\r\n                }\r\n            }\r\n            if(type)\r\n            { \r\n                if(input.val() && type === 'num')\r\n                {\r\n                    if(parseInt($(input).val().length )!== $(input).val().length) {\r\n                        shout= `Should be in numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n                if( $(input).val() && type=== 'str' )\r\n                {\r\n                    if( /^([^0-9]*)$/.test($(input).val())===false )\r\n                    {\r\n                        shout= `Should not contain numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n            }\r\n            if(isDate)\r\n            {\r\n                if(!isValidDate($(input).val(),18))\r\n                {\r\n                    invalid = true\r\n                    shout = 'Invalid date';\r\n                    result[f] = shout;\r\n                } else {\r\n                    shout = '';\r\n                }\r\n                // return\r\n            }\r\n            if(shout)   \r\n            {\r\n                if($(input).parents('.col-md-12, .col').find('small.text-danger').length)\r\n                {\r\n                    $(input).parents('.col-md-12, .col').find('small.text-danger').text(shout)\r\n                } else {\r\n                    $(input).parents('.col-md-12, .col').append('<small class=\"text-danger\">'+shout+'</small>')\r\n                }\r\n            } else {\r\n                $(input).parents('.col-md-12, .col').find('small.text-danger').remove()\r\n            }\r\n            if(invalid){\r\n                shouldGo = false;\r\n                $(input).addClass('placeholder-error')\r\n                .attr('placeholder',result[f]).css('border','1px solid red');\r\n            } else {\r\n                $(input).removeClass('placeholder-error').attr('placeholder',result[f]).css('border','');\r\n            }\r\n        })\r\n    })\r\n    return {result, shouldGo};\r\n}\r\n\r\nexport const getCurrentDate = (delimiter='-') => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year+delimiter+month+delimiter+day}`;\r\n}\r\n\r\nexport const formatDate = (date=null,format='Ymd') => {\r\n    const dateObj = date?new Date(date): new Date();\r\n    const year = dateObj.getFullYear();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(dateObj.getDate()).padStart(2, '0');\r\n    if(format[0]==='Y')\r\n    {\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n    if(format[0]==='d')\r\n    {\r\n        return `${day}-${month}-${year}`;\r\n    }\r\n}\r\n\r\nexport const getCurrentDay = () => {\r\n    return daysOfWeek[(new Date()).getDay()];\r\n}\r\n\r\nexport const getCurrentTime = () => {\r\n    const currentDate = new Date();\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nexport const toBase64 = blob => {\r\n\r\n}\r\n\r\nexport const dataURLtoFile = (dataurl, filename) => {\r\n    var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[arr.length - 1]), \r\n        n = bstr.length, \r\n        u8arr = new Uint8Array(n);\r\n    while(n--){\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\nexport const isValidDate = ( date, range ) => {\r\n    let today = getCurrentDate();\r\n    let year = today.split('-')[0];\r\n    let intended = new Date(today.replace(year, (parseInt(year)-range)));\r\n    return intended > new Date(date)\r\n}\r\n\r\nexport const capitalFirst = (string) => {\r\n    if (!string) return string; // Handle empty or null strings\r\n    if(string.includes(' ')){\r\n        let str= '';\r\n        string.split(' ').forEach( part => {\r\n           str+=' '+ part.charAt(0).toUpperCase() + part.slice(1); \r\n        })\r\n        return str;\r\n    }\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const getDocumentName = id => {\r\n\r\n    const documents = {\r\n        1 : 'VISIT PHOTO',\r\n        2 : 'AADHAAR CARD',\r\n        3 : 'VOTER CARD',\r\n        4 : 'GROUP PHOTO',\r\n        5 : 'CGT_FIRST',\r\n        6 : 'CGT_SECOND',\r\n        7 : 'CIBIL',\r\n        8 : 'SANCTION LETTER',\r\n        9 : 'KYC',\r\n        10 : 'BANK PASSBOOK',\r\n        11 : 'RELATION PROOF DOCUMENT',\r\n    }\r\n    return documents[id];\r\n    \r\n}\r\n\r\nexport const Warning = msg => {\r\n    return toast(msg,\r\n        {\r\n          icon: '⚠️',\r\n          style: {\r\n            borderRadius: '10px',\r\n            background: '#333',\r\n            color: '#fff',\r\n          },\r\n        }\r\n    );\r\n}\r\n\r\nexport const hexToRgb = (hex) => {\r\n    // Remove the '#' if present\r\n\r\n    if(!hex || typeof hex == 'object'){\r\n        return hex\r\n    }\r\n\r\n    hex = hex.replace(/^#/, '');\r\n    // Convert shorthand hex (e.g., #03F) to full form (e.g., #0033FF)\r\n    if (hex.length === 3) {\r\n        hex = hex.split('').map(h => h + h).join('');\r\n    }\r\n    // Convert hex to RGB\r\n    const r = parseInt(hex.slice(0, 2), 16);\r\n    const g = parseInt(hex.slice(2, 4), 16);\r\n    const b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport const isColorDark = (hexColor) => {\r\n    // Convert hex color to RGB\r\n    let output = hexToRgb(hexColor)\r\n    if(output === undefined) return hexColor\r\n    const { r, g, b } = output\r\n\r\n    // Calculate the luminance\r\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n\r\n    // Return true if the color is dark, else false\r\n    return luminance < 128;\r\n}\r\n\r\nexport function chunk(array, size, uncategorized = false) {\r\n    const result = [];\r\n    if(!array) return []\r\n    if(uncategorized) array.unshift({})\r\n    for (let i = 0; i < array.length; i += size) {\r\n        // Use slice to get a chunk of the specified size and push it to the result array\r\n        result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const wrapText = (text, maxLength) => {\r\n\r\n    if (text?.length > maxLength) {\r\n        let truncatedText = text.substring(0, maxLength) + '...';\r\n        return truncatedText;\r\n    }\r\n    return text\r\n}\r\n\r\nexport const formatDatefromTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    const seconds = String(date.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n  "],"names":["POS","_localStorage$getItem","_KartProducts$activeS13","_KartProducts$activeS14","sectionRef","useRef","cRef","dispatch","useDispatch","navigator","useNavigate","location","useLocation","currency","split","cartStocks","cartProducts","openingCash","appKey","inventory","useSelector","state","auth","key","setKey","useState","chunkSize","window","screen","availWidth","appModal","setAppModal","openingAmountSet","setOpeningAmount","reloadCount","enteredCash","setEnteredCash","data","isSuccess","useGetProductCategoriesQuery","products","setProducts","catColors","putCats","noProduct","setNoProduct","prCategories","setCategories","initialProducts","setInitialProducts","KartProducts","setCartProducts","currentProduct","setCurrent","Other","toggleOther","otherOpen","setModal","availableStocks","setAvailableStocks","barcode","setBarcode","opened","toggleVegetableModal","number","setNumber","qty","setQty","editing","setEditing","loadingPhone","setLoading","editingQT","setEditingQT","vegetable","setVegetable","custom","setCustom","image","price","name","stock","focused","setFocused","focusedCustom","setFocusedCustom","position","setPosition","x","y","availHeight","dragging","setDragging","dragged","setDragged","offset","setOffset","keyboardRef","ckeyboardRef","layout","setLayout","handleMouseDown","useCallback","e","clientX","clientY","handleMouseMove","handleMouseUp","btnStyle","minHeight","fontSize","useEffect","inputBuffer","handleKeyDown","event","preventDefault","length","addEventListener","removeEventListener","allProducts","useGetPosProductsQuery","searchQuery","sessions","activeSession","displayImage","sale","useSearch","_allProducts$data","chunk","filter","ite","toLowerCase","includes","fetchPhoneProducts","async","type","payload","axios","get","concat","status","toast","success","message","fd","FormData","midFile","dataURLtoFile","file","append","resp","post","headers","localStorage","getItem","setTimeout","reload","error","console","log","addToCart","prID","_cartProducts$activeS","_copyKartProducts$act2","_window$electronAPI2","product","find","id","catName","indexOf","i","parseInt","quantity","_objectSpread","unit","copyKartProducts","JSON","parse","stringify","thisProduct","updatedStock","availableStock","document","querySelector","classList","add","_KartProducts$activeS7","_KartProducts$activeS8","findIndex","item","_KartProducts$activeS9","_KartProducts$activeS10","_Object$values$flat$f2","_Object$values$flat2","_KartProducts$activeS11","_KartProducts$activeS12","consumed","Object","values","flat","reduce","prev","electronAPI","reloadWindow","toggleModal","handleImgError","target","src","labelImg","items","setItems","draggedItemIndex","setDraggedItemIndex","handleDrop","filterProducts","catID","category_id","scrollToSection","el","scrollIntoView","behavior","block","then","_ref3","Warning","catch","finally","categories","cats","forEach","cat","color","_allProducts$data$pro","_data$categories$","base","height","placeContent","display","placeItems","width","backgroundColor","marginTop","screenType","useParams","_window$electronAPI5","onDataReceived","changeInput","input","_window$electronAPI6","stopPropagation","newAmount","map","parseFloat","presetTxt","setPreset","_ckeyboardRef$current","current","clearInput","scale","setScale","fs2","_jsxs","_Fragment","children","className","keys","_jsx","style","Modal","isOpen","Form","onSubmit","cash","_ref2","created","ModalHeader","ModalBody","Row","Col","FormGroup","Label","Input","placeholder","onClick","onChange","value","border","ModalFooter","md","fontWeight","acc","cur","toFixed","session","ref","borderRadius","index","maxWidth","_window$electronAPI4","removeFromCart","Link","to","lineHeight","left","it","disabled","resetCart","_window$electronAPI3","padding","right","zIndex","flexWrap","Cat","isColorDark","hexToRgb","background","minWidth","draggable","onDragStart","onDragOver","handleDragOver","newItems","draggedItem","splice","commonApiSlice","util","updateQueryData","undefined","cache","onDrop","marginRight","bottom","scrollTo","top","scrollBy","addNew","alt","row","k","_cartStocks$product$i","process","onError","alignContent","wrapText","tax","textAlign","fade","_custom$name","push","getBoundingClientRect","accept","files","_copyKartProducts$act","_window$electronAPI","_KartProducts$activeS","_KartProducts$activeS2","_KartProducts$activeS3","_KartProducts$activeS4","_Object$values$flat$f","_Object$values$flat","_ref","_KartProducts$activeS5","_KartProducts$activeS6","defaultValue","pattern","size","overflow","onMouseMove","onMouseUp","cursor","onMouseDown","Keyboard","r","default","justifyContent","transform","transformOrigin","onKeyPress","shift","layoutName","decrease","setItem","Math","max","round","increase","min","memo","dataurl","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","capitalFirst","string","str","part","charAt","toUpperCase","slice","msg","icon","hex","replace","h","join","g","b","hexColor","output","array","result","arguments","unshift","text","maxLength","substring","formatDatefromTimestamp","timestamp","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getSeconds"],"sourceRoot":""}