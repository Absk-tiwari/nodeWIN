{"version":3,"file":"static/js/429.ae39615a.chunk.js","mappings":"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","sources":["components/config/Notes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap';\r\nimport { useGetNotesQuery } from '../../features/centerSlice';\r\nimport Keyboard from 'react-simple-keyboard';\r\n\r\nexport default function Notes() {\r\n    const [fields, setFields] = useState({})\r\n    const dispatch = useDispatch();\r\n\r\n    const {currency} = useSelector( state => state.auth )\r\n    const [notes, setNotes] = useState([]);\r\n    const [open, setModal] = useState(false);\r\n    const [image, setImage] = useState(null);\r\n    const {data, isSuccess} = useGetNotesQuery();\r\n\r\n    const toggleModal = () => {\r\n        setFocused(null)\r\n        setModal(!open)\r\n    }\r\n\r\n    const change = e => setFields({...fields, [e.target.name]:e.target.value})\r\n\r\n    const deleteNote = (id) => {\r\n\r\n        if(!window.confirm('Are you sure?')) return;\r\n\r\n        dispatch({type:\"LOADING\"});\r\n\r\n        axios.get(`/notes/remove/${id}`).then(({data})=> {\r\n            console.log(data)\r\n            setNotes(notes.filter(item => item.id!== id));\r\n        }).catch(err => {})\r\n        .finally(()=> dispatch({type:\"STOP_LOADING\"}));\r\n        \r\n    }\r\n\r\n    const createNote = e => {\r\n        e.preventDefault();\r\n        setFocused(null)\r\n        if(!image) return toast.error(\"Choose an image!\");\r\n        let fd = new FormData();\r\n        fd.append('image', image);\r\n        fd.append('amount', (fields.amount - 0));\r\n        if(notes.some( n => parseInt(n.amount) === parseInt(fields.amount))) {\r\n            return toast.error(`${parseInt(fields.amount)} note is already added!`);\r\n        }\r\n        dispatch({ type:\"LOADING\" });\r\n\r\n        axios.post(`/notes/create`, fd , {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                \"Content-Type\" : \"multipart/form-data\",\r\n                'pos-token' : localStorage.getItem('pos-token')\r\n            }\r\n        }).then(({data}) => {\r\n            if(data.status) {\r\n                toast.success(\"Note added!\");\r\n                toggleModal()\r\n            }\r\n            setNotes([...notes, data.note])\r\n        }).catch( er => toast.error(er.response?.responseText?? 'Something went wrong!') )\r\n        .finally(() => dispatch({ type: \"STOP_LOADING\" }) )\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(isSuccess) {\r\n            setNotes(data.notes)\r\n        }\r\n    },[data, isSuccess])\r\n    const [position, setPosition] = useState({ x: window.screen.availWidth/4, y: window.screen.availHeight / 2 });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [offset, setOffset] = useState({  x: 0, y: 0  });\r\n\r\n    const handleMouseDown = (e) => {\r\n        setDragging(true);\r\n        setOffset({\r\n          x: e.clientX - position.x,\r\n          y: e.clientY - position.y,\r\n        });\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!dragging) return;\r\n        setPosition({\r\n            x: e.clientX - offset.x,\r\n            y: e.clientY - offset.y,\r\n        });\r\n    }\r\n    const handleMouseUp = () => setDragging(false);\r\n    const [ focused, setFocused ] = useState('');\r\n    const [scale, setScale] = useState(localStorage.getItem('_keyboard_scale')??1); // Default scale (1 = 100%)\r\n    const decrease = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.max(scale - 0.1, 0.5))\r\n        setScale(prev => Math.max(prev - 0.1, 0.5))\r\n    }\r\n    const increase = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.min(JSON.parse(scale) + 0.1, 2))\r\n        setScale(prev => Math.min(JSON.parse(prev) + 0.1, 2))\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"content-wrapper\">\r\n                <div className=\"d-grid mt-3\" >\r\n                    <div id=\"category\">\r\n                        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <button className=\"btn btn-sm btn-success\" onClick={toggleModal}> Add New</button>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"table-responsive w-100 categoryTable\">\r\n                                        <table className='table table-bordered' style={{borderRadius:10}}>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.No</th>\r\n                                                    <th>Amount</th>\r\n                                                    <th>Image</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {notes.map( (item,i) => (\r\n                                                    <tr key={item.id}>\r\n                                                        <td>{++i}</td>\r\n                                                        <td> {currency} {item.amount} </td>\r\n                                                        <td><img src={process.env.REACT_APP_BACKEND_URI+'images/'+item.image} style={{ borderRadius:0,height:60, width:100 }} alt='' /></td>\r\n                                                        <td>\r\n                                                            <button className={`btn btn-danger btn-sm`} onClick={()=>deleteNote(item.id)} >\r\n                                                                Delete\r\n                                                            </button>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Modal isOpen={open} toggle={toggleModal} > \r\n                <Form onSubmit={createNote} >\r\n                    <ModalHeader > Update Product </ModalHeader>\r\n                        <ModalBody>\r\n                            <Container>\r\n                                <Row>\r\n                                    <FormGroup>\r\n                                        <Label> Amount </Label>\r\n                                        <Input\r\n                                            type={'number'}\r\n                                            name='amount'\r\n                                            onClick={()=> setFocused('amount')}\r\n                                            pattern=\"^\\d+(\\.\\d+)?$\"\r\n                                            onChange={change}\r\n                                            value={fields.amount}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Row>\r\n                                <Row>\r\n                                    <FormGroup>\r\n                                        <Label> Image </Label>\r\n                                        <Input \r\n                                            type='file'\r\n                                            accept='image/*'\r\n                                            onChange={e => {setFocused(null);setImage(e.target.files[0])}}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Row> \r\n                            </Container>\r\n                        </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className=\"btn btn-light btn-rounded\" type=\"button\" onClick={toggleModal}>\r\n                            Close\r\n                        </button>\r\n                        <button className=\"btn btn-success btn-rounded\" type=\"submit\" >\r\n                            Upload\r\n                        </button>\r\n                    </ModalFooter> \r\n                </Form>\r\n            </Modal>\r\n            {focused && <div className='mt-4 position-fixed w-50' style={{zIndex:9999, top:60 }}>\r\n            <div\r\n                style={{\r\n                    overflow: \"hidden\",\r\n                    position: \"relative\",\r\n                    touchAction: \"none\",\r\n                }}\r\n                onMouseMove={handleMouseMove}\r\n                onTouchMove={handleMouseMove}\r\n                onMouseUp={handleMouseUp}\r\n                onTouchEnd={handleMouseUp}\r\n            >\r\n                <div\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: `${position.y}px`,\r\n                        left: `${position.x}px`,\r\n                        cursor: dragging ? \"grabbing\" : \"grab\",\r\n                        zIndex: 1000,\r\n                        width:700,\r\n                        resize:'both',\r\n                        overflow:'auto',\r\n                        touchAction: \"none\",\r\n                        transform: `scale(${scale})`, transformOrigin: \"top center\"\r\n                    }}\r\n                >\r\n                    <div\r\n                        onMouseDown={handleMouseDown}\r\n                        onTouchStart={handleMouseDown}\r\n                        style={{\r\n                            background: \"#444\",\r\n                            color: \"#fff\",\r\n                            padding: 10,\r\n                            cursor: \"grab\",\r\n                            textAlign: \"center\",\r\n                            borderRadius: \"8px 8px 0 0\",\r\n                            touchAction: \"none\",\r\n                        }}\r\n                    >\r\n                        Hold To Drag \r\n                    </div>\r\n                        <Keyboard\r\n                            onChange={e => setFields({...fields, amount:e})}\r\n                            layout={{\r\n                                default: [\r\n                                    \"1 2 3\",\r\n                                    \"4 5 6\",\r\n                                    \"7 8 9\",\r\n                                    \"0  {bksp}\",\r\n                                ]\r\n                            }}\r\n                            display={{ \r\n                                \"{bksp}\":\"x\", \r\n                            }}\r\n                        />\r\n                    <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                        <button className='btn btn-light btn-rounded' onClick={()=>setFields({...fields, amount:''})} style={{border:'1px solid gray'}}>CLEAR</button>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={decrease}>-</button>\r\n                        <span> Size: {Math.round(scale * 100)}% </span>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={increase}>+</button>\r\n                        <button onClick={()=>setFocused(!focused)} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>}\r\n        </>\r\n    )\r\n}\r\n"],"names":["Notes","_localStorage$getItem","fields","setFields","useState","dispatch","useDispatch","currency","useSelector","state","auth","notes","setNotes","open","setModal","image","setImage","data","isSuccess","useGetNotesQuery","toggleModal","setFocused","useEffect","position","setPosition","x","window","screen","availWidth","y","availHeight","dragging","setDragging","offset","setOffset","handleMouseDown","e","clientX","clientY","handleMouseMove","handleMouseUp","focused","scale","setScale","localStorage","getItem","_jsxs","_Fragment","children","_jsx","className","id","onClick","style","borderRadius","map","item","i","amount","src","process","height","width","alt","deleteNote","confirm","type","axios","get","concat","then","_ref","console","log","filter","catch","err","finally","Modal","isOpen","toggle","Form","onSubmit","preventDefault","toast","error","fd","FormData","append","some","n","parseInt","post","headers","_ref2","status","success","note","er","_er$response$response","_er$response","response","responseText","ModalHeader","ModalBody","Container","Row","FormGroup","Label","Input","name","pattern","onChange","_objectSpread","target","value","accept","files","ModalFooter","zIndex","top","overflow","touchAction","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","left","cursor","resize","transform","transformOrigin","onMouseDown","onTouchStart","background","color","padding","textAlign","Keyboard","layout","default","display","justifyContent","border","decrease","setItem","Math","max","prev","round","increase","min","JSON","parse"],"sourceRoot":""}