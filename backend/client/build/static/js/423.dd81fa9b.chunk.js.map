{"version":3,"file":"static/js/423.dd81fa9b.chunk.js","mappings":"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","sources":["components/pos/Category.js","components/pos/Products.js","components/pos/POSv2.js","helpers/utils.js"],"sourcesContent":["import React, { memo } from 'react'\r\nimport { hexToRgb, isColorDark } from '../../helpers/utils'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Category({categories, cRef, filter, handleDragStart, handleDragOver, handleDrop, scrollTop }) {\r\n    const fs2 = {fontSize: '2rem'}\r\n    const {theme} = useSelector(state => state.auth)\r\n    // window.alert(theme)\r\n\r\n    return (\r\n        <div className=\"position-fixed\" style={{backgroundColor: theme ==='default'?'#a0bfcf':'whitesmoke',minHeight:70, width:'-webkit-fill-available',zIndex:100,marginTop:-1}}>\r\n            <div className={`category row ms-5`} style={{flexWrap:'nowrap'}} ref={cRef}>\r\n                { categories.map((Cat,i) => (\r\n                    <div key={i} \r\n                        className={`category-item ${i===0 ?'active':''}`} \r\n                        style={{color:isColorDark(hexToRgb(Cat.color))? 'white':'black',background:Cat.color,minWidth:'150px'}} \r\n                        onClick={()=>filter(Cat.id)}\r\n                        draggable={true}\r\n                        onDragStart={() => handleDragStart(i)}\r\n                        onDragOver={e => handleDragOver(e,i)}\r\n                        onDrop={handleDrop}\r\n                    >\r\n                        {(Cat.name).includes('/') ? (Cat.name).split('/')[1]: Cat.name }\r\n                    </div>\r\n                    ))\r\n                }\r\n                <div className='category-item' onClick={()=> filter(null)} style={{background:\"azure\", width:200, marginRight:80}}>\r\n                    Other \r\n                </div>\r\n                <div className='position-fixed t-scroller' style={{bottom:40,right:40}} onClick={scrollTop}>\r\n                    <button className='btn btn-rounded bg-white' style={{border:\"2px dashed\"}}>\r\n                        <i className='fa fa-arrow-up'/>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <button className={`btn prev position-relative`} style={{top:5,zIndex:2,left:-30}} onClick={()=> cRef.current.scrollBy({left:-200, behavior:'smooth'})}>\r\n                <i style={fs2} className=\"fa-solid fa-circle-chevron-left text-dark\"/>\r\n            </button>\r\n            <button className=\"btn next position-absolute\" style={{right:-10,top:5,zIndex:2 }} onClick={()=>cRef.current.scrollBy({left:200, behavior:'smooth'})}>\r\n                <i style={fs2} className=\"fa-solid fa-circle-chevron-right text-dark\" />\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Category)","import React from 'react'\r\nimport labelImg from '../../asset/images/default.png';\r\nimport { hexToRgb, isColorDark, wrapText } from '../../helpers/utils';\r\nimport addNew from '../../asset/images/image.png';\r\n\r\nfunction Products({\r\n    products,\r\n    addToCart,\r\n    cartStocks,\r\n    categories,\r\n    displayImage,\r\n    Other,\r\n    chunkSize,\r\n    toggleModal,\r\n    otherOpen,\r\n    catColors\r\n}) {\r\n    const handleImgError = e => e.target.src = labelImg;\r\n    function isFloat(n) {\r\n        return n === +n && n !== (n|0);\r\n    }\r\n    const float = (n,d) => {\r\n        return parseFloat(n).toFixed(d)\r\n    }\r\n    return (\r\n    <div className=\"contents\" >\r\n        {\r\n            Other && (<div className='row mt-3' >\r\n                <div className={`col-md-${chunkSize===3?'4':'3'} also`} onClick={()=>toggleModal(!otherOpen)}>\r\n                    <div className='cell'>\r\n                        <div className='w-100'>\r\n                            <img className='title-img' src={addNew} alt={\"Other\"}/>\r\n                        </div>\r\n                        <div className='w-100' style={{color:'black', background:'lightgray'}}>\r\n                            <strong className='wrapped-text'>\r\n                                Add New &nbsp;\r\n                                <span className='fa fa-plus fs-5' />\r\n                            </strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n        }\r\n        { products.map( (row, k) => (<div className={'row mt-3'} key={k}>\r\n                {row.map((product,i ) => (\r\n                    <div key={i} \r\n                        className={`col-md-${chunkSize===3?'4':'3'} also ${(product.quantity - product.stock)=== 0 || product.quantity - cartStocks[product.id] === 0 || parseInt(product.quantity)=== 0 ? 'stock-out':''}`} \r\n                        \r\n                        onClick={()=>addToCart(product.id)} \r\n                        data-id={product.id} \r\n                    >\r\n                        <div className='cell' style={{minHeight:135}}>\r\n                            {\r\n                                (displayImage || product.category_id === categories[0].id) &&\r\n                                <div className='w-100'>\r\n                                    <img className='title-img' src={process.env.REACT_APP_BACKEND_URI+'images/'+product.image} onError={handleImgError} alt={product.name}/>\r\n                                </div>\r\n                            }\r\n                            <div className='w-100' style={{ minHeight: !displayImage && product.category_id !== categories[0].id && 'inherit', color:isColorDark(hexToRgb(catColors[product.category_id]))? 'white':'black', background:catColors[product.category_id]}} >\r\n                                <strong className='wrapped-text' style={{alignContent:'center'}} >\r\n                                    { wrapText(product.name, 100) }\r\n                                    { product.name.length > 100 && <span className='tooltiptext'>{product.name}</span> }\r\n                                </strong>\r\n                            </div>\r\n                        </div>\r\n                        <div className='extras'>\r\n                            <div className='tax'>\r\n                                <small> Tax </small>\r\n                                <div style={{fontSize:'800'}}>{product.tax}</div>\r\n                            </div>\r\n                            <div className='stock'>\r\n                                <small>Items : </small>\r\n                                <div style={{fontSize:'800'}}>\r\n                                    { isFloat(product.quantity - (cartStocks[product.id]?? 0)) ? \r\n                                        float(product.quantity - (cartStocks[product.id]?? 0), 2) \r\n                                    : product.quantity - (cartStocks[product.id]?? 0) }</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>))\r\n        }\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Products","import React, { memo, useCallback, useEffect, useRef, useState } from 'react'; \r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useGetProductCategoriesQuery, useGetPosProductsQuery, commonApiSlice } from '../../features/centerSlice';\r\nimport { chunk, Warning, dataURLtoFile } from '../../helpers/utils';\r\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { useSearch } from '../../contexts/SearchContext';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Row, Label, Input, FormGroup, Col, Form } from 'reactstrap';\r\nimport toast from 'react-hot-toast';\r\nimport Keyboard from 'react-simple-keyboard' \r\nimport Category from './Category';\r\nimport Products from './Products';\r\nimport logo from '../../asset/images/logo.png'\r\n\r\nfunction POS() {\r\n    const cRef = useRef(null);\r\n    const sectionRef = useRef(null);\r\n    const keyboardRef = useRef();\r\n    const ckeyboardRef = useRef();\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const navigator = useNavigate();\r\n    const chunkSize = window.screen.availWidth < 1200? 3 : 4;\r\n    const { currency, split, cartStocks, cartProducts, openingCash, appKey, inventory, theme, hasKeyboard, allProds } = useSelector( state => state.auth );\r\n    const [ key, setKey ] = useState(appKey);\r\n    const [ appModal , setAppModal ] = useState(false)\r\n    const [ openingAmountSet, setOpeningAmount ] = useState(openingCash); \r\n    const [ reloadCount ] = useState(0);\r\n    const [ enteredCash , setEnteredCash ] = useState('');\r\n    const { data, isSuccess } = useGetProductCategoriesQuery();\r\n    const [ products, setProducts ] = useState([])\r\n    const [ catColors, putCats ] = useState({})\r\n    const [ noProduct, setNoProduct ] = useState(false)\r\n    const [ prCategories, setCategories ] = useState([])\r\n    const [ initialProducts, setInitialProducts ] = useState([]);\r\n    const [ KartProducts, setCartProducts ] = useState(cartProducts);\r\n    const { searchQuery, sessions, activeSession, displayImage, sale } = useSearch();\r\n    const [ currentProduct, setCurrent ] = useState(cartProducts[activeSession]?.length -1);\r\n    const [ Other, toggleOther ] = useState(false);\r\n    const [ otherOpen, setModal ] = useState(false);\r\n    const [ availableStocks, setAvailableStocks ] = useState(cartStocks);\r\n    const [ barcode, setBarcode ] = useState('');\r\n    const [ opened, toggleVegetableModal ] = useState(false);\r\n    const [ number, setNumber ] = useState('');\r\n    const [ qty, setQty ] = useState('');\r\n    const [ editing, setEditing ] = useState(false);\r\n    const [ loadingPhone, setLoading ]= useState(false);\r\n    const [ editingQT, setEditingQT ]= useState(false);\r\n    const [ vegetable, setVegetable] = useState({});\r\n    const [ custom, setCustom] = useState({image:null, price:'', name:'', barcode:'', stock:5000});\r\n    // for v-keyboard\r\n    const [ focused, setFocused] = useState('');\r\n    const [ focusedCustom, setFocusedCustom] = useState('');\r\n    const fillCustom = e => {\r\n        if(['price', 'name', 'barcode', 'stock'].includes(focusedCustom)) {\r\n            setCustom({...custom, [focusedCustom]: e})       \r\n        } else {\r\n            let name = '';\r\n            switch (focusedCustom) {\r\n                case 'vPrice':\r\n                    name = 'price'\r\n                    break;\r\n                case 'vStock':\r\n                    name = 'stock'\r\n                    break;\r\n                default: name = 'unit'\r\n                    break;\r\n            }\r\n            setVegetable({...vegetable, [name]: e})\r\n        }\r\n    }\r\n\r\n    const [ position, setPosition ] = useState({ x: window.screen.availWidth/3.5, y: window.screen.availHeight / 2 });\r\n    const [ dragging, setDragging ] = useState(false);\r\n    const [ offset, setOffset ] = useState({ x: 0, y: 0 });\r\n    const [ layout, setLayout ] = useState('default');\r\n\r\n    const handleMouseDown = useCallback((e) => {\r\n        setDragging(true);\r\n        setOffset({\r\n            x: e.clientX - position.x,\r\n            y: e.clientY - position.y,\r\n        });\r\n    }, [position]);\r\n\r\n    const handleMouseMove = useCallback((e) => {\r\n        if (!dragging) return;\r\n        setPosition({\r\n            x: e.clientX - offset.x,\r\n            y: e.clientY - offset.y,\r\n        });\r\n    }, [dragging, offset]);\r\n\r\n    const handleMouseUp = useCallback(() => setDragging(false), []);\r\n\r\n    // end for v-keyboard\r\n    const btnStyle = {minHeight:60, fontSize:'1rem'}\r\n    useEffect(() => {\r\n        let inputBuffer = \"\";\r\n        const handleKeyDown = (event) => {\r\n            const { key } = event;\r\n            const activeElement = document.activeElement;\r\n            if (activeElement && (activeElement.tagName === \"INPUT\" || activeElement.tagName === \"TEXTAREA\")) {\r\n                return; // Do nothing if an input field is focused\r\n            }\r\n            if (key === \"Enter\") {\r\n                setBarcode(inputBuffer);inputBuffer=\"\"; \r\n            } else {\r\n                if (key.length === 1) {\r\n                    inputBuffer += key;\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener(\"keydown\", handleKeyDown);\r\n        return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n    }, [barcode]);\r\n\r\n    \r\n    \r\n    const allProducts = useGetPosProductsQuery();\r\n\r\n    useEffect(() => {\r\n        if(allProducts.data?.products){\r\n            setProducts(chunk(allProducts.data.products.filter(ite => (ite.name).toLowerCase().includes(searchQuery.toLowerCase())), chunkSize))\r\n        }\r\n        return () => setProducts([]);\r\n    },[searchQuery])\r\n\r\n    const handleVegetable = () => toggleVegetableModal(!opened)\r\n\r\n    const scrollTop = e => window.scrollTo(0,0)\r\n\r\n    const fetchPhoneProducts = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            setLoading(true);\r\n            if(!key) {\r\n                return setAppModal(!appModal)\r\n            }\r\n            dispatch({ type: \"SET_APP_KEY\", payload: key })\r\n            dispatch({ type:\"LOADING\" });\r\n\r\n            const {data} = await axios.get(`https://pos.dftech.in/sync-products/${key}`);\r\n            if(data.status) {\r\n                toast.success(data.message);\r\n                let fd = new FormData();\r\n                const midFile= dataURLtoFile(`data:application/json;base64,`+data.file, 'client.json');\r\n                fd.append('file', midFile);\r\n\r\n                const {data:resp} = await axios.post('products/sync', fd, {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        \"Content-Type\" : \"multipart/form-data\",\r\n                        'pos-token' : localStorage.getItem('pos-token')\r\n                    }\r\n                });\r\n \r\n                if(resp.status) {\r\n                    toast.success(\"Importing completed\");\r\n                    setTimeout(()=> window.location.reload(), 2400);\r\n                }\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error.message);\r\n            toast.error(\"Couldn't fetch products right now!\")\r\n        }\r\n        dispatch({ type:\"STOP_LOADING\" });\r\n        setLoading(false)\r\n    }\r\n\r\n    const addVeg = e => {\r\n        e.preventDefault();\r\n        let validated=false\r\n        if((/^(gm|g|gram|grams)$/i).test(vegetable.unit)) {\r\n            vegetable.unit = 'gm'\r\n            validated=true\r\n        }\r\n        if((/^(kg|kilo|kgs|kilograms|kilogram)$/i).test(vegetable.unit)){\r\n            vegetable.unit = 'kg'\r\n            validated=true\r\n        }\r\n        if(!validated) return toast.error(\"Invalid unit!\")\r\n        setFocusedCustom('')\r\n       \r\n        setCurrent(KartProducts[activeSession]?.length??0 ) \r\n        let consumed = Object.values(KartProducts).flat()?.filter( item => item.id === vegetable.id).reduce( (prev, item) => prev + item.stock, 1 )?? 1;\r\n\r\n        let stock = vegetable.stock;\r\n        if(vegetable.unit==='gm') {\r\n            stock /= 1000\r\n        }\r\n        if(vegetable.unit === 'mg') {\r\n            stock /= 100000\r\n        }\r\n\r\n        let availableStock = vegetable.quantity - (stock ?? consumed);\r\n        if(inventory && sale && availableStock < 0 ) {\r\n            Warning(\"Dispatching only available stocks..\")\r\n            document.querySelector('.also[data-id=\"'+vegetable.id+'\"]').classList.add('stock-out');\r\n            availableStock = vegetable.quantity\r\n            vegetable.stock = availableStock\r\n        }\r\n        if(inventory && sale) setAvailableStocks({...availableStocks, [vegetable.id]: availableStock });\r\n        let rest = {...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], vegetable] }\r\n        setCartProducts(rest);\r\n        dispatch({ type: 'CHOOSEN_PRODUCT', payload: rest });\r\n\r\n        toggleVegetableModal(!opened)\r\n        scrollToSection()\r\n        window.electronAPI?.reloadWindow(rest)\r\n    }\r\n    \r\n    const addToCart = prID => \r\n    {\r\n        setEditingQT(false); setQty('');\r\n        let product = initialProducts.find(ite => ite.id === prID);\r\n        if(product.catName && (['vegetables','sweets'].includes(product?.catName?.trim().toLowerCase()) || (product.name.toLowerCase()==='paneer')) && !cartProducts[activeSession]?.find(i => i.id===prID)) {\r\n            if( availableStocks[product.id] === 0 || parseInt(product.quantity) === 0 ) return \r\n            product = {...product, unit:'kg', stock:'1'}\r\n            if(!sale) {\r\n                product = {...product, return: true}\r\n            }\r\n            setVegetable(product)\r\n            return handleVegetable() \r\n        }\r\n        const copyKartProducts = JSON.parse(JSON.stringify(KartProducts));\r\n        let thisProduct = copyKartProducts[activeSession]?.find(ite => ite.id === prID);\r\n        // check if the product is already in cart\r\n        if( thisProduct && !split ) {\r\n            let canAdd= thisProduct.quantity - availableStocks[prID] \r\n            canAdd = canAdd < 1 ? canAdd : 1;\r\n            let updatedStock = (thisProduct.stock-0) + canAdd;\r\n            let availableStock = product.quantity - updatedStock;\r\n            if(inventory && sale && availableStock < 0 ) {\r\n                return document.querySelector('.also[data-id=\"'+product.id+'\"]').classList.add('stock-out');\r\n            }\r\n            if(!split) {  // update the current project highlight\r\n                setCurrent(KartProducts[activeSession].findIndex(item => item.id === product.id))\r\n            } else { // update the current project highlight if splittin products is off\r\n                setCurrent(KartProducts[activeSession]?.length??0) \r\n            }\r\n            // update the remaining stock each product\r\n            if(inventory && sale) setAvailableStocks({...availableStocks, [product.id]: availableStock });\r\n            thisProduct.stock = updatedStock;\r\n            if(!sale) { // if its not for sale then it is in return process\r\n                thisProduct.return = true\r\n            }\r\n            setCartProducts(copyKartProducts);\r\n            dispatch({ type: \"CHOOSEN_PRODUCT\", payload:copyKartProducts });\r\n            window.electronAPI?.reloadWindow(copyKartProducts)\r\n        \r\n        } else {\r\n            setCurrent(KartProducts[activeSession]?.length??0 ) \r\n            product = {...product, stock: 1 }\r\n\r\n            let consumed = Object.values(KartProducts).flat()?.filter( item => item.id === product.id).reduce( (prev, item) => prev + item.stock, 0 )?? 0;\r\n            let availableStock = product.quantity - ( consumed + 1 );\r\n            \r\n            if(inventory && sale && availableStock === -1 ) {\r\n                return document.querySelector('.also[data-id=\"'+product.id+'\"]').classList.add('stock-out');\r\n            }\r\n            if(inventory && sale) setAvailableStocks({...availableStocks, [product.id]: availableStock });\r\n            \r\n            if(!sale) {\r\n                product = {...product, return : true }\r\n            }\r\n\r\n            let rest = {...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], product] }\r\n            setCartProducts(rest);\r\n            dispatch({ type: 'CHOOSEN_PRODUCT', payload: rest });\r\n            // update the current project highlight\r\n            window.electronAPI?.reloadWindow(rest)\r\n        }\r\n        \r\n    }\r\n\r\n    const resetCart = () => {\r\n        let rest = {...KartProducts, [activeSession]: []}\r\n        setCartProducts(rest);\r\n        dispatch({ type: \"CHOOSEN_PRODUCT\", payload: rest });\r\n        window.electronAPI?.reloadWindow(rest)\r\n    }\r\n    // Reverse the stock decrement here\r\n    const removeFromCart = index => {\r\n        let rest = {...KartProducts,[activeSession]: KartProducts[activeSession].filter((item, i)=> i!== index) }\r\n        setCartProducts(rest);\r\n        dispatch({ type: 'CHOOSEN_PRODUCT', payload: rest });\r\n        window.electronAPI?.reloadWindow(rest)\r\n    }\r\n\r\n    const toggleModal = () => setModal(!otherOpen)\r\n\r\n    const openTheFuckingDay = e => {\r\n        e.preventDefault();\r\n        if(!enteredCash || enteredCash === '0') return Warning(\"You can't open without a single cash amount in drawer!\");\r\n\r\n        dispatch({ type: \"LOADING\" });\r\n        axios.post(\"pos/opening-day-cash-amount\", {cash: currency + enteredCash}).then(({data}) => {\r\n            \r\n            if(data.status) {\r\n                toast.success(data.message);\r\n                dispatch({ type: \"SET_CASH\", payload: data.created })\r\n                setOpeningAmount(data.created)\r\n                setFocused('')\r\n            } else toast.error(data.message);\r\n\r\n        }).catch(()=>{}).finally(()=>dispatch({ type: \"STOP_LOADING\" }))\r\n\r\n    }\r\n\r\n    const showRate = (stock, unit) => {\r\n        if( typeof stock==='string' && unit && ([0,1].includes(stock.indexOf('.')) && (stock[0]==='0' || stock[0]==='.'))) {\r\n            stock = stock * 1000\r\n            if(unit && unit==='kg') {\r\n                unit = stock > 1000 ? unit: 'gm'\r\n            } else if(unit) {\r\n                unit = stock > 1000 ? unit: 'mg'\r\n            }\r\n        }\r\n        stock = parseFloat(stock).toFixed(2)\r\n        console.log(stock + (unit? ` ${unit}`: ''))\r\n        return stock + (unit? ` ${unit}`: '')\r\n    }\r\n\r\n    const [items, setItems] = useState(prCategories);\r\n    const [draggedItemIndex, setDraggedItemIndex] = useState(null);\r\n\r\n    const handleDragStart = (index) => setDraggedItemIndex(index)\r\n\r\n    const handleDragOver = (e, index) => {\r\n        e.preventDefault();\r\n        if (draggedItemIndex === index) return;\r\n        const newItems = [...items];\r\n        const draggedItem = newItems.splice(draggedItemIndex, 1)[0];\r\n        newItems.splice(index, 0, draggedItem);\r\n        setDraggedItemIndex(index);\r\n        setItems(newItems);\r\n        dispatch(\r\n            commonApiSlice.util.updateQueryData(`getProductCategories`, undefined, cache=> {\r\n                cache['categories'] = newItems\r\n            })\r\n        )\r\n        setCategories(newItems);\r\n    };\r\n\r\n    const handleDrop = () => setDraggedItemIndex(null)\r\n\r\n    const filterProducts = catID => {\r\n        if(allProducts.isSuccess && allProducts.data.products) {\r\n            if(allProds) {\r\n                setProducts(chunk(allProducts.data.products.filter(ite => ite.category_id===catID),chunkSize));toggleOther(!catID)\r\n                if(chunk(allProducts.data.products.filter(ite => ite.category_id===catID),chunkSize)) setNoProduct(true)\r\n            } else {\r\n                setProducts(chunk(allProducts.data.products.filter(ite => ite.category_id===catID && !ite.code),chunkSize));toggleOther(!catID)\r\n                if(chunk(allProducts.data.products.filter(ite => ite.category_id===catID && !ite.code),chunkSize)) setNoProduct(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(()=> {\r\n        filterProducts(prCategories[0]?.id)\r\n        return ()=> null\r\n    },[allProds])\r\n    const scrollToSection = () => {\r\n        let el = document.querySelector(`.chosen-product.selected`);\r\n        if(el) {\r\n            el.scrollIntoView({\r\n                behavior:'smooth',\r\n                block: 'center'\r\n            })\r\n        }\r\n    };\r\n\r\n    useEffect(()=> {\r\n        if(barcode) {\r\n            axios.get(`products/barcode/${barcode}`).then(({data})=> {\r\n                if(!data.status) {\r\n                    Warning(\"Product not in inventory!\")\r\n                    toggleModal()\r\n                    setCustom({...custom, barcode: barcode})\r\n                }\r\n                setBarcode('')\r\n                addToCart(data.product.id)\r\n            }).catch(()=>{}).finally(()=> null);\r\n        } \r\n        return () => setBarcode('')\r\n    },[barcode])\r\n    \r\n    useEffect(() => {\r\n        if( isSuccess ) {\r\n            setCategories(data.categories)\r\n            const cats = [];\r\n            data.categories.forEach( cat => (cats[cat.id] = cat.color));\r\n            putCats(cats);\r\n            setItems(data.categories)\r\n        }\r\n        if(allProducts.isSuccess) {\r\n            if(allProducts.data.products?.length === 0 ){\r\n                setNoProduct(true);\r\n            } else {\r\n                setNoProduct(false)\r\n            }\r\n            setProducts(chunk(allProducts.data.products, chunkSize))\r\n            setInitialProducts(allProducts.data.products);\r\n            filterProducts(data?.categories[0]?.id)\r\n        }\r\n        return () => {\r\n            setInitialProducts([])\r\n            setProducts([])\r\n        }\r\n    },[ isSuccess, data, allProducts.data, allProducts.isSuccess, navigator]);\r\n\r\n    useEffect(()=> {\r\n        setCartProducts(cartProducts);\r\n        scrollToSection()\r\n        if(cartProducts[activeSession]){\r\n            let ls = cartProducts[activeSession][cartProducts[activeSession].length-1]\r\n            if(ls?.id==='quick') {\r\n                setCurrent(cartProducts[activeSession].length-1)\r\n            }\r\n        }\r\n        return () => {\r\n            setCartProducts([]);\r\n        }\r\n    },[ cartProducts, reloadCount ]);\r\n\r\n    useEffect(()=> {\r\n        if(cartStocks){\r\n            setAvailableStocks(cartStocks)\r\n        }\r\n        return () => setAvailableStocks({})\r\n    },[location, cartStocks])\r\n \r\n    const base = {\r\n        height:'69vh',\r\n        placeContent:'center',\r\n        display:'grid',\r\n        placeItems:'center',\r\n        width:'100%',\r\n        backgroundColor: '#dadada', \r\n        marginTop:'5%'\r\n    }\r\n\r\n    const addCustomProduct = async e => \r\n    {\r\n        e.preventDefault();\r\n        const fd = new FormData();\r\n        fd.append('name', custom.name);\r\n        fd.append('price', custom.price);\r\n        fd.append('barcode', custom.barcode);\r\n        fd.append('quantity', custom.stock);\r\n        fd.append('image', custom.image);\r\n        if(!custom.name || !custom.price ) {\r\n            return Warning('Fill the required fields');\r\n        }\r\n        if(custom.name?.toLowerCase().indexOf('veg') === -1 && !custom.barcode) {\r\n            return Warning(\"Barcode is required!\")\r\n        }\r\n\r\n        dispatch({ type:'LOADING' })\r\n        const {data} = await axios.post(`/products/create-custom`, fd, {\r\n            headers:{ \r\n                \"Accept\" :\"application/json\",\r\n                \"Content-Type\" : \"multipart/form-data\",\r\n                \"pos-token\" : localStorage.getItem('pos-token')\r\n            }\r\n        });\r\n        dispatch({ type:'STOP_LOADING' })\r\n        if( data.status ) {\r\n            setInitialProducts(prev => [...prev, data.product])\r\n            dispatch(\r\n                commonApiSlice.util.updateQueryData('getPosProducts', undefined, cache => {\r\n                    const {products} = cache;\r\n                    if(products){\r\n                        products.push(data.product)\r\n                    }\r\n                })\r\n            )\r\n            dispatch(\r\n                commonApiSlice.util.updateQueryData('getProducts', undefined, cache => {\r\n                    const {products} = cache;\r\n                    if(products){\r\n                        products.push(data.product)\r\n                    }\r\n                })\r\n            )\r\n            \r\n            let {product} = data\r\n            setCurrent(KartProducts[activeSession]?.length??0 ) \r\n            product = {...product, stock: 1 }\r\n            let consumed = Object.values(KartProducts).flat()?.filter( item => item.id === product.id).reduce( (prev, item) => prev + item.stock, 0 )?? 0;\r\n            let availableStock = product.quantity - ( consumed + 1 );\r\n            if(inventory && availableStock === -1 ) {\r\n                return document.querySelector('.also[data-id=\"'+product.id+'\"]').classList.add('stock-out');\r\n            }\r\n            if(inventory) setAvailableStocks({...availableStocks, [product.id]: availableStock });\r\n            setCartProducts({...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], product] });\r\n            window.electronAPI?.reloadWindow({...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], product] })\r\n            dispatch({ \r\n                type: 'CHOOSEN_PRODUCT', \r\n                payload: {...KartProducts,[activeSession]: [...KartProducts[activeSession]??[], product] } \r\n            });\r\n            toast.success(data.message);\r\n            setFocusedCustom('')\r\n            toggleModal(!otherOpen)\r\n            \r\n        } else { \r\n            toast.error(data.message);\r\n        }   \r\n    }\r\n\r\n    const handleFile = e => {\r\n        const file = e.target.files[0];\r\n        setCustom({...custom, image: file})\r\n    }\r\n    \r\n    const {type} = useParams();\r\n\r\n    useEffect(() => {\r\n        const handleDataReceived = (data) => {\r\n            if (data && data.reload) {\r\n                if (type === \"customer\") {\r\n                    setCartProducts(typeof data.products === \"string\" ? JSON.parse(data.products) : data.products);\r\n                }\r\n            }\r\n            if(data.manual){\r\n                window.location.reload()\r\n            }\r\n        };\r\n    \r\n        window.electronAPI?.onDataReceived(handleDataReceived);\r\n    }, []);\r\n    \r\n\r\n    const showTotal = () => {\r\n        if(KartProducts[activeSession]?.length){\r\n            let additions = KartProducts[activeSession].filter( item => item.return === undefined )\r\n            let returns = KartProducts[activeSession].filter( _ => _.return === true )\r\n            additions = additions.reduce((acc, cur)=> acc + (cur.stock * parseFloat(cur.price)),0)\r\n            returns = returns.reduce((acc, cur)=> acc + (cur.stock * parseFloat(cur.price)),0)\r\n            return parseFloat(additions - returns).toFixed(2)\r\n        }\r\n        return 0;\r\n    }\r\n    \r\n    const changeInput = (input,e) => \r\n    {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        if( editing ) { // price\r\n            let newAmount;\r\n            if(input==='clear') {\r\n                newAmount = '0'\r\n                setNumber(''); \r\n            } else {\r\n                newAmount = number + input;  \r\n                setNumber(number + input); \r\n            } \r\n            setCartProducts( {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                if(i=== currentProduct ) {\r\n                    item = {...item, price:newAmount}\r\n                }\r\n                return item\r\n            }) });\r\n            dispatch({\r\n                type:\"CHOOSEN_PRODUCT\",\r\n                payload: {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                    if(i=== currentProduct ) {\r\n                        item = {...item, price:newAmount}\r\n                    }\r\n                    return item\r\n                })}\r\n            });\r\n        }\r\n        let newAmount;\r\n        if( editingQT ) {\r\n            if(input==='clear') {\r\n                newAmount = '0';\r\n                setQty('');\r\n            } else {\r\n                newAmount = qty + input;\r\n                if(inventory) {\r\n                    let {quantity, unit} = cartProducts[activeSession][currentProduct];\r\n                    if(unit) {\r\n                        if(unit==='gm') {\r\n                            quantity *= 1000\r\n                            // newAmount /= 1000\r\n                        }\r\n                        if(unit === 'mg') {\r\n                            quantity *= 1000000\r\n                            // newAmount /= 1000000\r\n                        }\r\n                    }\r\n                    if( parseFloat(newAmount) > parseFloat(quantity)) return Warning( newAmount +` ${unit? unit:''} stocks are not available` );\r\n                }\r\n                setQty(newAmount);\r\n            }\r\n            \r\n            setCartProducts({...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                if(i=== currentProduct ) {\r\n                    item = {...item, stock:newAmount }\r\n                }\r\n                return item\r\n            }) });\r\n\r\n            dispatch({\r\n                type:\"CHOOSEN_PRODUCT\",\r\n                payload: {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                    if(i=== currentProduct ) {\r\n                        item = {...item, stock:newAmount }\r\n                    }\r\n                    return item\r\n                })}\r\n            })\r\n        }\r\n        window.electronAPI?.reloadWindow({...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n            if(i=== currentProduct ) {\r\n                item = {...item, stock:newAmount }\r\n            }\r\n            return item\r\n        }) })\r\n    }\r\n\r\n    const [presetTxt, setPreset] = useState('')\r\n    useEffect(() => {\r\n        ckeyboardRef.current?.setInput(typeof presetTxt==='number'? JSON.stringify(presetTxt): presetTxt)\r\n    }, [presetTxt, focusedCustom])\r\n    \r\n    useEffect(() => {\r\n        keyboardRef.current?.setInput(typeof presetTxt ==='number'? JSON.stringify(presetTxt): presetTxt)\r\n    }, [presetTxt, focused])\r\n\r\n    // handling size \r\n    const [scale, setScale] = useState(localStorage.getItem('_keyboard_scale')??1); // Default scale (1 = 100%)\r\n\r\n    const decrease = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.max(scale - 0.1, 0.5))\r\n        setScale(prev => Math.max(prev - 0.1, 0.5))\r\n    }\r\n    const increase = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.min(JSON.parse(scale) + 0.1, 2))\r\n        setScale(prev => Math.min(JSON.parse(prev) + 0.1, 2))\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className={`col-md-12 position-relative ${type==='customer' && \"d-flex align-self-center\"}`} >\r\n                { (Object.keys(openingAmountSet).length === 0 || !openingAmountSet.status === true) && type!=='customer'? (\r\n                    <div className='overlay' style={{width:'100vw', height:'100vh',position:'absolute'}}>\r\n                        <Modal isOpen={true}>\r\n                            <Form onSubmit={openTheFuckingDay}>\r\n                                <ModalHeader>\r\n                                    <b>Day Opening!</b> <p>Good morning </p> \r\n                                </ModalHeader>\r\n                                <ModalBody>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <FormGroup>\r\n                                                <Label>\r\n                                                    <b>Enter Opening Cash In Drawer</b>\r\n                                                </Label>\r\n                                                <Input \r\n                                                    type={'text'}\r\n                                                    placeholder={currency}\r\n                                                    onClick={(e)=>{\r\n                                                        setFocused('cash')\r\n                                                        setPreset(enteredCash)\r\n                                                    }}\r\n                                                    onChange={e => setEnteredCash(e.target.value)}\r\n                                                    value={enteredCash}\r\n                                                    style={{border:'1px solid gray'}}\r\n                                                />\r\n                                            </FormGroup>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ModalBody>\r\n                                <ModalFooter className={'justify-content-center'}>\r\n                                    <Col md={5} className='btn btn-light' onClick={()=> navigator('/')} >\r\n                                        Back\r\n                                    </Col>\r\n                                    <Col md={5} >\r\n                                        <button className='w-100 btn btn-success' type={`submit`} > Start </button>\r\n                                    </Col>\r\n                                </ModalFooter>\r\n                            </Form>\r\n                        </Modal>\r\n                    </div>\r\n                ): null}\r\n                <div className={`col-md-4 pt-3 ${type==='customer'?'':'position-fixed'}`} \r\n                    style={{\r\n                        filter:Object.keys(openingAmountSet).length === 0 || !openingAmountSet.status === true ? 'blur(5px)':'',\r\n                        width:type==='customer'?'40vw':'38.8%'\r\n                    }}\r\n                >\r\n                    {\r\n                        type==='customer' && <div>\r\n                            <h2 className='text-center' style={{ fontSize:'3rem', fontWeight:'900' }}>\r\n                            {currency +' '+showTotal()} \r\n                            </h2>\r\n                        </div>\r\n                    }\r\n                    { sessions.map( session => (<div key={session} ref={sectionRef} className={`container ms-2 put-here ${activeSession===session?'':'d-none'} ${KartProducts[activeSession] && KartProducts[activeSession].length && type!=='customer' ?'action-visible':''}`} \r\n                        style={{\r\n                            borderRadius:'20px',\r\n                            backgroundColor:'#dadada'\r\n                    }}>\r\n                        <div className={`card ${KartProducts[activeSession] && KartProducts[activeSession].length? 'd-none':''}`} style={base}>\r\n                            <i className={`fa-solid fa-cart-shopping`} style={{fontSize:'60px'}} />\r\n                            <b className={`mt-3`}> Start adding products </b>\r\n                        </div>\r\n                        { KartProducts[activeSession] && KartProducts[activeSession].map( (item,index) => (\r\n                            <div key={index} \r\n                                className={`row chosen-product mt-2 ${currentProduct===index && 'selected'}`} \r\n                                data-id={item.id} \r\n                                onClick={()=>setCurrent(index)}\r\n                                style={{\r\n                                    border:item.return && '2px dashed orange', \r\n                                    background: item.return && '#f9f2c5',\r\n                                    color: item.return && 'black'\r\n                                }}\r\n                            >\r\n                                <div className={`d-flex w-100`}>\r\n                                    <b style={{maxWidth:'24rem'}}> {item.name} </b>\r\n                                    <strong className={`price`} data-price={item.price}>{currency +' '+ (item.stock * parseFloat(item.price)).toFixed(2)}</strong>\r\n                                </div>\r\n                                <div className={`d-flex`}>\r\n                                    <span className={`quantity`}> \r\n                                        {type==='customer' && 'Qty:'} {showRate(item.stock, item.unit)}\r\n                                    </span>\r\n                                    {item.id!=='quick' && <p className={`ms-3 mt-1`}>{`${currency + ' ' + parseFloat(item.price).toFixed(2)} / ${item.unit? item.unit : 'Units'}`}</p>}\r\n                                </div>\r\n                                {type!=='customer' && <button className={`${theme==='retro' && currentProduct===index && !item.return ? \"text-white\":''} btn`} onClick={()=>removeFromCart(index)}><i className=\"mdi mdi-close\"/></button>}\r\n                            </div>\r\n                        ))}\r\n\r\n                    </div>))\r\n                    }\r\n                    <div className={`container ms-2 mt-3 actionBar ${KartProducts[activeSession] && KartProducts[activeSession].length && type!=='customer' ? '':'d-none'}`} style={{height: '54vh'}}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-12 d-flex\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <Link className=\"btn btn-light btn-rounded text-white\" to={`/payment/${activeSession}`} style={{backgroundColor:'#04537d',width:'93%'}}> {'Payment'} </Link>\r\n                                </div>\r\n                                <div className=\"col-sm-6 d-flex justify-content-end align-items-center position-relative\">\r\n                                    <div className='position-absolute'>\r\n                                        <p style={{lineHeight:2.1,whiteSpace:'nowrap'}}><b> Total: &nbsp; \r\n                                            <span className=\"total-amount\" style={{left:0,fontSize:'2.3rem'}}>\r\n                                                {currency} { showTotal() } \r\n                                            </span>\r\n                                        </b>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            {[ 1, 2, 3 ].map( it => <div className=\"col-sm-3\" key={it} onClick={(e)=> changeInput(it,e)}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} style={btnStyle}> <b> {it} </b> </button>\r\n                            </div>)}\r\n                            <div className=\"col-sm-3\" onClick={resetCart}>\r\n                                <button className=\"btn btn-light text-dark w-100 num\" type=\"button\" style={{...btnStyle,padding:10}}> <b>Cancel Sale</b> </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            { [4,5,6].map( it => <div className=\"col-sm-3\" key={it} onClick={(e)=> changeInput(it,e)}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} style={btnStyle}> <b> {it} </b> </button>\r\n                            </div>)}\r\n                            <div className=\"col-sm-3\"/>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            {[7,8,9].map( ite => <div className=\"col-sm-3\" key={ite} onClick={(e)=> changeInput(ite,e)}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} style={btnStyle}> <b> {ite} </b> </button>\r\n                            </div>)}\r\n                            <div className=\"col-sm-3\" onClick={()=> {\r\n                                if( editingQT===true ) {\r\n                                    setQty('')\r\n                                } \r\n                                setEditing(false)\r\n                                setEditingQT(!editingQT)\r\n                            }}>\r\n                                <button className='btn btn-light num w-100' style={{...btnStyle,padding:10}}><b>{!editingQT?'Edit Qty':'Done'}</b></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-1\">\r\n                            <div className=\"col-sm-3\">\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} onClick={e => changeInput('.',e)} style={btnStyle}> <b> . </b> </button>\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} onClick={e=> changeInput(0, e)} style={btnStyle}> <b> 0 </b> </button>\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <button className=\"btn btn-light num w-100 text-dark\" disabled={!editing && !editingQT} onClick={e=>changeInput('clear',e)} style={{...btnStyle,padding:'15px 10px'}}> <b>Reset</b> </button>\r\n                            </div>\r\n                            <div className=\"col-sm-3\" onClick={(e)=> {\r\n                                if(editing===false){\r\n                                    setNumber(0)\r\n                                    setCartProducts( {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                                        if(i=== currentProduct ) {\r\n                                            item = {...item, price:0}\r\n                                        }\r\n                                        return item\r\n                                    }) });\r\n                                    dispatch({\r\n                                        type:\"CHOOSEN_PRODUCT\",\r\n                                        payload: {...KartProducts,[activeSession]: KartProducts[activeSession].map((item, i)=> {\r\n                                            if(i=== currentProduct ) {\r\n                                                item = {...item, price:0}\r\n                                            }\r\n                                            return item\r\n                                        })}\r\n                                    });\r\n                                }\r\n                                setEditingQT(false)\r\n                                setEditing(!editing)\r\n                            }}>\r\n                                <button className=\"btn btn-light num w-100 text-dark\" style={{...btnStyle,padding:10}}> <b> {!editing?'Edit Price':'Done'} </b> </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {type!=='customer' ? \r\n                <div className=\"col-md-7 position-absolute library\" \r\n                    style={{\r\n                        height:'70vh',\r\n                        right:'5px',\r\n                        filter: Object.keys(openingAmountSet).length === 0 || !openingAmountSet.status === true ? 'blur(5px)':''\r\n                    }}\r\n                >\r\n                    <Category \r\n                        categories={prCategories} \r\n                        cRef={cRef} \r\n                        filter={filterProducts} \r\n                        handleDragStart={handleDragStart}\r\n                        handleDragOver={handleDragOver}\r\n                        handleDrop={handleDrop}\r\n                        scrollTop={scrollTop}\r\n                    />\r\n                    <Products \r\n                        categories={prCategories}\r\n                        products={products}\r\n                        addToCart={addToCart}\r\n                        cartStocks={cartStocks}\r\n                        displayImage={displayImage}\r\n                        Other={Other}\r\n                        chunkSize={chunkSize}\r\n                        toggleModal={toggleModal}\r\n                        otherOpen={otherOpen}\r\n                        catColors={catColors}\r\n                    />\r\n                    {products.length === 0 && !Other && (<div className=\"lib-loader justify-content-center align-items-center\" \r\n                    style={{height:'30rem',placeContent:'center',textAlign:'center'}} >\r\n                        {\r\n                            noProduct && isSuccess? <>\r\n                            <h2>  {prCategories.length ? `No products ${!allProds?'without barcode':''} for this category`: 'No products...'}</h2>\r\n                            <button className='btn btn-rounded btn-warning fs-4' onClick={fetchPhoneProducts}> \r\n                                { loadingPhone? <i className='fa fa-spin fa-spinner'/>:'Sync phone products'} \r\n                            </button>\r\n                            </> : \r\n                            <i className='fa fa-spin fa-spinner' />\r\n                        }\r\n                        \r\n                    </div>)}\r\n                </div>: \r\n                <div className='library d-grid justify-content-center align-items-center w-100'>\r\n                    <center>\r\n                        <img src={logo} alt=\"\" />\r\n                    </center>\r\n                </div>\r\n                }\r\n            </div>\r\n\r\n            <Modal isOpen={otherOpen} fade={false}>\r\n                <Form onSubmit={addCustomProduct}>\r\n                <ModalHeader >\r\n                    Add Custom Product\r\n                </ModalHeader>\r\n                <ModalBody style={{padding:20}}>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Name </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    onChange={e => setCustom({...custom, name: e.target.value})}\r\n                                    value={custom.name}\r\n                                    onClick={e => {\r\n                                        setFocusedCustom('name')\r\n                                        setPreset(custom.name)\r\n                                    }}\r\n                                    className='input'\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Price </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    className='input'\r\n                                    onChange={e => setCustom({...custom, price: e.target.value})}\r\n                                    onClick={e => {\r\n                                        setFocusedCustom('price')\r\n                                        setPreset(custom.price)\r\n                                    }}\r\n                                    value={custom.price}\r\n                                    placeholder={currency}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Stock </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    className='input'\r\n                                    onChange={e => setCustom({...custom, stock: e.target.value})}\r\n                                    onClick={ e => {\r\n                                        setFocusedCustom('stock')\r\n                                        setPreset(custom.stock)\r\n                                    }}\r\n                                    value={custom.stock}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <div className='col-4'>\r\n                            <Label> Barcode </Label>\r\n                        </div>\r\n                        <div className='col-8'>\r\n                            <FormGroup>\r\n                                <input \r\n                                    type='text'\r\n                                    className='input'\r\n                                    placeholder='Enter barcode'\r\n                                    onChange={e => setCustom({...custom, barcode: e.target.value})}\r\n                                    value={custom.barcode}\r\n                                    onClick={e => {\r\n                                        setFocusedCustom('barcode')\r\n                                        setPreset(custom.barcode)\r\n                                    }}\r\n                                />\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Row>\r\n                    <Row>\r\n                        <label className='custom-file-upload' > \r\n                            <i className={'fa fa-paperclip'} /> &nbsp;\r\n                            <Input \r\n                                type='file' \r\n                                className='d-none'\r\n                                accept='image/*'\r\n                                onChange={handleFile}\r\n                            />\r\n                            Upload Product Image\r\n                        </label>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className='btn btn-light btn-rounded' type='button' onClick={()=> {\r\n                        toggleModal(!otherOpen)\r\n                        setFocusedCustom('')\r\n                    }} > Close </button>\r\n                    <button className='btn btn-primary btn-rounded'> Submit </button>\r\n                </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            <Modal isOpen={opened} fade={false}>\r\n                <Form onSubmit={addVeg}>\r\n                    <ModalHeader>\r\n                        <b> Add Manually </b>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        <b> Price </b>\r\n                                    </Label>\r\n                                    <Input \r\n                                        type='text'\r\n                                        placeholder={currency}\r\n                                        onChange={e => setVegetable({...vegetable, price:e.target.value})}\r\n                                        value={vegetable.price}\r\n                                        style={{border:'1px solid gray'}}\r\n                                        onClick={e => {\r\n                                            setFocusedCustom(\"vPrice\")\r\n                                            setPreset(vegetable.price)\r\n                                        }}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        <b> Weight </b>\r\n                                    </Label>\r\n                                    <Input \r\n                                        type='text'\r\n                                        placeholder={`KGs / gm`}\r\n                                        onChange={e => setVegetable({...vegetable, unit:e.target.value})}\r\n                                        value={vegetable.unit}\r\n                                        onClick={e => {\r\n                                            setFocusedCustom(\"unit\")\r\n                                            setPreset(vegetable.unit)\r\n                                        }}\r\n                                        style={{border:'1px solid gray'}}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormGroup>\r\n                                    <Label>\r\n                                        Quantity (optional)\r\n                                    </Label>\r\n                                    <Input \r\n                                        type='text'\r\n                                        pattern=\"^\\d+(\\.\\d+)?$\"\r\n                                        onChange={e=> setVegetable({...vegetable, stock: e.target.value})}\r\n                                        value={vegetable.stock}\r\n                                        onClick={e => {\r\n                                            setFocusedCustom(\"vStock\")\r\n                                            setPreset(vegetable.stock)\r\n                                        }}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </ModalBody>\r\n                    <ModalFooter >\r\n                        <button className='btn btn-light btn-rounded' type='button' onClick={()=> {\r\n                            toggleVegetableModal(!opened)\r\n                            setFocusedCustom('')\r\n                        }} >\r\n                            Cancel\r\n                        </button>\r\n                        <button className='btn btn-rounded btn-success' type={`submit`} > Add </button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            <Modal isOpen={appModal} size='sm' fade={false}>\r\n                <Form onSubmit={fetchPhoneProducts}>\r\n                    <ModalHeader>\r\n                        Enter application key \r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Input onChange={e=> setKey(e.target.value)} type='text' name='appKey'/>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className='btn btn-light btn-sm btn-rounded' type='button' onClick={()=> setAppModal(!appModal)}>Cancel</button>\r\n                        <button className='btn btn-success btn-sm btn-rounded' > Submit </button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n            {focused && !hasKeyboard && <div className='mt-4 position-fixed w-50' style={{zIndex:9999, top:60 }}>\r\n                <div\r\n                    style={{\r\n                        overflow: \"hidden\",\r\n                        position: \"relative\",\r\n                        touchAction: \"none\",\r\n                    }}\r\n                    onMouseMove={handleMouseMove}\r\n                    onTouchMove={handleMouseMove}\r\n                    onMouseUp={handleMouseUp}\r\n                    onTouchEnd={handleMouseUp}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            top: `${position.y}px`,\r\n                            left: `${position.x}px`,\r\n                            cursor: dragging ? \"grabbing\" : \"grab\",\r\n                            zIndex: 1000,\r\n                            width:700,\r\n                            touchAction: \"none\",\r\n                            transform: `scale(${scale})`, transformOrigin: \"top center\"\r\n                        }}\r\n                    >\r\n                        <div\r\n                            onMouseDown={handleMouseDown}\r\n                            onTouchStart={handleMouseDown}\r\n                            style={{\r\n                                background: \"#444\",\r\n                                color: \"#fff\",\r\n                                padding: 10,\r\n                                cursor: \"grab\",\r\n                                textAlign: \"center\",\r\n                                borderRadius: \"8px 8px 0 0\",\r\n                                touchAction: \"none\",\r\n                            }}\r\n                        >\r\n                            Hold To Drag \r\n                        </div>\r\n                            <Keyboard\r\n                                onChange={e => setEnteredCash(e)}\r\n                                keyboardRef={(r) => (keyboardRef.current = r)}\r\n                                layout={{\r\n                                    default:[\r\n                                        \"1 2 3\",\r\n                                        \"4 5 6\",\r\n                                        \"7 8 9\",\r\n                                        \"0 . {bksp}\",\r\n                                    ],\r\n                                }}\r\n                                display={{\r\n                                    \"{bksp}\": \"x\"\r\n                                }}\r\n                            />\r\n                        <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                            <button className='btn btn-light btn-rounded' onClick={()=> {setEnteredCash('');keyboardRef.current.clearInput()}} style={{border:'1px solid gray'}}>CLEAR</button>\r\n                            <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={decrease}>-</button>\r\n                            <span style={{placeContent:'center'}}> Size: {Math.round(scale * 100)}% </span>\r\n                            <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={increase}>+</button>\r\n                            <button onClick={()=>setFocused('')} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            {focusedCustom && !hasKeyboard && <div className='mt-4 position-fixed w-50' style={{zIndex:9999, top:60 }}>\r\n                <div\r\n                    style={{\r\n                        overflow: \"hidden\",\r\n                        position: \"relative\",\r\n                        touchAction: \"none\",\r\n                    }}\r\n                    onMouseMove={handleMouseMove}\r\n                    onTouchMove={handleMouseMove}\r\n                    onMouseUp={handleMouseUp}\r\n                    onTouchEnd={handleMouseUp}\r\n                    >\r\n                    <div\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            top: `${position.y}px`,\r\n                            left: `${position.x}px`,\r\n                            cursor: dragging ? \"grabbing\" : \"grab\",\r\n                            zIndex: 1000,\r\n                            width:700,\r\n                            touchAction: \"none\",\r\n                            transform: `scale(${scale})`, transformOrigin: \"top center\"\r\n                        }}\r\n                    >\r\n                        <div\r\n                            onMouseDown={handleMouseDown}\r\n                            onTouchStart={handleMouseDown}\r\n                            style={{\r\n                                background: \"#444\",\r\n                                color: \"#fff\",\r\n                                padding: 10,\r\n                                cursor: \"grab\",\r\n                                textAlign: \"center\",\r\n                                touchAction: \"none\",\r\n                                borderRadius: \"8px 8px 0 0\",\r\n                            }}\r\n                        >\r\n                            Hold To Drag \r\n                        </div>\r\n                            <Keyboard\r\n                                onChange={fillCustom}\r\n                                keyboardRef={(r) => (ckeyboardRef.current = r)}\r\n                                onKeyPress={(e) => {\r\n                                    if(e === \"{lock}\")\r\n                                    {\r\n                                        setLayout((prev) => (prev === \"default\" ? \"shift\" : \"default\"))\r\n                                    }\r\n                                }}\r\n                                layout={{\r\n                                    default: ['price','stock','vStock','vPrice'].includes(focusedCustom)? [\r\n                                        \"1 2 3\",\r\n                                        \"4 5 6\",\r\n                                        \"7 8 9\",\r\n                                        \"0 . {bksp}\"\r\n                                    ]:[\r\n                                        \"1 2 3 4 5 6 7 8 9 0\",\r\n                                        \"q w e r t y u i o p\",\r\n                                        \"{lock} a s d f g h j k l\",\r\n                                        \"z x c v b n m . {bksp}\",\r\n                                        \"{space}\"\r\n                                    ],\r\n                                    shift: [\r\n                                        \"1 2 3 4 5 6 7 8 9 0\",\r\n                                        \"Q W E R T Y U I O P\",\r\n                                        \"{lock} A S D F G H J K L\",\r\n                                        \"Z X C V B N M {bksp}\",\r\n                                        \"{space}\"\r\n                                    ]\r\n                                }}\r\n                                display={{\r\n                                    \"{bksp}\":['price','stock','vStock','vPrice'].includes(focusedCustom) ? 'x': 'backspace',\r\n                                    '{space}' : \" \",\r\n                                    '{lock}' : \"Caps\"\r\n                                }}\r\n                                layoutName={layout}\r\n                            />\r\n                        <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                            <button className='btn btn-light btn-rounded' onClick={()=>{\r\n                                setCustom({...custom, [focusedCustom]:''})\r\n                                ckeyboardRef.current.clearInput()\r\n                            }} style={{border:'1px solid gray'}}>CLEAR</button>\r\n                            <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={decrease}>-</button>\r\n                            <span style={{placeContent:'center'}}> Size: {Math.round(scale * 100)}% </span>\r\n                            <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={increase}>+</button>\r\n                            <button onClick={()=>setFocusedCustom('')} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(POS)","import $ from 'jquery'\r\nimport toast from 'react-hot-toast';\r\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport const validate = (fields,exceptions=[]) => {\r\n    let result={}\r\n    var shouldGo=true;\r\n    if(exceptions.length)\r\n    {\r\n        exceptions.forEach( item => {\r\n            delete fields[item]\r\n        })\r\n    }\r\n    Object.keys(fields).forEach(f =>\r\n    {\r\n        let shout = '';\r\n        let invalid = false;\r\n        let tInputs = [$(`input[name=${f}]`), $(`select[name=${f}]`), $(`textarea[name=${f}]`), $(`.${f}`)]\r\n        if(fields[f]==null || fields[f].length===0)\r\n        {\r\n            result[f]=`Required!`;\r\n            shouldGo=false;\r\n            invalid = true;\r\n        }\r\n        tInputs.forEach( input => {\r\n\r\n            let minLength = $(input).attr('type')!== 'date' ? $(input).attr('min'): 0;\r\n            let maxLength = $(input).attr('max');\r\n            let type = $(input).attr('cast');\r\n            let isDate = $(input).attr('type')==='date' && $(input).attr('req');\r\n            if($(input).val()?.length && (minLength || maxLength))\r\n            {\r\n                if($(input).val().length < parseInt(minLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should be of at least ${minLength} characters!`\r\n                    result[f] = shout;\r\n                }\r\n                if($(input).val().length > parseInt(maxLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should not be greater than ${maxLength} characters!`;\r\n                    result[f] = shout;\r\n                }\r\n            }\r\n            if(type)\r\n            { \r\n                if(input.val() && type === 'num')\r\n                {\r\n                    if(parseInt($(input).val().length )!== $(input).val().length) {\r\n                        shout= `Should be in numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n                if( $(input).val() && type=== 'str' )\r\n                {\r\n                    if( /^([^0-9]*)$/.test($(input).val())===false )\r\n                    {\r\n                        shout= `Should not contain numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n            }\r\n            if(isDate)\r\n            {\r\n                if(!isValidDate($(input).val(),18))\r\n                {\r\n                    invalid = true\r\n                    shout = 'Invalid date';\r\n                    result[f] = shout;\r\n                } else {\r\n                    shout = '';\r\n                }\r\n                // return\r\n            }\r\n            if(shout)   \r\n            {\r\n                if($(input).parents('.col-md-12, .col').find('small.text-danger').length)\r\n                {\r\n                    $(input).parents('.col-md-12, .col').find('small.text-danger').text(shout)\r\n                } else {\r\n                    $(input).parents('.col-md-12, .col').append('<small class=\"text-danger\">'+shout+'</small>')\r\n                }\r\n            } else {\r\n                $(input).parents('.col-md-12, .col').find('small.text-danger').remove()\r\n            }\r\n            if(invalid){\r\n                shouldGo = false;\r\n                $(input).addClass('placeholder-error')\r\n                .attr('placeholder',result[f]).css('border','1px solid red');\r\n            } else {\r\n                $(input).removeClass('placeholder-error').attr('placeholder',result[f]).css('border','');\r\n            }\r\n        })\r\n    })\r\n    return {result, shouldGo};\r\n}\r\n\r\nexport const getCurrentDate = (delimiter='-') => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year+delimiter+month+delimiter+day}`;\r\n}\r\n\r\nexport const formatDate = (date=null,format='Ymd') => {\r\n    const dateObj = date?new Date(date): new Date();\r\n    const year = dateObj.getFullYear();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(dateObj.getDate()).padStart(2, '0');\r\n    if(format[0]==='Y')\r\n    {\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n    if(format[0]==='d')\r\n    {\r\n        return `${day}-${month}-${year}`;\r\n    }\r\n}\r\n\r\nexport const getCurrentDay = () => {\r\n    return daysOfWeek[(new Date()).getDay()];\r\n}\r\n\r\nexport const getCurrentTime = () => {\r\n    const currentDate = new Date();\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nexport const toBase64 = blob => {\r\n\r\n}\r\n\r\nexport const dataURLtoFile = (dataurl, filename) => {\r\n    var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[arr.length - 1]), \r\n        n = bstr.length, \r\n        u8arr = new Uint8Array(n);\r\n    while(n--){\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\nexport const isValidDate = ( date, range ) => {\r\n    let today = getCurrentDate();\r\n    let year = today.split('-')[0];\r\n    let intended = new Date(today.replace(year, (parseInt(year)-range)));\r\n    return intended > new Date(date)\r\n}\r\n\r\nexport const capitalFirst = (string) => {\r\n    if (!string) return string; // Handle empty or null strings\r\n    if(string.includes(' ')){\r\n        let str= '';\r\n        string.split(' ').forEach( part => {\r\n           str+=' '+ part.charAt(0).toUpperCase() + part.slice(1); \r\n        })\r\n        return str;\r\n    }\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const getDocumentName = id => {\r\n\r\n    const documents = {\r\n        1 : 'VISIT PHOTO',\r\n        2 : 'AADHAAR CARD',\r\n        3 : 'VOTER CARD',\r\n        4 : 'GROUP PHOTO',\r\n        5 : 'CGT_FIRST',\r\n        6 : 'CGT_SECOND',\r\n        7 : 'CIBIL',\r\n        8 : 'SANCTION LETTER',\r\n        9 : 'KYC',\r\n        10 : 'BANK PASSBOOK',\r\n        11 : 'RELATION PROOF DOCUMENT',\r\n    }\r\n    return documents[id];\r\n    \r\n}\r\n\r\nexport const Warning = msg => {\r\n    return toast(msg,\r\n        {\r\n          icon: '⚠️',\r\n          style: {\r\n            borderRadius: '10px',\r\n            background: '#333',\r\n            color: '#fff',\r\n          },\r\n        }\r\n    );\r\n}\r\n\r\nexport const hexToRgb = (hex) => {\r\n    // Remove the '#' if present\r\n\r\n    if(!hex || typeof hex == 'object'){\r\n        return hex\r\n    }\r\n\r\n    hex = hex.replace(/^#/, '');\r\n    // Convert shorthand hex (e.g., #03F) to full form (e.g., #0033FF)\r\n    if (hex.length === 3) {\r\n        hex = hex.split('').map(h => h + h).join('');\r\n    }\r\n    // Convert hex to RGB\r\n    const r = parseInt(hex.slice(0, 2), 16);\r\n    const g = parseInt(hex.slice(2, 4), 16);\r\n    const b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport const isColorDark = (hexColor) => {\r\n    // Convert hex color to RGB\r\n    let output = hexToRgb(hexColor)\r\n    if(output === undefined) return hexColor\r\n    const { r, g, b } = output\r\n\r\n    // Calculate the luminance\r\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n\r\n    // Return true if the color is dark, else false\r\n    return luminance < 128;\r\n}\r\n\r\nexport function chunk(array, size, uncategorized = false) {\r\n    const result = [];\r\n    if(!array) return []\r\n    if(uncategorized) array.unshift({})\r\n    for (let i = 0; i < array.length; i += size) {\r\n        // Use slice to get a chunk of the specified size and push it to the result array\r\n        result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const wrapText = (text, maxLength) => {\r\n\r\n    if (text?.length > maxLength) {\r\n        let truncatedText = text.substring(0, maxLength) + '...';\r\n        return truncatedText;\r\n    }\r\n    return text\r\n}\r\n\r\nexport const formatDatefromTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    const seconds = String(date.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n  \r\nexport const f = value => parseFloat(value).toFixed(2)"],"names":["Category","_ref","categories","cRef","filter","handleDragStart","handleDragOver","handleDrop","scrollTop","fs2","fontSize","theme","useSelector","state","auth","_jsxs","className","style","backgroundColor","minHeight","width","zIndex","marginTop","children","flexWrap","ref","map","Cat","i","_jsx","concat","color","isColorDark","hexToRgb","background","minWidth","onClick","id","draggable","onDragStart","onDragOver","e","onDrop","name","includes","split","marginRight","bottom","right","border","top","left","current","scrollBy","behavior","memo","products","addToCart","cartStocks","displayImage","Other","chunkSize","toggleModal","otherOpen","catColors","handleImgError","target","src","labelImg","float","n","d","parseFloat","toFixed","addNew","alt","row","k","product","_cartStocks$product$i","_cartStocks$product$i2","_cartStocks$product$i3","quantity","stock","parseInt","category_id","process","image","onError","alignContent","wrapText","length","tax","POS","_cartProducts$activeS","_localStorage$getItem","useRef","sectionRef","keyboardRef","ckeyboardRef","dispatch","useDispatch","location","useLocation","navigator","useNavigate","window","screen","availWidth","currency","cartProducts","openingCash","appKey","inventory","hasKeyboard","allProds","key","setKey","useState","appModal","setAppModal","openingAmountSet","setOpeningAmount","reloadCount","enteredCash","setEnteredCash","data","isSuccess","useGetProductCategoriesQuery","setProducts","putCats","noProduct","setNoProduct","prCategories","setCategories","initialProducts","setInitialProducts","KartProducts","setCartProducts","searchQuery","sessions","activeSession","sale","useSearch","currentProduct","setCurrent","toggleOther","setModal","availableStocks","setAvailableStocks","barcode","setBarcode","opened","toggleVegetableModal","number","setNumber","qty","setQty","editing","setEditing","loadingPhone","setLoading","editingQT","setEditingQT","vegetable","setVegetable","custom","setCustom","price","focused","setFocused","focusedCustom","setFocusedCustom","position","setPosition","x","y","availHeight","dragging","setDragging","offset","setOffset","layout","setLayout","handleMouseDown","useCallback","clientX","clientY","handleMouseMove","handleMouseUp","btnStyle","useEffect","inputBuffer","handleKeyDown","event","activeElement","document","tagName","addEventListener","removeEventListener","allProducts","useGetPosProductsQuery","_allProducts$data","chunk","ite","toLowerCase","fetchPhoneProducts","async","preventDefault","type","payload","axios","get","status","toast","success","message","fd","FormData","midFile","dataURLtoFile","file","append","resp","post","headers","localStorage","getItem","setTimeout","reload","error","console","log","prID","_product","_product$catName","_cartProducts$activeS2","_copyKartProducts$act","find","catName","trim","_objectSpread","unit","return","copyKartProducts","JSON","parse","stringify","thisProduct","_window$electronAPI2","canAdd","updatedStock","availableStock","querySelector","classList","add","_KartProducts$activeS4","_KartProducts$activeS5","findIndex","item","electronAPI","reloadWindow","_KartProducts$activeS6","_KartProducts$activeS7","_Object$values$flat$f2","_Object$values$flat2","_KartProducts$activeS8","_window$electronAPI3","consumed","Object","values","flat","reduce","prev","rest","items","setItems","draggedItemIndex","setDraggedItemIndex","filterProducts","catID","code","_prCategories$","scrollToSection","el","scrollIntoView","block","then","_ref2","Warning","catch","finally","cats","forEach","cat","_allProducts$data$pro","_data$categories$","ls","base","height","placeContent","display","placeItems","useParams","_window$electronAPI7","onDataReceived","manual","showTotal","_KartProducts$activeS14","additions","undefined","returns","_","acc","cur","changeInput","input","_window$electronAPI8","stopPropagation","newAmount","presetTxt","setPreset","_ckeyboardRef$current","setInput","_keyboardRef$current","scale","setScale","decrease","setItem","Math","max","increase","min","_Fragment","keys","Modal","isOpen","Form","onSubmit","cash","created","ModalHeader","ModalBody","Row","Col","FormGroup","Label","Input","placeholder","onChange","value","ModalFooter","md","fontWeight","session","borderRadius","index","maxWidth","indexOf","_window$electronAPI5","removeFromCart","showRate","Link","to","lineHeight","whiteSpace","it","disabled","resetCart","_window$electronAPI4","padding","newItems","draggedItem","splice","commonApiSlice","util","updateQueryData","cache","scrollTo","Products","textAlign","logo","fade","_custom$name","_KartProducts$activeS9","_KartProducts$activeS10","_Object$values$flat$f3","_Object$values$flat3","_KartProducts$activeS11","_window$electronAPI6","_KartProducts$activeS12","_KartProducts$activeS13","push","accept","files","_KartProducts$activeS","_KartProducts$activeS2","_Object$values$flat$f","_Object$values$flat","_stock","_KartProducts$activeS3","_window$electronAPI","validated","test","pattern","size","overflow","touchAction","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","cursor","transform","transformOrigin","onMouseDown","onTouchStart","Keyboard","r","default","justifyContent","clearInput","round","onKeyPress","shift","layoutName","dataurl","filename","arr","mime","match","bstr","atob","u8arr","Uint8Array","charCodeAt","File","capitalFirst","string","str","part","charAt","toUpperCase","slice","msg","icon","hex","replace","h","join","g","b","hexColor","output","array","result","arguments","unshift","text","maxLength","substring","formatDatefromTimestamp","timestamp","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getSeconds","f"],"sourceRoot":""}