{"version":3,"file":"static/js/302.5e3ca917.chunk.js","mappings":"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","sources":["components/pos/Payment.js","helpers/utils.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { commonApiSlice, useGetNotesQuery } from '../../features/centerSlice';\r\nimport pos from '../../asset/images/logo.png'\r\nimport { Warning } from '../../helpers/utils';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useSearch } from '../../contexts/SearchContext';\r\n\r\n\r\nexport default function Payment() \r\n{\r\n    const headers = {\r\n        'Content-Type' : 'application/json',\r\n        'pos-token': localStorage.getItem('pos-token')\r\n    }\r\n    const targetDiv = useRef(null);\r\n    const chosenStyle  = {\r\n        marginTop:'.5rem',\r\n        alignItems: 'center',\r\n        borderRadius: 10,\r\n        minHeight: 80,\r\n        border: '2px dashed',\r\n        backgroundColor: '#fff',\r\n        position: 'relative'\r\n    }\r\n    const navigate = useNavigate();\r\n    const {active} = useParams();\r\n    const [receiptOn, setReceipt] = useState(JSON.parse(localStorage.getItem('prt_receipt')??'false'));\r\n    const { data, isSuccess } = useGetNotesQuery();\r\n    const { setSession, sessions, sale, setType } = useSearch();\r\n    const [ byAll, setByAll ] = useState({Cash:0, Card:0, Account:0});\r\n    const dispatch = useDispatch();\r\n    const mode = { width:'96%', cursor:'pointer' }\r\n    const { currency, cartProducts, openingCash, cartStocks } = useSelector(state => state.auth );\r\n    const [ notes, setNotes] = useState([]);\r\n    const [ paymentMethod, setPaymentMethod ] = useState([]);\r\n    const [ paidAmount, setPaid ] = useState(byAll.Cash + byAll.Card + byAll.Account);\r\n    const [ KartProducts, setKartProducts] = useState([]);\r\n    const [ currentMethod, setCurrentMethod ] = useState('');\r\n   \r\n    const [ number, setNumber ] = useState('');\r\n\r\n    const choosePaymentMethod = (method, note=false) => {\r\n        if( note ) {\r\n            let previous = byAll.Cash;\r\n            previous = parseFloat(previous);\r\n            setByAll({...byAll, Cash: ( previous + parseInt(note) ) });\r\n            if(window.electronAPI) {\r\n                window.electronAPI.drawCash()\r\n            }\r\n        } else {\r\n            let fillAmt = total - Object.values(byAll).reduce((p,c)=> p+ parseFloat(c),0);\r\n            if( fillAmt <= total ){\r\n                setByAll(() => ({ ...byAll, [method]: fillAmt.toFixed(2) }));\r\n            }\r\n            setPaid(() => (byAll.Cash+ byAll.Card + byAll.Account));\r\n        }\r\n        if( !paymentMethod.includes(method) ) {\r\n            setPaymentMethod([ ...paymentMethod, method ]);\r\n        }\r\n        setCurrentMethod(method);\r\n        setNumber('');\r\n    }\r\n\r\n    const changeInput = input => {\r\n        let newAmount = number + input;  \r\n        setNumber(number + input);\r\n        setByAll({...byAll, [currentMethod]:newAmount});\r\n    }\r\n\r\n    const total = cartProducts[parseInt(active)]?.length? cartProducts[parseInt(active)].reduce( (acc, item) => acc + (item.stock * item.price), 0) : KartProducts.reduce( (acc, item) => acc + (item.stock * item.price), 0)\r\n    \r\n    const takeSnipAndPrint = async () => {\r\n        const elem = targetDiv.current;\r\n        if(!elem) return toast.error(`Sorry can't go further...`);\r\n        try {\r\n            if(window.electronAPI){\r\n                window.electronAPI.printContent({html:elem.innerHTML, id: active+':'+openingCash.id});\r\n            } else {\r\n                Warning(\"Printer not connected!\")\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error capturing image:\", error);\r\n        }\r\n    }\r\n\r\n    const initPayment = async () => \r\n    {\r\n        if(total===0) return navigate('/pos')\r\n        let paidAmount = parseFloat(byAll.Cash) + parseFloat(byAll.Card) + parseFloat(byAll.Account)\r\n        if(paidAmount < total.toFixed(2)) {\r\n            return Warning(\"Pay the remainig amount!\");\r\n        }\r\n        dispatch({ type:\"LOADING\" })\r\n        let cashForDrawer = parseFloat(byAll.Cash)\r\n        if(cashForDrawer > total.toFixed(2)){\r\n            cashForDrawer = total.toFixed(2) // baki sab lautana hai \r\n        }\r\n        let reducible = parseFloat(byAll.Card);\r\n        if(reducible > total.toFixed(2)) {\r\n            reducible = reducible - total.toFixed(2)\r\n            cashForDrawer-= reducible\r\n        }\r\n        let thruAC = parseFloat(byAll.Account);\r\n        if(thruAC > total.toFixed(2)) {\r\n            thruAC = thruAC - total.toFixed(2)\r\n            cashForDrawer-= thruAC;\r\n        }\r\n        const {data} = await axios.post(`orders/create`, {\r\n            session_id: active,\r\n            customer_id:'',\r\n            cash_register_id: openingCash.id,\r\n            cashForDrawer,\r\n            amount: total,\r\n            payment_mode: paymentMethod.toString(),\r\n            transaction_type:sale? 'credit':'debit', // debit in case of money & credit in case of stocks\r\n            modes: {...byAll, Cash: cashForDrawer},\r\n            sessionData: cartProducts[parseInt(active)].reduce(\r\n                (acc, { stock, id, price, ...rest }) => {\r\n                    if(acc.products.indexOf(id)===-1) acc.products.push(id);\r\n                    acc.quantity[id] = (acc.quantity[stock] || 0) + stock; // Increment quantity\r\n                    acc.total = total; // Accumulate total price\r\n                    if(id==='quick') acc.otherAmount = acc.otherAmount + parseFloat(price).toFixed(2)\r\n                    return acc;\r\n                },\r\n                { products: [], total: 0, quantity: {}, otherAmount:0 }\r\n            )\r\n        }, {headers});\r\n        if(data.status) {\r\n            toast.success(sale? \"Order completed!\": \"Return completed!\");\r\n            if(!sale) {\r\n                localStorage.setItem('_is_sale', 'true');\r\n                setType(true)\r\n            }\r\n            localStorage.setItem('cartSessions', JSON.stringify(sessions.map( item => item + 1)));\r\n            setSession(sessions.map( ite => ite + 1 ));\r\n            dispatch({ type: \"CHOOSEN_PRODUCT\" , payload: []});\r\n            dispatch(\r\n                commonApiSlice.util.updateQueryData(`getPosProducts`, undefined, cache => {\r\n                    cache['products'] = cache.products.map( product => {\r\n                        if(cartStocks.hasOwnProperty(product.id)) {\r\n                            product.quantity = sale ? product.quantity - cartStocks[product.id]: product.quantity + cartStocks[product.id]\r\n                        } \r\n                        return product;\r\n                    })\r\n                }),\r\n            )\r\n            if(data.notifications.length) {\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getNotifications', undefined, cache => {\r\n                        data.notifications.forEach( notify => { \r\n                            cache['notifications'].push(notify);\r\n                        });\r\n                    })\r\n                )\r\n            }\r\n            dispatch({ type: \"STOP_LOADING\" });\r\n            if(sale && receiptOn ) {\r\n                setKartProducts(cartProducts[active]);\r\n                await takeSnipAndPrint();\r\n            }\r\n            navigate(`/pos`);\r\n        } else {\r\n            toast.error(\"Failed to create the order!\");\r\n        }\r\n\r\n    }\r\n\r\n    const toggleReceipt = mode => {\r\n        localStorage.setItem('prt_receipt', mode)\r\n        setReceipt(mode);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if( isSuccess ) {\r\n            setNotes([...data.notes].sort((a,b)=> (a.amount- b.amount)))\r\n        }\r\n    },[isSuccess, data]);\r\n\r\n    return (\r\n        <>\r\n     \r\n        <div className=\"content-wrapper\">\r\n\r\n            <div className=\"col-lg-12 grid-margin stretch-card\" style={{justifyContent:'space-around'}}>\r\n                <div className=\"col-lg-5\">\r\n                    <div className=\"row\" style={{height:'15rem'}}>\r\n                        <div className=\"container\">\r\n                            {[ 'Cash', 'Card', 'Account' ].map( (met,_) => <div className=\"row mt-2\" key={met}>\r\n                                <div className={`card ms-2 payment-${met.toLowerCase()} ${currentMethod===met && 'active'}`} style={mode} onClick={()=> choosePaymentMethod(met)}>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"d-flex\" style={{alignItems:'center',gap:'5px',color:'#1e283d'}}>\r\n                                            { _ === 0 && <i className=\"mdi mdi-cash\" aria-hidden={true} />}\r\n                                            { _ === 1 && <i className=\"fa fa-credit-card\" aria-hidden={true} />}\r\n                                            { _ === 2 && <i className=\"fa fa-user\" aria-hidden={true} />} \r\n                                            <strong> <p className=\"m-0\"> {met} </p>  </strong>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>)}\r\n                        </div>\r\n                    </div>\r\n                    {sale && <div className=\"row\">\r\n                        <div className=\"col-sm-12 d-flex\">\r\n                            <button type=\"button\" className=\" btn btn-light text-dark w-100 mt-3 justify-content-center\" style={{width:'50%',background:'',color:'white!important'}} onClick={()=>toggleReceipt(!receiptOn)} title=\"print receipt\" > \r\n                                Receipt \r\n                                <input type='checkbox' checked={receiptOn} onChange={()=>{}} /> \r\n                            </button>\r\n                        </div>\r\n                    </div>}\r\n\r\n                    { paymentMethod.length ? (<>\r\n                        <div className=\"calculator\">\r\n                            <div className=\"row mt-2 offset-2\">\r\n                                {[1,2,3].map( (btn,i) => <div className=\"col-sm-3\" key={i} onClick={()=>changeInput(btn)}>\r\n                                    <button style={{fontSize:'1.5rem'}} className=\"btn btn-light  w-100 text-dark\"> <b> {btn} </b> </button>\r\n                                </div> )}\r\n                            </div>\r\n                            <div className=\"row mt-1 offset-2\">\r\n                                {[4,5,6].map( (btn,i) => <div className=\"col-sm-3\" key={i} onClick={()=>changeInput(btn)}>\r\n                                    <button style={{fontSize:'1.5rem'}} className=\"btn btn-light  w-100 text-dark\"> <b> {btn} </b> </button>\r\n                                </div> )}\r\n                            </div>\r\n                            <div className=\"row mt-1 offset-2\">\r\n                                {[7,8,9].map( (btn,i) => <div className=\"col-sm-3\" key={i} onClick={()=>changeInput(btn)}>\r\n                                    <button style={{fontSize:'1.5rem'}} className=\"btn btn-light  w-100 text-dark\"> <b> {btn} </b> </button>\r\n                                </div> )}\r\n                            </div>\r\n                            <div className=\"row mt-1 offset-2\">\r\n                                {[0, '.'].map( it => <div key={it} className={`col-sm-3 `} onClick={()=> changeInput(it)}>\r\n                                    <button style={{fontSize:'1.5rem'}} className=\"btn btn-light w-100 text-dark\"> <b> {it} </b> </button>\r\n                                </div> )}\r\n                                <div className=\"col-sm-3\" onClick={()=> {\r\n                                    setByAll({...byAll, [currentMethod]:0});\r\n                                    setNumber('')\r\n                                }}>\r\n                                    <button style={{fontSize:'1.5rem'}} className=\"btn btn-light w-100 text-dark\"> <b> Clear </b> </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-1\">\r\n                                <div className=\"col-sm-12 d-flex\">\r\n                                    <button type={`button`} className={`w-100 btn btn-light text-white validate`} style={{width:'47%',backgroundColor: '#0d172c',opacity:1}} onClick={initPayment}>\r\n                                        Complete Payment\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>)\r\n                    : null }\r\n                </div>\r\n                <div className=\"final col-lg-6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h1 className=\"text-success\" style={{textAlign:'center'}}>\r\n                                <span className=\"total-amount\">{!sale && '-'} {currency + parseFloat(total).toFixed(2)}</span>\r\n                            </h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card mt-3 w-100 parent\">\r\n                        <div className=\"row selections\">\r\n                            <strong className={`${paymentMethod.length && 'd-none'}`}>\r\n                                <span className=\"info\"> Please select a payment method </span>\r\n                            </strong>\r\n                            {paymentMethod.length ? (\r\n                                <>\r\n                                    { total < Object.values(byAll).reduce((p,c)=> p+parseFloat(c),0) || total === paidAmount ? (<div className={`card fulfilled`} >\r\n                                        <div className=\"card-body exception\">\r\n                                            <div className=\"d-flex\" style={{ justifyContent:'space-between'}}>\r\n                                                <div className=\"d-flex\">\r\n                                                    <i className={`fa-solid fa-cash`} />\r\n                                                    <p> {sale? 'Return':'Put back'} </p>\r\n                                                </div>\r\n                                                <b>&nbsp; {currency} {Math.abs((total - Object.values(byAll).reduce((p,c)=> p+parseFloat(c),0)).toFixed(2))}</b>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>) : (\r\n                                        <div className={`card remaining`}>\r\n                                            <div className={`card-body exception`}>\r\n                                                <div className=\"d-flex\" style={{ justifyContent:'space-between' }}>\r\n                                                    <div className=\"d-flex\">\r\n                                                        <i className={`fa-solid fa-cash`} />\r\n                                                        <p>Remaining </p>\r\n                                                    </div>\r\n                                                    <b>&nbsp; {currency} {Math.abs((total - Object.values(byAll).reduce((p,c)=> p+ parseFloat(c),0)).toFixed(2))}</b>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                    {\r\n                                        paymentMethod.map( meth => <div className={`card methods payment-${meth.toLowerCase()} ${currentMethod===meth && 'active'}`} key={meth} onClick={()=> setCurrentMethod(meth)}>\r\n                                            <div className={`card-body exception`} >\r\n                                                <div className=\"d-flex\" style={{justifyContent:'space-between'}}>\r\n                                                    <div className=\"d-flex\"> \r\n                                                        <p> { meth } </p>\r\n                                                    </div>\r\n                                                    <div className=\"d-flex\">\r\n                                                        &nbsp;{currency} &nbsp;<b className=\"price\" data-paid={paidAmount}> {byAll[meth]}</b>\r\n                                                        <i className=\"mdi mdi-close mx-3\" style={{cursor:'pointer'}} onClick={()=>setPaymentMethod(()=>{ \r\n                                                            setByAll({...byAll, [meth]:0})\r\n                                                            return paymentMethod.filter(ite => ite !== meth)\r\n                                                        })} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>) \r\n                                    }\r\n                                </>\r\n                            ): null}\r\n                        </div>\r\n                    </div>\r\n                    <div className={`container`}>\r\n                        <div className={`row`}>\r\n                            {notes.map((note) => (\r\n                                <div className=\"col-sm-4 mt-1\" key={note.id} style={{maxHeight:'110px',cursor:'pointer'}} onClick={()=>choosePaymentMethod('Cash', note.amount)}>\r\n                                    <img src={process.env.REACT_APP_BACKEND_URI+'images/'+note.image} alt={''} style={{width:'100%',height:'100%',borderRadius:10}} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <form id=\"payment-form\" className=\"d-none\">\r\n                        <div id=\"pay-button\"></div>\r\n                        <div className=\"card-container\" />\r\n                        <button id=\"card-button\" type=\"button\"> Pay 1 {currency}</button>\r\n                    </form>\r\n                    <div id=\"payment-status-container\" />\r\n                </div>\r\n            </div>\r\n            {/* Receipt Area */}\r\n            {sale && <div className={`col-lg-6 ${receiptOn ?'':'d-none'}`} id=\"receipt\">\r\n                <div className=\"container\" style={{backgroundColor:'white',paddingBottom:40,borderRadius:15,alignSelf:'center'}} >\r\n                    <div className=\"row d-flex\">\r\n                        <div style={{justifyContent:'center', display:'grid',textAlign:'center',width:'100%',fontSize:'x-large'}}>\r\n                            <img src={pos} alt=\"\" style={{marginTop:30, filter:'grayscale(1)'}} height={150}/>\r\n                            <h2>#{ active+':'+openingCash.id}</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\" ref={targetDiv} style={{justifyContent:'center'}}>\r\n                        <div className=\"receipt\" style={{width:'90%',background:'#fff'}}>\r\n                            {\r\n                                cartProducts[active]?.map( product => <div key={product.id} className='row' style={chosenStyle}>\r\n                                        <div style={{display:'flex',width:'100%',justifyContent:'space-between'}}>\r\n                                            <b style={{fontSize: product.name.length > 35?'medium':'larger',fontWeight:900,maxWidth:'85%'}}>{product.name}</b>\r\n                                            <strong className='price' style={{fontSize:'large'}}>\r\n                                                Qty: {product.stock}\r\n                                            </strong>\r\n                                        </div>\r\n                                        <div style={{fontSize:'larger',width:'100%',fontWeight:900,display:'flex',justifyContent:'space-between'}}>\r\n                                            <span> {(!product.other ? currency + parseFloat(product.price).toFixed(2) + '/ Units':'')} </span>\r\n                                            <span>{ currency + ' ' + parseFloat(product.stock * product.price).toFixed(2) }</span>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <div>\r\n                                <div style={{justifyContent:'end',display:'flex',marginTop:'1.5rem'}}>\r\n                                    <div>\r\n                                        <h2>TOTAL:&nbsp;&nbsp;</h2>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h2> {currency+ '' + total.toFixed(2) } </h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{justifyContent:'end',display:'flex',width:'100%'}}>\r\n                                    <small>&#x260E;: 070-3563062</small>\r\n                                </div>\r\n                                <div style={{textAlign:'right'}}> \r\n                                    <small><span style={{color:'black',fontSize:'2rem'}}>&#x1F6D2;</span>Hobbemaplein 50 <br/> 2526 JB Den Haag, Netherlands</small>\r\n                                </div>\r\n                            </div>\r\n                            <center>\r\n                                <b>Thank you! Visit Again!</b>\r\n                            </center>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import $ from 'jquery'\r\nimport toast from 'react-hot-toast';\r\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport const validate = (fields,exceptions=[]) => {\r\n    let result={}\r\n    var shouldGo=true;\r\n    if(exceptions.length)\r\n    {\r\n        exceptions.forEach( item => {\r\n            delete fields[item]\r\n        })\r\n    }\r\n    Object.keys(fields).forEach(f =>\r\n    {\r\n        let shout = '';\r\n        let invalid = false;\r\n        let tInputs = [$(`input[name=${f}]`), $(`select[name=${f}]`), $(`textarea[name=${f}]`), $(`.${f}`)]\r\n        if(fields[f]==null || fields[f].length===0)\r\n        {\r\n            result[f]=`Required!`;\r\n            shouldGo=false;\r\n            invalid = true;\r\n        }\r\n        tInputs.forEach( input => {\r\n\r\n            let minLength = $(input).attr('type')!== 'date' ? $(input).attr('min'): 0;\r\n            let maxLength = $(input).attr('max');\r\n            let type = $(input).attr('cast');\r\n            let isDate = $(input).attr('type')==='date' && $(input).attr('req');\r\n            if($(input).val()?.length && (minLength || maxLength))\r\n            {\r\n                if($(input).val().length < parseInt(minLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should be of at least ${minLength} characters!`\r\n                    result[f] = shout;\r\n                }\r\n                if($(input).val().length > parseInt(maxLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should not be greater than ${maxLength} characters!`;\r\n                    result[f] = shout;\r\n                }\r\n            }\r\n            if(type)\r\n            { \r\n                if(input.val() && type === 'num')\r\n                {\r\n                    if(parseInt($(input).val().length )!== $(input).val().length) {\r\n                        shout= `Should be in numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n                if( $(input).val() && type=== 'str' )\r\n                {\r\n                    if( /^([^0-9]*)$/.test($(input).val())===false )\r\n                    {\r\n                        shout= `Should not contain numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n            }\r\n            if(isDate)\r\n            {\r\n                if(!isValidDate($(input).val(),18))\r\n                {\r\n                    invalid = true\r\n                    shout = 'Invalid date';\r\n                    result[f] = shout;\r\n                } else {\r\n                    shout = '';\r\n                }\r\n                // return\r\n            }\r\n            if(shout)   \r\n            {\r\n                if($(input).parents('.col-md-12, .col').find('small.text-danger').length)\r\n                {\r\n                    $(input).parents('.col-md-12, .col').find('small.text-danger').text(shout)\r\n                } else {\r\n                    $(input).parents('.col-md-12, .col').append('<small class=\"text-danger\">'+shout+'</small>')\r\n                }\r\n            } else {\r\n                $(input).parents('.col-md-12, .col').find('small.text-danger').remove()\r\n            }\r\n            if(invalid){\r\n                shouldGo = false;\r\n                $(input).addClass('placeholder-error')\r\n                .attr('placeholder',result[f]).css('border','1px solid red');\r\n            } else {\r\n                $(input).removeClass('placeholder-error').attr('placeholder',result[f]).css('border','');\r\n            }\r\n        })\r\n    })\r\n    return {result, shouldGo};\r\n}\r\n\r\nexport const getCurrentDate = (delimiter='-') => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year+delimiter+month+delimiter+day}`;\r\n}\r\n\r\nexport const formatDate = (date=null,format='Ymd') => {\r\n    const dateObj = date?new Date(date): new Date();\r\n    const year = dateObj.getFullYear();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(dateObj.getDate()).padStart(2, '0');\r\n    if(format[0]==='Y')\r\n    {\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n    if(format[0]==='d')\r\n    {\r\n        return `${day}-${month}-${year}`;\r\n    }\r\n}\r\n\r\nexport const getCurrentDay = () => {\r\n    return daysOfWeek[(new Date()).getDay()];\r\n}\r\n\r\nexport const getCurrentTime = () => {\r\n    const currentDate = new Date();\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nexport const toBase64 = blob => {\r\n\r\n}\r\n\r\nexport const dataURLtoFile = (dataurl, filename) => {\r\n    var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[arr.length - 1]), \r\n        n = bstr.length, \r\n        u8arr = new Uint8Array(n);\r\n    while(n--){\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\nexport const isValidDate = ( date, range ) => {\r\n    let today = getCurrentDate();\r\n    let year = today.split('-')[0];\r\n    let intended = new Date(today.replace(year, (parseInt(year)-range)));\r\n    return intended > new Date(date)\r\n}\r\n\r\nexport const capitalFirst = (string) => {\r\n    if (!string) return string; // Handle empty or null strings\r\n    if(string.includes(' ')){\r\n        let str= '';\r\n        string.split(' ').forEach( part => {\r\n           str+=' '+ part.charAt(0).toUpperCase() + part.slice(1); \r\n        })\r\n        return str;\r\n    }\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const getDocumentName = id => {\r\n\r\n    const documents = {\r\n        1 : 'VISIT PHOTO',\r\n        2 : 'AADHAAR CARD',\r\n        3 : 'VOTER CARD',\r\n        4 : 'GROUP PHOTO',\r\n        5 : 'CGT_FIRST',\r\n        6 : 'CGT_SECOND',\r\n        7 : 'CIBIL',\r\n        8 : 'SANCTION LETTER',\r\n        9 : 'KYC',\r\n        10 : 'BANK PASSBOOK',\r\n        11 : 'RELATION PROOF DOCUMENT',\r\n    }\r\n    return documents[id];\r\n    \r\n}\r\n\r\nexport const Warning = msg => {\r\n    return toast(msg,\r\n        {\r\n          icon: '⚠️',\r\n          style: {\r\n            borderRadius: '10px',\r\n            background: '#333',\r\n            color: '#fff',\r\n          },\r\n        }\r\n    );\r\n}\r\n\r\nexport const hexToRgb = (hex) => {\r\n    // Remove the '#' if present\r\n\r\n    if(!hex || typeof hex == 'object'){\r\n        return hex\r\n    }\r\n\r\n    hex = hex.replace(/^#/, '');\r\n    // Convert shorthand hex (e.g., #03F) to full form (e.g., #0033FF)\r\n    if (hex.length === 3) {\r\n        hex = hex.split('').map(h => h + h).join('');\r\n    }\r\n    // Convert hex to RGB\r\n    const r = parseInt(hex.slice(0, 2), 16);\r\n    const g = parseInt(hex.slice(2, 4), 16);\r\n    const b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport const isColorDark = (hexColor) => {\r\n    // Convert hex color to RGB\r\n    let output = hexToRgb(hexColor)\r\n    if(output === undefined) return hexColor\r\n    const { r, g, b } = output\r\n\r\n    // Calculate the luminance\r\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n\r\n    // Return true if the color is dark, else false\r\n    return luminance < 128;\r\n}\r\n\r\nexport function chunk(array, size, uncategorized = false) {\r\n    const result = [];\r\n    if(!array) return []\r\n    if(uncategorized) array.unshift({})\r\n    for (let i = 0; i < array.length; i += size) {\r\n        // Use slice to get a chunk of the specified size and push it to the result array\r\n        result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const wrapText = (text, maxLength) => {\r\n\r\n    if (text?.length > maxLength) {\r\n        let truncatedText = text.substring(0, maxLength) + '...';\r\n        return truncatedText;\r\n    }\r\n    return text\r\n}\r\n\r\nexport const formatDatefromTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    const seconds = String(date.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n  "],"names":["Payment","_localStorage$getItem","_cartProducts$parseIn","_cartProducts$active","headers","localStorage","getItem","targetDiv","useRef","chosenStyle","marginTop","alignItems","borderRadius","minHeight","border","backgroundColor","position","navigate","useNavigate","active","useParams","receiptOn","setReceipt","useState","JSON","parse","data","isSuccess","useGetNotesQuery","setSession","sessions","sale","setType","useSearch","byAll","setByAll","Cash","Card","Account","dispatch","useDispatch","mode","width","cursor","currency","cartProducts","openingCash","cartStocks","useSelector","state","auth","notes","setNotes","paymentMethod","setPaymentMethod","paidAmount","setPaid","KartProducts","setKartProducts","currentMethod","setCurrentMethod","number","setNumber","choosePaymentMethod","method","note","arguments","length","undefined","previous","parseFloat","_objectSpread","parseInt","window","electronAPI","drawCash","fillAmt","total","Object","values","reduce","p","c","toFixed","includes","changeInput","input","newAmount","acc","item","stock","price","useEffect","sort","a","b","amount","_jsx","_Fragment","children","_jsxs","className","style","justifyContent","height","map","met","_","concat","toLowerCase","onClick","gap","color","type","background","setItem","toggleReceipt","title","checked","onChange","btn","i","fontSize","it","opacity","async","Warning","cashForDrawer","reducible","thruAC","axios","post","session_id","customer_id","cash_register_id","id","payment_mode","toString","transaction_type","modes","sessionData","_ref","_objectWithoutProperties","_excluded","products","indexOf","push","quantity","otherAmount","status","toast","success","stringify","ite","payload","commonApiSlice","util","updateQueryData","cache","product","hasOwnProperty","notifications","forEach","notify","elem","current","error","printContent","html","innerHTML","console","takeSnipAndPrint","textAlign","Math","abs","meth","filter","maxHeight","src","process","image","alt","paddingBottom","alignSelf","display","pos","ref","name","fontWeight","maxWidth","other","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","capitalFirst","string","str","part","charAt","toUpperCase","slice","msg","icon","hexToRgb","hex","replace","h","join","r","g","isColorDark","hexColor","output","chunk","array","size","result","unshift","wrapText","text","maxLength","substring","formatDatefromTimestamp","timestamp","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getSeconds"],"sourceRoot":""}