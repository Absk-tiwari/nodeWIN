{"version":3,"file":"static/js/408.49a58ef3.chunk.js","mappings":"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","sources":["components/config/CategoryAndTax.js"],"sourcesContent":["import axios from 'axios';\r\nimport Keyboard from 'react-simple-keyboard';\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom'\r\nimport { Modal, ModalFooter, ModalHeader, Form, ModalBody, Row, Container, FormGroup, Label, Input } from 'reactstrap'\r\nimport { commonApiSlice, useGetProductCategoriesQuery, useGetTaxesQuery, useToggleCategoryMutation, useToggleTaxMutation } from '../../features/centerSlice';\r\nimport toast from 'react-hot-toast';\r\n\r\nfunction CategoryAndTax() {\r\n    const {type} = useParams()\r\n    const dispatch = useDispatch();\r\n    const keyboardRef = useRef();\r\n    const [ layoutName, setLayout ] = useState('default')\r\n    const [ focused, setFocused ] = useState(false);\r\n    const [ currentIndex, setCurrentIndex ] = useState(null)\r\n    const { hasKeyboard } = useSelector(s => s.auth)\r\n    const { data:original, isSuccess, refetch } = useGetProductCategoriesQuery();\r\n    const { data:dbTaxes, isSuccess:taxLoaded, refetch: refetchTax } = useGetTaxesQuery()\r\n    const [ toggleCategory ] = useToggleCategoryMutation();\r\n    const [ toggleTax ] = useToggleTaxMutation();\r\n    const [categories, setCategories] = useState([]);\r\n    const [editing, setEditing] = useState(false);\r\n    const [editingTax, setTaxEditing] = useState(false);\r\n    const containerRef = useRef(null);\r\n    const [taxes, setTaxes] = useState([]);\r\n\r\n    const [catFields, setCatField] = useState({})\r\n\r\n    const [justifyActive, setJustifyActive] = useState(type);\r\n    const handleJustifyClick = value => {\r\n        if (value === justifyActive) {\r\n            return;\r\n        } \r\n        setJustifyActive(value);\r\n    };\r\n    const [open, setModal] = useState(false);\r\n\r\n    const changeTax = e => {\r\n        const {index} = e.target.dataset;\r\n        setTaxes(\r\n            taxes.map( (t, i)=> \r\n                i=== parseInt(index) ? {...t, [e.target.name]: e.target.value}: t\r\n            )\r\n        ) \r\n    }\r\n\r\n    const editTax = (tID) => setTaxEditing(tID)\r\n\r\n    const toggleModal = () => setModal(!open)\r\n    const catChange = (e) => setCatField({ ...catFields, [e.target.name]:e.target.value })\r\n\r\n    const initTax = () => {\r\n        setTaxes([...taxes, {name:'', amount:'', status:true}]);\r\n        if(containerRef.current) {\r\n            // containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n            window.scrollTo(0, document.body.scrollHeight);\r\n        }\r\n    }\r\n\r\n    const initCategory = () => {\r\n        setCategories([...categories, { name:'', color:'', status: true }]); \r\n        if(containerRef.current) {\r\n            // containerRef.current.scrollTop = containerRef.current.scrollHeight;\r\n            window.scrollTo(0, document.body.scrollHeight);\r\n        } \r\n    }\r\n\r\n    const createCategory = e => {\r\n \r\n        dispatch({type:\"LOADING\"});\r\n        const payload = categories[categories.length-1]; // the last one is the item to be saved\r\n        axios.post(`category/create`, payload ).then(({data})=> {\r\n            if(data.status) {\r\n                toast.success(`Category added successfully!`);\r\n                refetch();\r\n                setFocused('')\r\n            }\r\n        }).catch(()=>{})\r\n        .finally(()=> dispatch({type:\"STOP_LOADING\"}));\r\n\r\n    }\r\n\r\n    const deleteCategory = (id,event) => {\r\n        const {index} = event.target.dataset\r\n        setFocused(null)\r\n        if(!id) {\r\n            return setCategories(categories.filter( (cat, ind)=> ind !== parseInt(index)))\r\n        }\r\n        if(!window.confirm('Are you sure? Products associated with this category will also be deleted!')) {\r\n            return \r\n        }\r\n        dispatch({ type:\"LOADING\" });\r\n        axios.get(`category/remove/${id}`).then(({data})=> {\r\n            \r\n            if(data.status) {\r\n                setCategories(categories.filter( (cat, ind)=> ind !== parseInt(index)))\r\n                toast.success(\"Category removed!\");\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getPosProducts', undefined, draft => draft.products.filter(pr => pr.category_id !== parseInt(id)))\r\n                )\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getProducts', undefined, cache => cache.products.filter( pr=> pr.catName !== categories[index].name ))\r\n                )\r\n            } else {\r\n                toast.error(\"Couldn't remove category!\");\r\n            }\r\n        }).catch(()=> null )\r\n        .finally(()=> dispatch({ type:\"STOP_LOADING\" }))\r\n    }\r\n\r\n    const createTax = e => {\r\n        setFocused(null)\r\n        dispatch({type:\"LOADING\"});\r\n        const tax = taxes[taxes.length-1];\r\n        axios.post(`tax/create`, tax ).then(({data})=> {\r\n            if(data.status) {\r\n                toast.success(\"Tax successfully added!\");\r\n                refetchTax()\r\n            } else {\r\n                toast.error(\"Something went wrong!\");\r\n            }\r\n        }).catch(()=> toast.error(\"Something went wrong!\"))\r\n        .finally(()=> dispatch({type:\"STOP_LOADING\"}));\r\n\r\n    }\r\n\r\n    const deleteTax = (id,event) => {\r\n        const {index} = event.target.dataset\r\n        if(!id) {\r\n            return setTaxes(taxes.filter( (cat, ind)=> ind !== parseInt(index)))\r\n        }\r\n        if(!window.confirm('Are you sure?')) {\r\n            return \r\n        }\r\n        dispatch({ type:\"LOADING\" });\r\n        axios.get(`tax/remove/${id}`).then(({data})=> {\r\n            if(data.status) {\r\n                setTaxes(taxes.filter( (cat, ind)=> ind !== parseInt(index)))\r\n                toast.success(\"Tax removed!\");\r\n            } else {\r\n                toast.error(\"Couldn't remove tax!\");\r\n            }\r\n            dispatch(\r\n                commonApiSlice.util.updateQueryData('getTaxes', undefined, cache => cache.taxes.filter( t => t.id !== parseInt(id)))\r\n            )\r\n        }).catch(()=> null )\r\n        .finally(()=> dispatch({ type:\"STOP_LOADING\" }))\r\n    }\r\n\r\n    const edit = (id) => setEditing(id)\r\n\r\n    const save = id => {\r\n        const cat = categories.find( ite => ite.id === id);\r\n        axios.post('category/update', cat).then(({data})=> {\r\n            if(data.status) {\r\n                toast.success(data.message)\r\n                setEditing('')\r\n                setFocused(null)\r\n                refetch()\r\n            }\r\n        }).catch().finally()\r\n    }\r\n\r\n    const saveTax = async id => {\r\n        const tax = taxes.find( t => t.id === id );\r\n        const {data} = await axios.post(`/tax/update`, tax);\r\n        if(data.status) {\r\n            refetchTax();\r\n            toast.success(\"Tax successfully updated!\");\r\n            setTaxEditing(false)\r\n        } else {\r\n            toast.error(\"Failed to update tax, try creating new one deleting it.\")\r\n        }\r\n        setFocused(null)\r\n    } \r\n\r\n    const updateCategory = e => {\r\n        let {index} = e.target.dataset; \r\n        setCategories(\r\n            categories.map((item, i) =>\r\n                i === parseInt(index) ? { ...item, [e.target.name]: e.target.value } : item\r\n            )\r\n        ) \r\n    }\r\n\r\n    const setCategory = async e => {\r\n        let {id, status} = e.target.dataset;\r\n        let stat = parseInt(status) ? 0 : 1; \r\n        e.preventDefault();\r\n        try {\r\n            let res = await toggleCategory({id, status:stat}).unwrap()\r\n            if (res.status) e.target.checked = stat\r\n        } catch (error) {\r\n            console.log(\"Exception on first sight:- \"+ error.message )\r\n        }\r\n    }\r\n\r\n    const setTax = async e => {\r\n        let {id, status} = e.target.dataset\r\n        let stat = parseInt(status)? 0: 1\r\n        e.preventDefault();\r\n        try {\r\n            let res = await toggleTax({id, status:stat}).unwrap()\r\n            if(res.status) e.target.checked = stat\r\n        } catch (error) {\r\n            toast.error(\"Something went wrong!\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(isSuccess) {\r\n            setCategories(original.categories);\r\n        }\r\n        return () => null\r\n    },[ isSuccess,original ])\r\n\r\n    useEffect(()=>{\r\n        if(taxLoaded) {\r\n            setTaxes(dbTaxes.taxes)\r\n        }\r\n        return ()=> null\r\n    },[taxLoaded, dbTaxes])\r\n\r\n    const [ editingType, setEditingType ] = useState(null)\r\n    const [ position, setPosition ] = useState({ x: window.screen.availWidth/4, y: window.screen.availHeight / 2 });\r\n    const [ dragging, setDragging ] = useState(false);\r\n    const [ offset, setOffset ] = useState({ x: 0, y: 0 });\r\n    const [ presetTxt, setPreset ] = useState('');\r\n    const [ scale, setScale ] = useState(localStorage.getItem('_keyboard_scale')??1)\r\n    const handleMouseDown = (e) => {\r\n        setDragging(true);\r\n        setOffset({\r\n            x: e.clientX - position.x,\r\n            y: e.clientY - position.y,\r\n        });\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!dragging) return;\r\n        setPosition({\r\n            x: e.clientX - offset.x,\r\n            y: e.clientY - offset.y,\r\n        });\r\n    }\r\n    const handleMouseUp = () => setDragging(false);\r\n\r\n    const onChange =  e => {\r\n        if(editingType==='cat') {\r\n            setCategories(\r\n                categories.map((item, i) =>\r\n                    i === parseInt(currentIndex) ? { ...item, [focused]: e } : item\r\n                )\r\n            )\r\n        } else {\r\n            setTaxes(\r\n                taxes.map( (t, i)=> \r\n                    i=== parseInt(currentIndex) ? {...t, [focused]: e }: t\r\n                )\r\n            ) \r\n        }\r\n    }\r\n    useEffect(() => {\r\n        keyboardRef.current?.setInput(presetTxt);\r\n    }, [presetTxt]);\r\n\r\n    const CategoryModal = () => {\r\n        return <Modal isOpen={open} toggle={toggleModal} > \r\n            <Form onSubmit={createCategory} >\r\n                <ModalHeader toggle={toggleModal}> Update Product </ModalHeader>\r\n                    <ModalBody>\r\n                        <Container>\r\n                            <Row>\r\n                                <FormGroup>\r\n                                    <Label> Name </Label>\r\n                                    <Input\r\n                                        type={'text'}\r\n                                        name='name'\r\n                                        onChange={catChange}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Row>\r\n                            <Row>\r\n                                <FormGroup>\r\n                                    <Label> Revised Photo </Label>\r\n                                    <Input \r\n                                        name='color'\r\n                                        type='color'\r\n                                        onChange={catChange}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Row>\r\n                            <Row>\r\n                                <FormGroup>\r\n                                    <Label> Status </Label>\r\n                                    <Input \r\n                                        name='status'\r\n                                        type='checkbox'\r\n                                        onChange={catChange}\r\n                                        defaultChecked={true}\r\n                                    />\r\n                                </FormGroup>\r\n                            </Row>\r\n                        </Container>\r\n                    </ModalBody>\r\n                <ModalFooter>\r\n                    <button className=\"btn btn-primary\" type=\"button\" onClick={toggleModal}>\r\n                        Close\r\n                    </button>\r\n                </ModalFooter> \r\n            </Form>\r\n        </Modal>\r\n    }\r\n    \r\n    return (\r\n        <>\r\n           <div className={`content-wrapper`} >\r\n                <div className=\"d-grid\" style={{overflowY:'auto'}} ref={containerRef}>\r\n                    <div className=\"d-flex position-relative\">\r\n                        <button className=\"btn tablink\" data-btn=\"category\" \r\n                            onClick={() => handleJustifyClick('categories')} data-active={justifyActive==='categories'} style={{zIndex:8}}> Categories </button>\r\n                        <button className=\"btn tablink\" data-btn=\"tax\" onClick={() => handleJustifyClick('taxes')}  data-active={justifyActive==='taxes'} \r\n                        style={{borderTopLeftRadius:'0px',borderBottomLeftRadius:'0px',zIndex:8}}>\r\n                            Taxes \r\n                        </button>\r\n                    </div>\r\n                    <div id=\"category\" className={`tabcontent ${ justifyActive==='categories' ?'d-block': 'd-none' }`}  ref={containerRef}>\r\n                        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"table-responsive w-100 categoryTable\">\r\n                                        <table className='table table-bordered w-100'>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.No</th>\r\n                                                    <th>Name</th>\r\n                                                    <th>Color</th> \r\n                                                    <th>Status</th>\r\n                                                    <th>\r\n                                                        Action\r\n                                                        <span className={`fa fa-plus btn-sm btn-rounded btn btn-success ms-4`} title=\"Create\" onClick={initCategory}> New </span>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            { categories.map( (cat,i) => (\r\n                                                <tr key={i}>\r\n                                                    <td> {1 + i} </td>        \r\n                                                    <td> <Input \r\n                                                        name='name' \r\n                                                        type='text' \r\n                                                        data-index={i} \r\n                                                        onChange={updateCategory} \r\n                                                        disabled={ cat.id && editing!==cat.id } \r\n                                                        value={cat.name}\r\n                                                        onClick={(e)=> {\r\n                                                            setFocused('name');\r\n                                                            setEditingType('cat')\r\n                                                            setPreset(cat.name)\r\n                                                            setCurrentIndex(i)\r\n                                                        }}\r\n                                                    /> </td>\r\n                                                    <td> <Input type='color' name='color' data-index={i} onChange={updateCategory} disabled={ cat.id && editing!==cat.id } defaultValue={cat.color} /> </td>        \r\n                                                    <td>\r\n                                                        <input type={`checkbox`} data-id={cat.id} data-status={cat.status} onChange={setCategory} id={`btn`+cat.id} name={'status'} defaultChecked={cat.status} className='status'/>\r\n                                                        <label htmlFor={`btn`+cat.id}/>\r\n                                                        <div className='plate'/>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        { cat.id ? \r\n                                                        (<>\r\n                                                        <button className={`btn btn-sm btn-primary ${editing===cat.id && 'btn-success'}`} onClick={()=> editing !== cat.id ? edit(cat.id): save(cat.id)}>\r\n                                                            { editing && editing === cat.id ? 'Save':'Edit'}\r\n                                                        </button>\r\n                                                        <button data-index={i} className={`btn btn-sm btn-danger ms-3 delete`} onClick={e=> deleteCategory(cat.id, e)}>\r\n                                                            Delete\r\n                                                        </button>\r\n                                                        </>):\r\n                                                        <>\r\n                                                        <button className='btn btn-sm btn-success' onClick={createCategory}>\r\n                                                            Add\r\n                                                        </button>\r\n                                                        <button data-index={i} className={`btn btn-sm btn-light ms-3 delete`} onClick={e=> deleteCategory(cat.id, e)}>\r\n                                                            Cancel\r\n                                                        </button>\r\n                                                        </>\r\n                                                        }\r\n                                                    </td>\r\n                                                </tr>\r\n                                            )) }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"tax\" className={`tabcontent ${ justifyActive ==='taxes' ? 'd-block': 'd-none' }`}>\r\n                        <div className=\"col-lg-12 grid-margin stretch-card\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"table-responsive w-100 taxTable\">\r\n                                        <table className={`table table-bordered w-100`}>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>S.No</th>\r\n                                                    <th>Name</th>\r\n                                                    <th>Amount</th> \r\n                                                    <th>Status</th>\r\n                                                    <th>\r\n                                                        Action\r\n                                                        <span className={`mdi mdi-plus btn-sm btn-rounded btn btn-success ms-4`} \r\n                                                        data-toggle=\"modal\" data-target=\".addTaxes\" title=\"Create\" onClick={initTax}> New </span>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {taxes.map( (tax,i) => {\r\n                                                    return <tr key={i}>\r\n                                                        <td>{1+i}</td>\r\n                                                        <td>\r\n                                                            <Input data-index={i} \r\n                                                                name='name' \r\n                                                                value={tax.name} \r\n                                                                onChange={changeTax} \r\n                                                                disabled={ tax.id && editingTax!==tax.id }\r\n                                                                className='input'\r\n                                                                onClick={(e)=> {\r\n                                                                    setFocused('name');\r\n                                                                    setEditingType('ct')\r\n                                                                    setPreset(tax.name)\r\n                                                                    setCurrentIndex(i)\r\n                                                                }}\r\n                                                            />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <Input \r\n                                                                data-index={i} \r\n                                                                name='amount' \r\n                                                                defaultValue={tax.amount} \r\n                                                                onChange={changeTax}\r\n                                                                disabled={ tax.id && editingTax!==tax.id }\r\n                                                                className='input'\r\n                                                                onClick={(e)=> {\r\n                                                                    setFocused('amount');\r\n                                                                    setEditingType('ct')\r\n                                                                    setPreset(tax.amount)\r\n                                                                    setCurrentIndex(i)\r\n                                                                }}\r\n                                                            />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <input \r\n                                                                type={`checkbox`} \r\n                                                                style={{display:'none'}} \r\n                                                                id={`btn-tax`+tax.id} \r\n                                                                name={'status'} \r\n                                                                data-id={tax.id}\r\n                                                                data-status={tax.status}\r\n                                                                defaultChecked={tax.status} \r\n                                                                className='status' \r\n                                                                onChange={setTax}\r\n                                                            />\r\n                                                            <label htmlFor={`btn-tax`+tax.id} />\r\n                                                            <div className='plate' />\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {tax.id ? (\r\n                                                            <>\r\n                                                                <button className={`btn btn-sm btn-primary ${editingTax === tax.id && 'btn-success'}`} onClick={(e)=> {\r\n                                                                    editingTax !== tax.id ? editTax(tax.id): saveTax(tax.id)\r\n                                                                    }}> \r\n                                                                    { editingTax && editingTax === tax.id ? 'Save':'Edit'}    \r\n                                                                </button>\r\n                                                                <button className='btn btn-sm btn-rounded btn-danger ms-3' onClick={e => deleteTax(tax.id, e)} >Delete</button>\r\n                                                            </>\r\n                                                            ):(\r\n                                                            <>\r\n                                                                <button className='btn btn-sm btn-rounded btn-success' onClick={createTax}> Add </button>\r\n                                                                <button className='btn btn-sm btn-rounded btn-light ms-3' onClick={e => deleteTax(tax.id, e)} >Cancel</button>\r\n                                                            </>\r\n                                                            )}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                })}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n           </div>\r\n            <CategoryModal/>\r\n            {\r\n                focused && !hasKeyboard && <div className='mt-4 position-fixed w-50' style={{zIndex:9999, top:60 }}>\r\n                <div\r\n                    style={{\r\n                        overflow: \"hidden\",\r\n                        position: \"relative\",\r\n                        touchAction: \"none\",\r\n                    }}\r\n                    onMouseMove={handleMouseMove}\r\n                    onTouchMove={handleMouseMove}\r\n                    onMouseUp={handleMouseUp}\r\n                    onTouchEnd={handleMouseUp}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            position: \"fixed\",\r\n                            top: `${position.y}px`,\r\n                            left: `${position.x}px`,\r\n                            cursor: dragging ? \"grabbing\" : \"grab\",\r\n                            zIndex: 1000,\r\n                            width:700,\r\n                            resize:'both',\r\n                            overflow:'auto',\r\n                            touchAction: \"none\",\r\n                            transform: `scale(${scale})`, transformOrigin: \"top center\"\r\n                        }}\r\n                    >\r\n                        <div\r\n                        onMouseDown={handleMouseDown}\r\n                        onTouchStart={handleMouseDown}\r\n                            style={{\r\n                                background: \"#444\",\r\n                                color: \"#fff\",\r\n                                padding: 10,\r\n                                cursor: \"grab\",\r\n                                textAlign: \"center\",\r\n                                touchAction: \"none\",\r\n                                borderRadius: \"8px 8px 0 0\",\r\n                            }}\r\n                        >\r\n                            Hold To Drag \r\n                        </div>\r\n                            <Keyboard\r\n                                onChange={onChange}\r\n                                onKeyPress={(e) => {\r\n                                    if(e === \"{lock}\")\r\n                                    {\r\n                                        setLayout((prev) => (prev === \"default\" ? \"shift\" : \"default\"))\r\n                                    }\r\n                                }}\r\n                                keyboardRef={(r) => (keyboardRef.current = r)}\r\n                                layout={{\r\n                                    default: focused==='amount' ? [\r\n                                        \"! @ # $ % ^ & * {bksp}\",\r\n                                        \"1 2 3 4 5 6 7 8 9 0\",\r\n                                    ]: [\r\n                                        \"1 2 3 4 5 6 7 8 9 0\",\r\n                                        \"q w e r t y u i o p\",\r\n                                        \"{lock} a s d f g h j k l\",\r\n                                        \"z x c v b n m {bksp}\",\r\n                                        \"{space}\"\r\n                                    ],\r\n                                    shift: [\r\n                                        \"1 2 3 4 5 6 7 8 9 0\",\r\n                                        \"Q W E R T Y U I O P\",\r\n                                        \"{lock} A S D F G H J K L\",\r\n                                        \"Z X C V B N M {bksp}\",\r\n                                        \"{space}\"\r\n                                    ]\r\n                                }}\r\n                                display={{\r\n                                    \"{lock}\":\"Caps\",\r\n                                    \"{bksp}\":\"Backspace\",\r\n                                    \"{space}\":\"Space\"\r\n                                }}\r\n                                layoutName={layoutName}\r\n                            />\r\n                        <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                            <button className='btn btn-light btn-rounded' onClick={()=>{\r\n                                // se({...inputFields,[focused]:''})\r\n                                keyboardRef.current.clearInput()\r\n                            }} style={{border:'1px solid gray'}}>CLEAR</button>\r\n                            <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={() => setScale(prev => Math.max(prev - 0.1, 0.5))}>-</button>\r\n                            <span style={{placeContent:'center'}}> Size: {Math.round(scale * 100)}% </span>\r\n                            <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={() => setScale(prev => Math.min(prev + 0.1, 2))}>+</button>\r\n                            <button onClick={()=>setFocused('')} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryAndTax"],"names":["_localStorage$getItem","type","useParams","dispatch","useDispatch","keyboardRef","useRef","layoutName","setLayout","useState","focused","setFocused","currentIndex","setCurrentIndex","hasKeyboard","useSelector","s","auth","data","original","isSuccess","refetch","useGetProductCategoriesQuery","dbTaxes","taxLoaded","refetchTax","useGetTaxesQuery","toggleCategory","useToggleCategoryMutation","toggleTax","useToggleTaxMutation","categories","setCategories","editing","setEditing","editingTax","setTaxEditing","containerRef","taxes","setTaxes","catFields","setCatField","justifyActive","setJustifyActive","handleJustifyClick","value","open","setModal","changeTax","e","index","target","dataset","map","t","i","parseInt","_objectSpread","name","toggleModal","catChange","createCategory","payload","length","axios","post","then","_ref","status","toast","success","catch","finally","deleteCategory","id","event","filter","cat","ind","window","confirm","get","concat","_ref2","commonApiSlice","util","updateQueryData","undefined","draft","products","pr","category_id","cache","catName","error","createTax","tax","_ref3","deleteTax","_ref4","updateCategory","item","setCategory","async","stat","preventDefault","unwrap","checked","console","log","message","setTax","useEffect","editingType","setEditingType","position","setPosition","x","screen","availWidth","y","availHeight","dragging","setDragging","offset","setOffset","presetTxt","setPreset","scale","setScale","localStorage","getItem","handleMouseDown","clientX","clientY","handleMouseMove","handleMouseUp","_keyboardRef$current","current","setInput","CategoryModal","_jsx","Modal","isOpen","toggle","children","_jsxs","Form","onSubmit","ModalHeader","ModalBody","Container","Row","FormGroup","Label","Input","onChange","defaultChecked","ModalFooter","className","onClick","_Fragment","style","overflowY","ref","zIndex","borderTopLeftRadius","borderBottomLeftRadius","title","initCategory","color","scrollTo","document","body","scrollHeight","disabled","defaultValue","htmlFor","find","ite","_ref5","save","initTax","amount","display","tID","saveTax","top","overflow","touchAction","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","left","cursor","width","resize","transform","transformOrigin","onMouseDown","onTouchStart","background","padding","textAlign","borderRadius","Keyboard","onKeyPress","prev","r","layout","default","shift","justifyContent","clearInput","border","Math","max","placeContent","round","min"],"sourceRoot":""}