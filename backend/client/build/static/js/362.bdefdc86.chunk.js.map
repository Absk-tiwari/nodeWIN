{"version":3,"file":"static/js/362.bdefdc86.chunk.js","mappings":"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","sources":["components/layouts/Navbar.js","components/layouts/FullLayout.js","helpers/utils.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useLocation, useNavigate, useParams} from 'react-router-dom';\r\nimport profile from \"../../asset/images/profile.png\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSearch } from '../../contexts/SearchContext';\r\nimport { FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Form, Row } from 'reactstrap';\r\nimport { capitalFirst, dataURLtoFile } from '../../helpers/utils';\r\nimport toast from 'react-hot-toast';\r\nimport html2canvas from 'html2canvas';\r\nimport { commonApiSlice, useGetNotificationsQuery } from '../../features/centerSlice';\r\n\r\nfunction Navbar() {\r\n    const params = useParams();\r\n    const {data} = useGetNotificationsQuery();\r\n\r\n    const removeNotification = e => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        const id = e.target.dataset.id\r\n        axios.get(`config/notification/delete/${id}`).then(({data}) => {\r\n            console.log(data);\r\n            if(data.status) {\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getNotifications', undefined, cache => {\r\n                        cache['notifications'] = cache.notifications.filter( item => item.id !== parseInt(id) )\r\n                    })\r\n                )\r\n\r\n            }\r\n        })\r\n    }\r\n    const clearNotification = e => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        axios.get('config/clear-notifications', {\r\n            headers: {\r\n                \"Content-Type\":'application/json',\r\n                'pos-token' : localStorage.getItem('pos-token')\r\n            }\r\n        }).then(({data}) => {\r\n            if(data.status) {\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getNotifications', undefined , cache => {\r\n                        cache['notifications'] = [];\r\n                    })\r\n                )\r\n            }\r\n        })\r\n    }\r\n    const [notifications, setNotifications] = useState(data?.notifications??[])\r\n    useEffect(()=> {\r\n        setNotifications(data?.notifications??[])\r\n    },[data])\r\n    const modalBody = useRef(null);\r\n    const location = useLocation();\r\n    const { setSearchQuery, sessions, setSession, activeSession, setActiveSession, displayImage, handleImageDisplay  } = useSearch();\r\n    const printReceipt = async () => {\r\n        const elem = modalBody.current;\r\n        if(!elem) return toast.error(`Sorry can't go further...`);\r\n        try {\r\n        const canvas = await html2canvas(elem);\r\n            const image = canvas.toDataURL(\"image/png\");\r\n            console.log(image)\r\n            window.electronAPI?.printContent(image);\r\n        } catch (error) {\r\n            console.error(\"Error capturing image:\", error);\r\n        }\r\n    }\r\n    const [appModal , setAppModal ] = useState(false);\r\n    const notHome = location.pathname !== '/dashboard';\r\n    const { cartProducts, split:splitStat, currency, appKey } = useSelector( state => state.auth );\r\n    const [key,setKey] = useState(appKey)\r\n    const [ open, setModal ] = useState(false); \r\n    const [ price, setPrice] = useState('');\r\n    const [ orderModal, toggleOrderModal ] = useState(false);\r\n    const [ total, setTotal ] = useState(0);\r\n    const [ sessionID, setSessionID ] = useState(1);\r\n    const [ paymentMethod, setPaymentMethod ]= useState(0);\r\n    const [ cashierEmail, setCashierEmail ] = useState('');\r\n    const [ orderProducts, setOrderProducts] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const toggleModal = () => setModal(!open);\r\n\r\n    const updateProducts = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            if(!appKey) {\r\n                return setAppModal(!appModal)\r\n            }\r\n            dispatch({ type: \"SET_APP_KEY\", payload: appKey })\r\n            dispatch({ type:\"LOADING\" });\r\n\r\n            const {data} = await axios.get(`https://pos.dftech.in/sync-products/${appKey}`);\r\n            if(data.status) {\r\n                toast.success(data.message);\r\n                let fd = new FormData();\r\n                const midFile= dataURLtoFile(`data:application/json;base64,`+data.file, 'client.json');\r\n                fd.append('file', midFile);\r\n\r\n                const {data:resp} = await axios.post('products/sync', fd, {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        \"Content-Type\" : \"multipart/form-data\",\r\n                        'pos-token' : localStorage.getItem('pos-token')\r\n                    }\r\n                });\r\n    \r\n                if(resp.status) {\r\n                    toast.success(\"Importing completed\");\r\n                    setTimeout(()=> window.location.reload(), 2400);\r\n                }\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error.message);\r\n            toast.error(\"Couln't fetch products right now!\")\r\n        }\r\n        dispatch({ type:\"STOP_LOADING\" });\r\n    }\r\n\r\n    const split = () => {\r\n        let btn = document.querySelector('.split-btn')\r\n        dispatch({\r\n            type: 'SPLIT',\r\n            payload: btn.classList.contains('btn-outline-success')\r\n        })\r\n    }\r\n\r\n    const handleSession = () => {\r\n        localStorage.setItem('cartSessions', JSON.stringify([...sessions, sessions[sessions.length-1] + 1]) );\r\n        setSession([...sessions, sessions[sessions.length-1] + 1])\r\n    }\r\n\r\n    const search = e => setSearchQuery(e.target.value)\r\n \r\n    const handleQuickProduct = e => {\r\n        e.preventDefault();\r\n        if(price) {\r\n            dispatch({ type: \"CHOOSEN_PRODUCT\", payload: {...cartProducts,[activeSession]: [...cartProducts[activeSession]??[], { id:'quick', name:'Others', price, stock:1, other:true, weight:null }] } });\r\n        }\r\n        setPrice(()=> null);\r\n    }\r\n\r\n    const lastOrder = e => {\r\n        dispatch({ type:`LOADING` });\r\n        toggleOrderModal(!orderModal)\r\n        axios.get(`orders/last-order`).then(({data})=> { \r\n            const {products, session} = data;\r\n            const sessionData = JSON.parse(session.data);\r\n            setTotal(data.order.amount);\r\n            setPaymentMethod(data.order.payment_mode);\r\n            setSessionID(data.order.session_id)\r\n            setCashierEmail(data.cashier?.email)\r\n            // toggleModal(); \r\n            let orderedProducts = Object.values(products).map( pr => ({...pr, stock:sessionData?.quantity[pr.id]}) );\r\n            if((sessionData?.products??[]).indexOf('quick') !== -1) {\r\n                let overallExcept = orderedProducts.reduce( (pre,a) => pre + parseFloat(a.price * sessionData?.quantity[a.id]), 0);\r\n                let otherPrice = data.order.amount - overallExcept;\r\n                orderedProducts = [...orderedProducts, {name:\"Others\", price: otherPrice, id:`quick`, stock: sessionData?.quantity['quick']}];\r\n            }\r\n            setOrderProducts(orderedProducts);\r\n        }).catch()\r\n        .finally( () => dispatch({ type:`STOP_LOADING` })) \r\n    }\r\n\r\n    useEffect(()=> {\r\n        setActiveSession(sessions[0]);\r\n        return ()=> setActiveSession(sessions[0]);\r\n    },[ sessions ])\r\n\r\n    if(params && params.type==='customer') return null;\r\n    \r\n    return (\r\n    <>\r\n        <nav className=\"navbar default-layout col-lg-12 col-12 p-0 d-flex align-items-top flex-row no-print\" style={{zIndex:999}}>\r\n            { notHome && (<>\r\n                <div className=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-start\">\r\n                    <div className=\"me-3\">\r\n                        <Link to={`/dashboard`} className=\"nav-link\">\r\n                            <i className=\"mdi mdi-home menu-icon fs-3\" />\r\n                        </Link>\r\n                    </div>\r\n                <div>\r\n            </div>\r\n        </div>\r\n        </>)}\r\n                \r\n        <div className=\"navbar-menu-wrapper d-flex align-items-top\" style={{width:!notHome?'100%':''}}>\r\n            {notHome &&\r\n            <li className=\"navbar-nav nav-item\">\r\n                <button className=\"btn btn-sm\" onClick={()=>navigate(-1)}>\r\n                    <i style={{fontSize:'1.8rem'}} className=\"mdi mdi-arrow-left\"/>\r\n                </button>\r\n            </li>}\r\n\r\n            {['/pos','/pos/','/payment'].includes(location.pathname) && \r\n                (<>\r\n                <li className=\"navbar-nav nav-item ms-3\" onClick={handleSession} >\r\n                    <div className=\"box\"> + </div>\r\n                </li>\r\n                <ul className=\"navbar-nav ms-1 sessions\">\r\n                    { sessions.map( id => (<li className=\"nav-item fw-semibold ms-1\" key={id} onClick={()=>setActiveSession(id)}>\r\n                        <div className={`box ${activeSession===id? 'active':''}`}> {id} </div>\r\n                    </li>)) }\r\n                </ul>\r\n                <button className={`btn ${splitStat?'btn-success':'btn-outline-success'} btn-sm ms-2 split-btn text-dark`} type=\"button\" onClick={split} title=\"Split products\"> \r\n                    Split Products \r\n                </button>\r\n                <button className=\"btn btn-outline-success btn-light btn-sm ms-2 quick-btn text-dark\" type=\"button\" onClick={lastOrder} title=\"Quick add product to cart\">\r\n                    Print Last Receipt\r\n                </button>\r\n                <button className=\"btn btn-outline-success btn-light btn-sm ms-2 quick-btn text-dark\" type=\"button\" onClick={toggleModal} title=\"Quick add product to cart\" >\r\n                    Quick Add\r\n                </button>\r\n                <Modal isOpen={open} className={'modal-sm'} toggle={toggleModal}>\r\n                    <Form onSubmit={handleQuickProduct}>\r\n                        <ModalHeader>\r\n                            Quick Add \r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                            <Row>\r\n                                <FormGroup className='w-100'>\r\n                                    <Label> Price </Label>\r\n                                    <Input\r\n                                        type='text'\r\n                                        pattern=\"^\\d+(\\.\\d+)?$\"\r\n                                        title=\"price should be in numbers\"\r\n                                        placeholder={localStorage.getItem('currency')}\r\n                                        onChange={ e => setPrice(e.target.value) }\r\n                                    />\r\n                                </FormGroup>\r\n                            </Row>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button className={'btn btn-light btn-rounded'} onClick={toggleModal}> Close </button>\r\n                            <button className={'btn btn-success btn-rounded'} > Submit </button>\r\n                        </ModalFooter>\r\n                    </Form>\r\n                </Modal>\r\n                </>)\r\n            }\r\n\r\n            {location.pathname === '/products' && (\r\n                <Link to={'/product/create'} className={`btn-success btn btn-md btn-rounded`}> New </Link>\r\n            )}\r\n\r\n            <ul className=\"navbar-nav ms-auto\">\r\n\r\n                <li className=\"nav-item d-flex align-items-center\">\r\n                    {location.pathname==='/pos' && <button className='btn btn-rounded btn-warning fs-4' onClick={()=>handleImageDisplay(!displayImage)}> \r\n                        {displayImage?'Hide':\"Show\"} Images \r\n                        <div className='d-none'>\r\n                            <input type={`checkbox`} id={`btn1901_m`} name={'status'} defaultChecked={true} className='status'/>\r\n                            <label htmlFor={`btn1901_m`}/>\r\n                            <div className='plate'/>\r\n                        </div>\r\n                    </button>}\r\n                    <button className=\"btn\" onClick={()=>window.location.reload()} title={'Refresh'}>\r\n                        <i style={{fontSize:'2rem'}} className=\"mdi mdi-refresh\" />\r\n                    </button>\r\n                </li>\r\n                {location.pathname==='/pos' && (<>\r\n                    <li className=\"nav-item\">\r\n                        <form className=\"search-form\" action=\"#\">\r\n                            <i className=\"icon-search\" />\r\n                            <input type=\"search\" className=\"form-control\" placeholder=\"Search Here\" title=\"Search here\" onInput={search} />\r\n                        </form>\r\n                    </li>\r\n                </>)}\r\n\r\n                <li className=\"nav-item dropdown\">\r\n                    <Link className=\"nav-link count-indicator\" id=\"notificationDropdown\" href=\"#\" data-bs-toggle=\"dropdown\">\r\n                        <i className=\"mdi mdi-bell\"/>\r\n                        <span className=\"count\"/>\r\n                    </Link>\r\n                    <div className=\"dropdown-menu dropdown-menu-right navbar-dropdown preview-list pb-0\" aria-labelledby=\"notificationDropdown\" style={{ borderRadius:8 }}>\r\n                        <Link className={`dropdown-item py-3 border-bottom`}>\r\n                            <p className={`mb-0 fw-medium float-start`}> You have {notifications.length} notifications </p>\r\n                            <span className={`badge badge-pill badge-primary float-end`} onClick={clearNotification}> Clear all </span>\r\n                        </Link>\r\n                        {notifications.map( row => <Link className=\"dropdown-item preview-item py-2 position-relative\" key={row.id} data-id={row.id}>\r\n                            <div class=\"preview-thumbnail\"><i class=\"mdi mdi-alert m-auto text-primary\" /></div>\r\n                            <div class=\"preview-item-content\">\r\n                                <h5 class=\"preview-subject fw-normal text-dark mb-1\">{row.content}</h5>\r\n                                <p class=\"fw-light small-text mb-0\" />\r\n                            </div>\r\n                            <span onClick={removeNotification} data-id={row.id} class=\"fa fa-close align-items-center position-absolute align-self-center\" style={{right:20}} />\r\n                        </Link>)}\r\n                    </div>\r\n                </li>\r\n\r\n                <li className=\"nav-item dropdown d-none d-lg-block user-dropdown\">\r\n                    <Link className=\"nav-link\" id=\"UserDropdown\" to={\"#\"} data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img className={\"img-xs rounded-circle\"} src={profile} alt=\"\" /> \r\n                    </Link>\r\n                    <div className=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\" style={{ borderRadius:8 }}>\r\n                        <div className=\"dropdown-header text-center\">\r\n                            <img className={\"img-md rounded-circle\"} src={profile} alt={''} />\r\n                            <p className=\"mb-1 mt-3 fw-semibold\"> default </p>\r\n                            <p className=\"fw-light text-muted mb-0\"> default </p>\r\n                        </div>\r\n                        <Link className=\"dropdown-item\">\r\n                            <i className=\"dropdown-item-icon mdi mdi-account-outline text-primary me-2\"/> \r\n                            My Profile <span className=\"badge badge-pill badge-danger\"> 1 </span>\r\n                        </Link>\r\n                        <Link className=\"dropdown-item\" to={\"#\"}>\r\n                            <i className=\"dropdown-item-icon mdi mdi-cogs text-primary me-2\"/> \r\n                            Settings \r\n                        </Link>\r\n                        <Link to={`#`} className=\"dropdown-item cache-clear\" onClick={updateProducts}>\r\n                            <i className=\"dropdown-item-icon mdi mdi-refresh text-primary me-2\" /> \r\n                            Sync Products \r\n                        </Link>\r\n                        <Link className=\"dropdown-item\" to={\"#\"}> \r\n                            <i className=\"dropdown-item-icon mdi mdi-power text-primary me-2\"/> \r\n                            Sign Out\r\n                        </Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-bs-toggle=\"offcanvas\" >\r\n                <span className=\"mdi mdi-menu\" />\r\n            </button>\r\n        </div>\r\n        </nav>\r\n        <Modal isOpen={orderModal}>\r\n            <ModalHeader>\r\n                <p style={{fontSize:'1.5rem'}}>Previous Order Details</p>\r\n            </ModalHeader>\r\n            <ModalBody ref={modalBody}>\r\n                <div className=\"col-lg-12\" id=\"receipt\" >\r\n                    <div className=\"container\" style={{backgroundColor:'white',paddingBottom:'10px',borderRadius:'15px'}} >\r\n                        <div className=\"row\" style={{display:'flex'}}>\r\n                            <div className=\"d-grid text-center w-100\" style={{justifyContent:'center'}}>\r\n                                <p> Served by <b>{cashierEmail}</b> </p>\r\n                                Session <h2 className=\"sessionID\">#{sessionID}</h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"receipt\" style={{width:'90%',background:'#fff',marginLeft:'5%'}}>\r\n                                {orderProducts.map( (order,i) => <div key={i} className='row mt-2 chosen-product' >\r\n                                        <div className='d-flex w-100'>\r\n                                            <b>{order.name}</b>\r\n                                            <strong className='price'> Qty: {order.stock}</strong>\r\n                                        </div>\r\n                                        <div className='d-flex'>\r\n                                            <p className='ms-3 mt-1' style={{fontFamily:'cursive'}}>\r\n                                                { currency +' '+ order.price }\r\n                                                { order.id !=='quick' && '/ Units'}  \r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"\">\r\n                                    <div className=\"row d-flex mt-3\" style={{justifyContent:'space-between'}}>\r\n                                        <div>\r\n                                            <h2>TOTAL </h2>\r\n                                            <p></p>\r\n                                        </div>\r\n                                        <div>\r\n                                            <h2> {currency+ ' ' + parseFloat(total).toFixed(2) } </h2>\r\n                                            <p></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row d-flex mt-0\" style={{justifyContent:'space-between'}}>\r\n                                        <div>\r\n                                            <small> { capitalFirst(paymentMethod) } </small>\r\n                                        </div>\r\n                                        <div>\r\n                                            <small> {currency+ '' + parseFloat(total).toFixed(2) } </small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button className='btn btn-light btn-rounded' onClick={()=> toggleOrderModal(!orderModal)}> Close </button>\r\n                <button className='btn btn-primary btn-rounded' onClick={printReceipt}>Print</button>\r\n            </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal isOpen={appModal} size='sm'>\r\n                <Form onSubmit={updateProducts}>\r\n                    <ModalHeader>\r\n                        Enter application key \r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Input onChange={e=> setKey(e.target.value)} defaultValue={key} type='text' name='appKey'/>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button className='btn btn-light btn-sm btn-rounded' type='button' onClick={()=> setAppModal(!appModal)}>Cancel</button>\r\n                        <button className='btn btn-success btn-sm btn-rounded' > Submit </button>\r\n                    </ModalFooter>\r\n                </Form>\r\n            </Modal>\r\n\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Navbar","import { Outlet, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\"; \r\nimport { useEffect, useState } from \"react\";\r\nimport Loader from \"react-js-loader\";\r\nimport { Toaster } from \"react-hot-toast\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst FullLayout = () => { \r\n\r\n    let navigate = useNavigate();\r\n    let location = useLocation();\r\n    const { userToken } = useSelector(state=>state.auth);\r\n    let isLoading = useSelector( state => state.auth.loading);\r\n    let isLoggedIn = userToken;\r\n    const [ loading, setLoading] = useState(isLoading);\r\n\r\n    useEffect(()=> {  \r\n        setLoading(isLoading)\r\n        return ()=>null\r\n    },[userToken , isLoading, navigate ])\r\n\r\n    return (\r\n    <>\r\n        <Toaster/>\t \r\n        <div className={`${loading?'layout-item':\"layout-item d-none\"}`}> \r\n            <Loader type=\"spinner-default\" bgColor={'gray'} color={'white'} size={70}/>\r\n        </div>\r\n        { isLoggedIn && <Navbar/> }\r\n        <div className={`container1 page-body-wrapper w-100 ${location.pathname==='/dashboard'? 'home':''}  `} >\r\n            <div className={`${['/pos','/pos/customer','/pos/'].includes(location.pathname)? 'pos-panel':'main-panel'} w-100 ${location.pathname==='/login'?'login':''} ${location.pathname.indexOf('payment')!==-1 ? 'payment-screen':''}`} >\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default FullLayout;","import $ from 'jquery'\r\nimport toast from 'react-hot-toast';\r\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport const validate = (fields,exceptions=[]) => {\r\n    let result={}\r\n    var shouldGo=true;\r\n    if(exceptions.length)\r\n    {\r\n        exceptions.forEach( item => {\r\n            delete fields[item]\r\n        })\r\n    }\r\n    Object.keys(fields).forEach(f =>\r\n    {\r\n        let shout = '';\r\n        let invalid = false;\r\n        let tInputs = [$(`input[name=${f}]`), $(`select[name=${f}]`), $(`textarea[name=${f}]`), $(`.${f}`)]\r\n        if(fields[f]==null || fields[f].length===0)\r\n        {\r\n            result[f]=`Required!`;\r\n            shouldGo=false;\r\n            invalid = true;\r\n        }\r\n        tInputs.forEach( input => {\r\n\r\n            let minLength = $(input).attr('type')!== 'date' ? $(input).attr('min'): 0;\r\n            let maxLength = $(input).attr('max');\r\n            let type = $(input).attr('cast');\r\n            let isDate = $(input).attr('type')==='date' && $(input).attr('req');\r\n            if($(input).val()?.length && (minLength || maxLength))\r\n            {\r\n                if($(input).val().length < parseInt(minLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should be of at least ${minLength} characters!`\r\n                    result[f] = shout;\r\n                }\r\n                if($(input).val().length > parseInt(maxLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should not be greater than ${maxLength} characters!`;\r\n                    result[f] = shout;\r\n                }\r\n            }\r\n            if(type)\r\n            { \r\n                if(input.val() && type === 'num')\r\n                {\r\n                    if(parseInt($(input).val().length )!== $(input).val().length) {\r\n                        shout= `Should be in numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n                if( $(input).val() && type=== 'str' )\r\n                {\r\n                    if( /^([^0-9]*)$/.test($(input).val())===false )\r\n                    {\r\n                        shout= `Should not contain numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n            }\r\n            if(isDate)\r\n            {\r\n                if(!isValidDate($(input).val(),18))\r\n                {\r\n                    invalid = true\r\n                    shout = 'Invalid date';\r\n                    result[f] = shout;\r\n                } else {\r\n                    shout = '';\r\n                }\r\n                // return\r\n            }\r\n            if(shout)   \r\n            {\r\n                if($(input).parents('.col-md-12, .col').find('small.text-danger').length)\r\n                {\r\n                    $(input).parents('.col-md-12, .col').find('small.text-danger').text(shout)\r\n                } else {\r\n                    $(input).parents('.col-md-12, .col').append('<small class=\"text-danger\">'+shout+'</small>')\r\n                }\r\n            } else {\r\n                $(input).parents('.col-md-12, .col').find('small.text-danger').remove()\r\n            }\r\n            if(invalid){\r\n                shouldGo = false;\r\n                $(input).addClass('placeholder-error')\r\n                .attr('placeholder',result[f]).css('border','1px solid red');\r\n            } else {\r\n                $(input).removeClass('placeholder-error').attr('placeholder',result[f]).css('border','');\r\n            }\r\n        })\r\n    })\r\n    return {result, shouldGo};\r\n}\r\n\r\nexport const getCurrentDate = (delimiter='-') => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year+delimiter+month+delimiter+day}`;\r\n}\r\n\r\nexport const formatDate = (date=null,format='Ymd') => {\r\n    const dateObj = date?new Date(date): new Date();\r\n    const year = dateObj.getFullYear();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(dateObj.getDate()).padStart(2, '0');\r\n    if(format[0]==='Y')\r\n    {\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n    if(format[0]==='d')\r\n    {\r\n        return `${day}-${month}-${year}`;\r\n    }\r\n}\r\n\r\nexport const getCurrentDay = () => {\r\n    return daysOfWeek[(new Date()).getDay()];\r\n}\r\n\r\nexport const getCurrentTime = () => {\r\n    const currentDate = new Date();\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nexport const toBase64 = blob => {\r\n\r\n}\r\n\r\nexport const dataURLtoFile = (dataurl, filename) => {\r\n    var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[arr.length - 1]), \r\n        n = bstr.length, \r\n        u8arr = new Uint8Array(n);\r\n    while(n--){\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\nexport const isValidDate = ( date, range ) => {\r\n    let today = getCurrentDate();\r\n    let year = today.split('-')[0];\r\n    let intended = new Date(today.replace(year, (parseInt(year)-range)));\r\n    return intended > new Date(date)\r\n}\r\n\r\nexport const capitalFirst = (string) => {\r\n    if (!string) return string; // Handle empty or null strings\r\n    if(string.includes(' ')){\r\n        let str= '';\r\n        string.split(' ').forEach( part => {\r\n           str+=' '+ part.charAt(0).toUpperCase() + part.slice(1); \r\n        })\r\n        return str;\r\n    }\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const getDocumentName = id => {\r\n\r\n    const documents = {\r\n        1 : 'VISIT PHOTO',\r\n        2 : 'AADHAAR CARD',\r\n        3 : 'VOTER CARD',\r\n        4 : 'GROUP PHOTO',\r\n        5 : 'CGT_FIRST',\r\n        6 : 'CGT_SECOND',\r\n        7 : 'CIBIL',\r\n        8 : 'SANCTION LETTER',\r\n        9 : 'KYC',\r\n        10 : 'BANK PASSBOOK',\r\n        11 : 'RELATION PROOF DOCUMENT',\r\n    }\r\n    return documents[id];\r\n    \r\n}\r\n\r\nexport const Warning = msg => {\r\n    return toast(msg,\r\n        {\r\n          icon: '⚠️',\r\n          style: {\r\n            borderRadius: '10px',\r\n            background: '#333',\r\n            color: '#fff',\r\n          },\r\n        }\r\n    );\r\n}\r\n\r\nexport const hexToRgb = (hex) => {\r\n    // Remove the '#' if present\r\n\r\n    if(!hex || typeof hex == 'object'){\r\n        return hex\r\n    }\r\n\r\n    hex = hex.replace(/^#/, '');\r\n    // Convert shorthand hex (e.g., #03F) to full form (e.g., #0033FF)\r\n    if (hex.length === 3) {\r\n        hex = hex.split('').map(h => h + h).join('');\r\n    }\r\n    // Convert hex to RGB\r\n    const r = parseInt(hex.slice(0, 2), 16);\r\n    const g = parseInt(hex.slice(2, 4), 16);\r\n    const b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport const isColorDark = (hexColor) => {\r\n    // Convert hex color to RGB\r\n    let output = hexToRgb(hexColor)\r\n    if(output === undefined) return hexColor\r\n    const { r, g, b } = output\r\n\r\n    // Calculate the luminance\r\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n\r\n    // Return true if the color is dark, else false\r\n    return luminance < 128;\r\n}\r\n\r\nexport function chunk(array, size, uncategorized = false) {\r\n    const result = [];\r\n    if(!array) return []\r\n    if(uncategorized) array.unshift({})\r\n    for (let i = 0; i < array.length; i += size) {\r\n        // Use slice to get a chunk of the specified size and push it to the result array\r\n        result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const wrapText = (text, maxLength) => {\r\n\r\n    if (text?.length > maxLength) {\r\n        let truncatedText = text.substring(0, maxLength) + '...';\r\n        return truncatedText;\r\n    }\r\n    return text\r\n}\r\n\r\nexport const formatDatefromTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    const seconds = String(date.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n  "],"names":["_data$notifications","params","useParams","data","useGetNotificationsQuery","removeNotification","e","stopPropagation","preventDefault","id","target","dataset","axios","get","concat","then","_ref","console","log","status","dispatch","commonApiSlice","util","updateQueryData","undefined","cache","notifications","filter","item","parseInt","setNotifications","useState","useEffect","_data$notifications2","modalBody","useRef","location","useLocation","setSearchQuery","sessions","setSession","activeSession","setActiveSession","displayImage","handleImageDisplay","useSearch","appModal","setAppModal","notHome","pathname","cartProducts","split","splitStat","currency","appKey","useSelector","state","auth","key","setKey","open","setModal","price","setPrice","orderModal","toggleOrderModal","total","setTotal","sessionID","setSessionID","paymentMethod","setPaymentMethod","cashierEmail","setCashierEmail","orderProducts","setOrderProducts","useDispatch","navigate","useNavigate","toggleModal","updateProducts","async","type","payload","toast","success","message","fd","FormData","midFile","dataURLtoFile","file","append","resp","post","headers","localStorage","getItem","setTimeout","window","reload","error","_jsxs","_Fragment","children","className","style","zIndex","_jsx","Link","to","width","onClick","fontSize","includes","handleSession","setItem","JSON","stringify","length","map","btn","document","querySelector","classList","contains","title","_ref3","_data$cashier","_sessionData$products","products","session","sessionData","parse","order","amount","payment_mode","session_id","cashier","email","orderedProducts","Object","values","pr","_objectSpread","stock","quantity","indexOf","overallExcept","reduce","pre","a","parseFloat","otherPrice","name","catch","finally","Modal","isOpen","toggle","Form","onSubmit","_cartProducts$activeS","other","weight","ModalHeader","ModalBody","Row","FormGroup","Label","Input","pattern","placeholder","onChange","value","ModalFooter","defaultChecked","htmlFor","action","onInput","href","borderRadius","_ref2","row","class","content","right","src","profile","alt","ref","backgroundColor","paddingBottom","display","justifyContent","background","marginLeft","i","fontFamily","toFixed","capitalFirst","elem","current","_window$electronAPI","image","html2canvas","toDataURL","electronAPI","printContent","size","defaultValue","FullLayout","userToken","isLoading","loading","isLoggedIn","setLoading","Toaster","Loader","bgColor","color","Navbar","Outlet","dataurl","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","string","str","forEach","part","charAt","toUpperCase","slice","Warning","msg","icon","hexToRgb","hex","replace","h","join","r","g","b","isColorDark","hexColor","output","chunk","array","result","arguments","unshift","push","wrapText","text","maxLength","substring","formatDatefromTimestamp","timestamp","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getSeconds"],"sourceRoot":""}