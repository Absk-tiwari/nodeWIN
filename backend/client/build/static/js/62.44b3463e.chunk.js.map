{"version":3,"file":"static/js/62.44b3463e.chunk.js","mappings":"6WA4cA,QA/bA,WAA0B,IAADA,EACrB,MAAM,SAAEC,EAAQ,YAAEC,IAAeC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,QACpDC,EAAaC,IAAmBC,EAAAA,EAAAA,UAASC,IACzCC,EAAaC,IAAiBH,EAAAA,EAAAA,UAAS,KACzC,QAAEI,IAAYC,EAAAA,EAAAA,OACZD,QAASE,IAAcC,EAAAA,EAAAA,OACvBH,QAASI,IAAeC,EAAAA,EAAAA,OACxBC,EAAQC,IAAYX,EAAAA,EAAAA,UAAS,KAC7BY,EAASC,IAAeb,EAAAA,EAAAA,WAAS,IACjCc,EAAYC,IAAcf,EAAAA,EAAAA,UAAS,WACrCgB,EAAQ,CAACC,aAAc,IACvBC,GAAWC,EAAAA,EAAAA,OACVC,EAAKC,IAAYrB,EAAAA,EAAAA,UAAS,MAC3BsB,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAazB,EAAAA,EAAAA,UAAS,CAAC0B,KAAK,GAAGC,MAAM,GAAGC,YAAY,GAAGC,QAAQ,GAAGC,IAAI,GAAGC,MAAM,OAExFC,GAAcC,EAAAA,EAAAA,QAAO,MAyCrBC,EAASC,GAAKV,GAASW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGZ,GAAM,IAAE,CAACW,EAAEE,OAAOX,MAAOS,EAAEE,OAAOC,UAyEpEC,EAAAA,EAAAA,YAAU,KAdNC,EAAAA,EAAMC,IAAI,YAAYC,MAAKC,IAAa,IAAZ,KAACC,GAAKD,EAC3BC,EAAKC,QACJ1C,EAAcyC,EAAK1C,WACvB,IAIJsC,EAAAA,EAAMC,IAAI,OAAOC,MAAKI,IAAa,IAAZ,KAACF,GAAKE,EACtBF,EAAKC,QACJlC,EAASiC,EAAKlC,MAClB,IAOG,IAAK,OACd,IAMF,MAAOqC,EAAUC,IAAehD,EAAAA,EAAAA,UAAS,CAAEiD,EAAGC,OAAOC,OAAOC,WAAa,EAAGC,EAAGH,OAAOC,OAAOG,YAAc,KACpGC,EAAUC,IAAexD,EAAAA,EAAAA,WAAS,IAClCyD,EAAQC,IAAa1D,EAAAA,EAAAA,UAAS,CAAEiD,EAAG,EAAGI,EAAG,IAE1CM,EAAmBxB,IACrBqB,GAAY,GACZE,EAAU,CACRT,EAAGd,EAAEyB,QAAUb,EAASE,EACxBI,EAAGlB,EAAE0B,QAAUd,EAASM,GACxB,EAGAS,EAAmB3B,IAChBoB,GACLP,EAAY,CACRC,EAAGd,EAAEyB,QAAUH,EAAOR,EACtBI,EAAGlB,EAAE0B,QAAUJ,EAAOJ,GACxB,EAEAU,EAAgBA,IAAMP,GAAY,IAMjCQ,EAAWC,IAAajE,EAAAA,EAAAA,UAAS,KACxCuC,EAAAA,EAAAA,YAAU,KAAO,IAAD2B,EACO,QAAnBA,EAAAlC,EAAYmC,eAAO,IAAAD,GAAnBA,EAAqBE,SAASJ,EAAU,GACzC,CAACA,EAAWpD,IAEf,MAAOyD,EAAOC,IAAYtE,EAAAA,EAAAA,UAAgD,QAAxCR,EAAC+E,aAAaC,QAAQ,0BAAkB,IAAAhF,EAAAA,EAAE,IAUrEqC,EAAS4C,IAAczE,EAAAA,EAAAA,UAAS,IAyBvC,OAvBAuC,EAAAA,EAAAA,YAAU,KAEN,IAAImC,EAAcC,KAAKC,MACnBC,EAAc,GAClB,MAAMC,EAAiBC,IACnB,MAAM,IAAEC,GAAQD,EACIJ,KAAKC,MACMF,EAChB,GACXO,QAAQC,IAAI,uBAEA,UAARF,GACAP,EAAWI,GAAaA,EAAY,IAEjB,IAAfG,EAAIG,SACJN,GAAeG,EAG3B,EAGJ,OADA9B,OAAOkC,iBAAiB,UAAWN,GAC5B,IAAM5B,OAAOmC,oBAAoB,UAAWP,EAAc,GAClE,CAACjD,KAEAyD,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBF,UAC5BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,UAChBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCF,UAC/CF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,OAAMF,SAAA,EACjBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,UACxBC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAC,sBAEzBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,UACtBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAMC,GAAG,QAAOH,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,UAClBF,EAAAA,EAAAA,MAAA,QAAMM,SA9JnBC,UAEf,GADA1D,EAAE2D,kBACEtE,EAAOE,OAASF,EAAOG,MACvB,OAAOoE,EAAAA,EAAAA,IAAQ,4BAEnB,IAAIvE,EAAOK,UAAYL,EAAOI,YAC1B,OAAOmE,EAAAA,EAAAA,IAAQ,gCAEnB,GAAGvE,EAAOI,cAAgBJ,EAAOK,QAAS,CAEtC,IAA8C,IADpC3B,EAAW8F,MAAKC,GAAOA,EAAIN,KAAOO,SAAS1E,EAAOI,eACpDF,KAAKyE,cAAcC,QAAQ,OAC/B,OAAOL,EAAAA,EAAAA,IAAQ,uBAEvB,CACAlF,EAAW,IACX,IAAIwF,EAAK,IAAIC,SACb,IAAK,MAAMC,KAAS/E,EAChB6E,EAAGG,OAAOD,EAAO/E,EAAO+E,IAE5BrF,EAAS,CAACuF,KAAK,YAEf,IACI,MAAM,KAAC7D,SAAcJ,EAAAA,EAAMkE,KAAK,mBAAoBL,EAAI,CACpDM,QAAQ,CACJ,OAAgB,mBAChB,eAAiB,sBACjB,YAAiBpC,aAAaC,QAAQ,gBAG3C5B,EAAKC,QACJ+D,EAAAA,GAAMC,QAAQjE,EAAKkE,SACnB5F,EACI6F,EAAAA,GAAeC,KAAKC,gBAAgB,sBAAkBC,GAAWC,IAC1DA,EAAgB,UACfA,EAAgB,SAAEC,QAAQxE,EAAK3C,QACnC,KAGRiB,EACI6F,EAAAA,GAAeC,KAAKC,gBAAgB,mBAAeC,GAAWC,IACvDA,EAAgB,UACfA,EAAgB,SAAEC,QAAQxE,EAAK3C,QACnC,KAGRiB,EAAS,CAACuF,KAAK,iBACfnF,EAAS,cAETsF,EAAAA,GAAMS,MAAMzE,EAAKkE,QAEzB,CAAE,MAAOO,GACLpC,QAAQC,IAAImC,EAChB,CACAnG,EAAS,CAACuF,KAAK,gBAAgB,EAyGwBjB,SAAA,EACvBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,YAAWF,SAAA,EACtBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,MAAM4B,MAAO,CAACC,MAAM,QAAQ/B,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQF,UACnBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,aAAYF,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,eAAe9B,UAAU,OAAMF,SAAC,cAAiB,KAACC,EAAAA,EAAAA,KAAA,UACjEA,EAAAA,EAAAA,KAAA,YAAU/D,KAAK,OACX+F,SAAUvF,EACVwF,QAAUvF,IACNtB,EAAW,QACXoD,EAAUzC,EAAOE,KAAK,EAE1BiE,GAAG,eACHD,UAAU,eACVpD,MAAOd,EAAOE,KACd4F,MAAOtG,EACPlB,YAAY,sBAIxB2F,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,UAClBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,aAAYF,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,gBAAehC,UAC1BC,EAAAA,EAAAA,KAAA,OAAKkC,IAAK7H,EAAa8H,IAAI,GAAGlC,UAAU,iBAE5CD,EAAAA,EAAAA,KAAA,SAAO/D,KAAK,QAAQiE,GAAG,gBAAgB8B,SAhOxEtF,IAAM,IAAD0F,EAChBC,EAAQ,IAAIC,WAChBD,EAAOE,cAAc7F,EAAEE,OAAO4F,MAAM,IACpCH,EAAOI,OAAS,WACZnI,EAAe+H,EAAOK,OAC1B,EACA1G,GAASW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGZ,GAAM,IAAEO,MAAwB,QAAnB8F,EAAE1F,EAAEE,OAAO4F,MAAM,UAAE,IAAAJ,EAAAA,EAAE,OAAO,EA0NsDO,OAAO,UAAU3B,KAAK,OAAOf,UAAU,oBAIhHD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKF,UAEhBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,QAAOF,SAAA,EAClBF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAUF,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBF,SAAC,cAGzCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,UAClBF,EAAAA,EAAAA,MAAA,UAAQ5D,KAAK,cAAc+F,SAAUvF,EAAQwD,UAAU,eAAe4B,MAAOtG,EAAMwE,SAAA,EAC/EC,EAAAA,EAAAA,KAAA,UAAQnD,MAAM,GAAEkD,SAAC,aAChBtF,EAAWmI,KAAKC,IAAO7C,EAAAA,EAAAA,KAAA,UAAqBnD,MAAOgG,EAAI3C,GAAGH,SAAE8C,EAAI5G,MAA5B4G,EAAI3C,eAIrDL,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAUF,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,SAAC,iBAGvBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,UAClBC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAe,CACZ7G,KAAK,MACL8G,QAASA,IAAK3H,EAAW,IACzB4G,SAAUtF,IAAKV,GAASW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGZ,GAAM,IAAEM,IAAKK,EAAEG,QAAQ,EACpDmG,QAAS/H,EAAM2H,KAAKK,IAACtG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAASsG,GAAC,IAAEpG,MAAOoG,EAAEhH,KAAM,IAAIgH,EAAEC,OAAQC,MAAOF,EAAEhH,KAAK,IAAIgH,EAAEC,mBAI9FrD,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAUF,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBF,SAAC,WAGzCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,UAClBC,EAAAA,EAAAA,KAAA,SACIoD,QAAQ,mBACRpB,SAAUvF,EACV4G,MAAM,yBACNpH,KAAK,QACLgE,UAAU,eACV5F,YAAaL,EACb6H,MAAOtG,EACP0G,QAAUvF,IACNtB,EAAW,SACXoD,EAAUzC,EAAOG,MAAM,EAE3BW,MAAOd,EAAOG,cAK1B2D,EAAAA,EAAAA,MAAA,OAAKI,UAAU,WAAUF,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0BAAyBF,SAAC,aAGzCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,UAClBC,EAAAA,EAAAA,KAAA,SACI/D,KAAK,UACL+F,SAAUvF,EACVpC,YAAY,iBACZwH,MAAOtG,EACP0E,UAAU,eACVgC,QAAUvF,IACN8B,EAAUzC,EAAOK,SACjBhB,EAAW,UAAU,EAEzByB,MAAOd,EAAOK,wBAStC4D,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeF,UAC1BC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,8BAA6BF,SAAC,qBAK5DF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,4CAA4C4B,MAAO,CAACyB,OAAO,OAAOC,aAAa,UAAUxD,SAAA,EACpGC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OACfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQF,UACnBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aAGZC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAe4B,MAAO,CAAC0B,aAAa,UAAUxD,UACzDF,EAAAA,EAAAA,MAAA,QAAMK,GAAG,aAAaC,SAjTrCzD,IAEbA,EAAE2D,iBAEF,IAAIO,EAAK,IAAIC,SACb,IAAIlF,EAAK,OAAOwF,EAAAA,GAAMS,MAAM,6BAE5BhB,EAAGG,OAAO,OAAQpF,GAClBF,EAAS,CAACuF,KAAK,YAEfjE,EAAAA,EAAMkE,KAAK,mBAAoBL,EAAI,CAC/BM,QAAQ,CACJ,OAAgB,mBAChB,eAAiB,sBACjB,YAAapC,aAAaC,QAAQ,gBAEvC9B,MAAKuG,IAAa,IAAZ,KAACrG,GAAKqG,EACX,OAAGrG,EAAKC,QACJzC,IACAE,IACAE,IACAc,EAAS,aACFsF,EAAAA,GAAMC,QAAQjE,EAAKkE,UAEvBF,EAAAA,GAAMS,MAAMzE,EAAKkE,QAAQ,IACjCoC,OAAM,IAAKtC,EAAAA,GAAMS,MAAM,+DACzB8B,SAAQ,IAAKjI,EAAS,CAACuF,KAAK,kBAAiB,EAuRuBjB,SAAA,EACzCF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,oBAAoB4B,MAAO,CAAC8B,OAAO,iBAAiBnI,aAAa,OAAOsG,MAAM,QAAQxE,SAAS,YAAYyC,SAAA,EACtHF,EAAAA,EAAAA,MAAA,SAAOkC,QAAQ,aAAaF,MAAO,CAACC,MAAM,OAAOwB,OAAO,QAAQvD,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAASiC,IAAK0B,EAAQzB,IAAI,MACzCnC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAiBiC,IAAK2B,EAAK1B,IAAI,gBAElDnC,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,OAAO/E,KAAK,OAAOiE,GAAG,aAAaD,UAAU,SAAS0C,OAAO,oBAAoBX,SA1MjI,SAAiBtF,GACbA,EAAE2D,iBACFzE,EAASc,EAAEE,OAAO4F,MAAM,GAC5B,QAyMoCxC,EAAAA,EAAAA,KAAA,UAAQgB,KAAK,SAASf,UAAU,wCAAwC6D,UAAWnI,EAAIoE,SAAC,sCAWtH5E,IAAYlB,IAAe+F,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAsC4B,MAAO,CAACkC,OAAO,KAAMC,IAAI,IAAKjE,UAC5GC,EAAAA,EAAAA,KAAA,OACI6B,MAAO,CACHoC,SAAU,SACV3G,SAAU,WACV4G,YAAa,QAEjBC,YAAa9F,EACb+F,YAAa/F,EACbgG,UAAW/F,EACXgG,WAAYhG,EAAcyB,UAE1BF,EAAAA,EAAAA,MAAA,OACIgC,MAAO,CACHvE,SAAU,QACV0G,IAAI,GAADO,OAAKjH,EAASM,EAAC,MAClB4G,KAAK,GAADD,OAAKjH,EAASE,EAAC,MACnBiH,OAAQ3G,EAAW,WAAa,OAChCiG,OAAQ,IACRjC,MAAM,IACNoC,YAAa,OACbQ,UAAU,SAADH,OAAW3F,EAAK,KAAK+F,gBAAiB,cACjD5E,SAAA,EAEFC,EAAAA,EAAAA,KAAA,OACI4E,YAAa1G,EACb2G,aAAc3G,EACd2D,MAAO,CACHiD,WAAY,OACZC,MAAO,OACPC,QAAS,GACTP,OAAQ,OACRQ,UAAW,SACXf,YAAa,OACb1I,aAAc,eAChBuE,SACL,kBAGGC,EAAAA,EAAAA,KAACkF,IAAQ,CACLlD,SAtONtF,IACdV,GAASW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGZ,GAAM,IAAE,CAACZ,GAASuB,IAAG,EAsOfyI,WAAazI,IACA,WAANA,GAECpB,GAAW8J,GAAmB,YAATA,EAAqB,QAAU,WACxD,EAEJ7I,YAAc8I,GAAO9I,EAAYmC,QAAU2G,EAC3CC,OAAQ,CACJC,QAAmB,UAAVpK,EAAoB,CACzB,QACA,QACA,QACA,cACD,CACC,sBACA,sBACA,2BACA,uBACA,WAEJqK,MAAO,CACH,sBACA,sBACA,2BACA,uBACA,YAGRC,QAAS,CACL,SAAS,OACT,SAAoB,UAAVtK,EAAmB,IAAK,YAClC,UAAU,KAEdE,WAAYA,KAEpBwE,EAAAA,EAAAA,MAAA,OAAKI,UAAU,6BAA6B4B,MAAO,CAAC6D,eAAe,gBAAgBV,QAAQ,YAAYjF,SAAA,EACnGC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,4BAA4BgC,QAASA,KACnDjG,GAASW,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGZ,GAAM,IAAC,CAACZ,GAAS,MAC/BoB,EAAYmC,QAAQiH,YAAY,EACjC9D,MAAO,CAAC8B,OAAO,kBAAkB5D,SAAC,WAErCC,EAAAA,EAAAA,KAAA,UAAQ6B,MAAO,CAAC8B,OAAO,aAAc1D,UAAU,4BAA4BgC,QArQ9E2D,KACb9G,aAAa+G,QAAQ,kBAAmBC,KAAKC,IAAInH,EAAQ,GAAK,KAC9DC,GAASuG,GAAQU,KAAKC,IAAIX,EAAO,GAAK,KAAK,EAmQkErF,SAAC,OAC9FF,EAAAA,EAAAA,MAAA,QAAMgC,MAAO,CAAC0B,aAAa,UAAUxD,SAAA,CAAC,IAAE+F,KAAKE,MAAc,IAARpH,GAAa,SAChEoB,EAAAA,EAAAA,KAAA,UAAQ6B,MAAO,CAAC8B,OAAO,aAAc1D,UAAU,4BAA4BgC,QAnQ9EgE,KACbnH,aAAa+G,QAAQ,kBAAmBC,KAAKI,IAAIC,KAAKC,MAAMxH,GAAS,GAAK,IAC1EC,GAASuG,GAAQU,KAAKI,IAAIC,KAAKC,MAAMhB,GAAQ,GAAK,IAAG,EAiQwDrF,SAAC,OAE9FC,EAAAA,EAAAA,KAAA,UAAQiC,QAASA,IAAI7G,EAAW,IAAK6E,UAAU,4BAA4B4B,MAAO,CAAC8B,OAAO,kBAAkB5D,SAAC,qBAQrI,C,gICxcA,MAuIasG,EAAgBA,CAACC,EAASC,KAMnC,IALA,IAAIC,EAAMF,EAAQG,MAAM,KACpBC,EAAOF,EAAI,GAAGG,MAAM,WAAW,GAC/BC,EAAOC,KAAKL,EAAIA,EAAI9G,OAAS,IAC7BoH,EAAIF,EAAKlH,OACTqH,EAAQ,IAAIC,WAAWF,GACrBA,KACFC,EAAMD,GAAKF,EAAKK,WAAWH,GAE/B,OAAO,IAAII,KAAK,CAACH,GAAQR,EAAU,CAACvF,KAAK0F,GAAM,EAUtCS,EAAgBC,IACzB,IAAKA,EAAQ,OAAOA,EACpB,GAAGA,EAAOC,SAAS,KAAK,CACpB,IAAIC,EAAK,GAIT,OAHAF,EAAOX,MAAM,KAAKc,SAASC,IACxBF,GAAK,IAAKE,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,EAAE,IAElDL,CACX,CACA,OAAOF,EAAOK,OAAO,GAAGC,cAAgBN,EAAOO,MAAM,EAAE,EAsB9CrH,EAAUsH,IACZzG,EAAAA,EAAAA,IAAMyG,EACT,CACEC,KAAM,eACNhG,MAAO,CACLrG,aAAc,OACdsJ,WAAY,OACZC,MAAO,UAMN+C,EAAYC,IAGrB,IAAIA,GAAqB,iBAAPA,EACd,OAAOA,EAKQ,KAFnBA,EAAMA,EAAIC,QAAQ,KAAM,KAEhBtI,SACJqI,EAAMA,EAAItB,MAAM,IAAI7D,KAAIqF,GAAKA,EAAIA,IAAGC,KAAK,KAO7C,MAAO,CAAE7C,EAJC5E,SAASsH,EAAIJ,MAAM,EAAG,GAAI,IAIxBQ,EAHF1H,SAASsH,EAAIJ,MAAM,EAAG,GAAI,IAGrBS,EAFL3H,SAASsH,EAAIJ,MAAM,EAAG,GAAI,IAElB,EAGTU,EAAeC,IAExB,IAAIC,EAAST,EAASQ,GACtB,QAAc7G,IAAX8G,EAAsB,OAAOD,EAChC,MAAM,EAAEjD,EAAC,EAAE8C,EAAC,EAAEC,GAAMG,EAMpB,MAHkB,KAAQlD,EAAI,KAAQ8C,EAAI,KAAQC,EAG/B,GAAG,EAGnB,SAASI,EAAMC,EAAOC,GACzB,MAAMhG,EAAS,GACf,IAAI+F,EAAO,MAAO,GAF0BE,UAAAjJ,OAAA,QAAA+B,IAAAkH,UAAA,IAAAA,UAAA,IAG1BF,EAAM9G,QAAQ,CAAC,GACjC,IAAK,IAAIiH,EAAI,EAAGA,EAAIH,EAAM/I,OAAQkJ,GAAKF,EAEnChG,EAAOmG,KAAKJ,EAAMd,MAAMiB,EAAGA,EAAIF,IAEnC,OAAOhG,CACX,CAEO,MAAMoG,EAAWA,CAACC,EAAMC,KAE3B,IAAQ,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMrJ,QAASsJ,EAAW,CAE1B,OADoBD,EAAKE,UAAU,EAAGD,GAAa,KAEvD,CACA,OAAOD,CAAI,EAGFG,EAA2BC,IACpC,MAAMC,EAAO,IAAIlK,KAAKiK,GAChBE,EAAOD,EAAKE,cACZC,EAAQC,OAAOJ,EAAKK,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAMH,OAAOJ,EAAKQ,WAAWF,SAAS,EAAG,KACzCG,EAAQL,OAAOJ,EAAKU,YAAYJ,SAAS,EAAG,KAC5CK,EAAUP,OAAOJ,EAAKY,cAAcN,SAAS,EAAG,KACtCF,OAAOJ,EAAKa,cAAcP,SAAS,EAAG,KACtD,MAAM,GAANnF,OAAU8E,EAAI,KAAA9E,OAAIgF,EAAK,KAAAhF,OAAIoF,EAAG,KAAApF,OAAIsF,EAAK,KAAAtF,OAAIwF,EAAO,EAGzCG,EAAIrN,GAASsN,WAAWtN,GAAOuN,QAAQ,E","sources":["components/products/CreateProduct.js","helpers/utils.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport Keyboard from \"react-simple-keyboard\";\r\nimport CreatableSelect from 'react-select/creatable'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport toast from 'react-hot-toast'\r\nimport product from '../../asset/images/default.png';\r\nimport GIF from '../../asset/images/progress.gif';\r\nimport xlsImg from '../../asset/images/xls.png';\r\nimport axios from 'axios';\r\nimport { Warning } from '../../helpers/utils';\r\nimport { commonApiSlice, useGetPosProductsQuery, useGetProductCategoriesQuery, useGetProductsQuery } from '../../features/centerSlice';\r\n\r\nfunction CreateProduct() {\r\n    const { currency, hasKeyboard }= useSelector(state => state.auth);\r\n    const [ placeholder, setPlaceholder ] = useState(product)\r\n    const [ categories , setCategories] = useState([])\r\n    const { refetch } = useGetPosProductsQuery();\r\n    const { refetch: refetchOrg} = useGetProductsQuery()\r\n    const { refetch: refetchCat } = useGetProductCategoriesQuery()\r\n    const [ taxes , setTaxes] = useState([])\r\n    const [ focused, setFocused ] = useState(false);\r\n    const [ layoutName, setLayout ] = useState('default');\r\n    const input = {borderRadius: 25};\r\n    const dispatch = useDispatch();\r\n    const [xls, noteFile] = useState(null);\r\n    const navigate = useNavigate();\r\n    const [fields, setFields] = useState({name:'',price:'',category_id:'',barcode:'',tax:'',image:null})\r\n\r\n    const keyboardRef = useRef(null);\r\n\r\n    const handleFile = e => {\r\n        var reader= new FileReader();\r\n        reader.readAsDataURL(e.target.files[0])\r\n        reader.onload = function() {\r\n            setPlaceholder(reader.result)\r\n        }\r\n        setFields({...fields, image: e.target.files[0]??null })\r\n    }\r\n\r\n    const importXl = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        let fd = new FormData();\r\n        if(!xls) return toast.error('Fill the required fields!')\r\n\r\n        fd.append('file', xls);\r\n        dispatch({type:\"LOADING\"});\r\n\r\n        axios.post(`/products/import`, fd, {\r\n            headers:{ \r\n                \"Accept\"       :\"application/json\",\r\n                \"Content-Type\" : \"multipart/form-data\",\r\n                \"pos-token\": localStorage.getItem('pos-token')\r\n            }\r\n        }).then(({data}) => {\r\n            if(data.status) {\r\n                refetch()\r\n                refetchOrg()\r\n                refetchCat()\r\n                navigate('/products');\r\n                return toast.success(data.message);\r\n            }\r\n            return toast.error(data.message);\r\n        }).catch(()=> toast.error(\"Failed to import excel.Re-check the format and try again!\"))\r\n        .finally(()=> dispatch({type:\"STOP_LOADING\"}));\r\n\r\n    }\r\n\r\n    const change = e => setFields({...fields, [e.target.name]: e.target.value })\r\n\r\n    const addProduct = async e => {\r\n        e.preventDefault();\r\n        if(!fields.name || !fields.price) {\r\n            return Warning(\"Fill the required fields\")\r\n        }\r\n        if(!fields.barcode && !fields.category_id) {\r\n            return Warning(\"Product barcode is required!\")\r\n        }\r\n        if(fields.category_id && !fields.barcode) {\r\n            let cat = categories.find(ite => ite.id === parseInt(fields.category_id))\r\n            if( cat.name.toLowerCase().indexOf('veg')=== -1 ) {\r\n                return Warning(\"Barcode is required!\")\r\n            }\r\n        }\r\n        setFocused('')\r\n        let fd = new FormData();\r\n        for (const field in fields) {\r\n            fd.append(field, fields[field])\r\n        }\r\n        dispatch({type:\"LOADING\"})\r\n\r\n        try {\r\n            const {data} = await axios.post(`/products/create`, fd, {\r\n                headers:{ \r\n                    \"Accept\"       :\"application/json\",\r\n                    \"Content-Type\" : \"multipart/form-data\",\r\n                    \"pos-token\"    : localStorage.getItem('pos-token')\r\n                }\r\n            })\r\n            if(data.status) {\r\n                toast.success(data.message)\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getPosProducts', undefined, cache => {\r\n                        if(cache['products']){\r\n                            cache['products'].unshift(data.product)\r\n                        }\r\n                    })\r\n                )\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getProducts', undefined, cache => {\r\n                        if(cache['products']){\r\n                            cache['products'].unshift(data.product)\r\n                        }\r\n                    })\r\n                )\r\n                dispatch({type:\"STOP_LOADING\"})\r\n                navigate('/products')\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n        } catch (error) {\r\n            console.log(error)    \r\n        }\r\n        dispatch({type:\"STOP_LOADING\"})\r\n    }\r\n\r\n    const getCategories = ()=> {\r\n        axios.get('category').then(({data}) => {\r\n            if(data.status){ \r\n                setCategories(data.categories)\r\n            }\r\n        })\r\n    }\r\n    const getTaxes = ()=> {\r\n        axios.get('tax').then(({data}) => {\r\n            if(data.status){ \r\n                setTaxes(data.taxes)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=> { \r\n        getCategories();\r\n        getTaxes();\r\n        return ()=> null\r\n    },[])\r\n\r\n    function putFile(e){\r\n        e.preventDefault();\r\n        noteFile(e.target.files[0])\r\n    }\r\n    const [position, setPosition] = useState({ x: window.screen.availWidth / 3, y: window.screen.availHeight / 3 })\r\n    const [dragging, setDragging] = useState(false)\r\n    const [offset, setOffset] = useState({ x: 0, y: 0 })\r\n\r\n    const handleMouseDown = (e) => {\r\n        setDragging(true);\r\n        setOffset({\r\n          x: e.clientX - position.x,\r\n          y: e.clientY - position.y,\r\n        });\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!dragging) return;\r\n        setPosition({\r\n            x: e.clientX - offset.x,\r\n            y: e.clientY - offset.y,\r\n        });\r\n    }\r\n    const handleMouseUp = () => setDragging(false);\r\n\r\n    const onChange =  e => {\r\n        setFields({...fields, [focused]:e})\r\n    }\r\n    \r\n    const [presetTxt, setPreset] = useState('');\r\n    useEffect(() => {\r\n        keyboardRef.current?.setInput(presetTxt);\r\n    }, [presetTxt, focused]);\r\n    \r\n    const [scale, setScale] = useState(localStorage.getItem('_keyboard_scale')??1); // Default scale (1 = 100%)\r\n\r\n    const decrease = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.max(scale - 0.1, 0.5))\r\n        setScale(prev => Math.max(prev - 0.1, 0.5))\r\n    }\r\n    const increase = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.min(JSON.parse(scale) + 0.1, 2))\r\n        setScale(prev => Math.min(JSON.parse(prev) + 0.1, 2))\r\n    }\r\n    const [barcode, setBarcode] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        let lastKeyTime = Date.now();\r\n        let inputBuffer = \"\";\r\n        const handleKeyDown = (event) => {\r\n            const { key } = event;\r\n            const currentTime = Date.now();\r\n            const timeDiff = currentTime - lastKeyTime;\r\n            if (timeDiff > 50) {\r\n                console.log('ye hai normal input')\r\n            } else {\r\n                if (key === \"Enter\") {\r\n                    setBarcode(inputBuffer);inputBuffer=\"\"; \r\n                } else {\r\n                    if (key.length === 1) {\r\n                        inputBuffer += key;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener(\"keydown\", handleKeyDown);\r\n        return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n    }, [barcode]);\r\n    return (\r\n        <>\r\n        <div className=\"content-wrapper\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 grid-margin stretch-card\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h4 className=\"mt-2\">Create Product</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\" id=\"hider\">\r\n                                <div className=\"col-6\">\r\n                                    <form onSubmit={addProduct} >\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"row\" style={{width:'100%'}} >\r\n                                                <div className=\"col-10\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"product_name\" className=\"fs-5\"> Product </label> <br/>\r\n                                                        <textarea name=\"name\" \r\n                                                            onChange={change} \r\n                                                            onClick={(e)=>{\r\n                                                                setFocused('name')\r\n                                                                setPreset(fields.name)\r\n                                                            }}\r\n                                                            id=\"product_name\" \r\n                                                            className=\"form-control\" \r\n                                                            value={fields.name} \r\n                                                            style={input} \r\n                                                            placeholder=\"e.g. Butter\"  \r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"col-2\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"product_image\" >\r\n                                                            <img src={placeholder} alt=\"\" className=\"label-img\"/>\r\n                                                        </label>\r\n                                                        <input name=\"image\" id=\"product_image\" onChange={handleFile} accept=\"image/*\" type=\"file\" className=\"d-none\" />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n\r\n                                                <div className=\"col-8\">\r\n                                                    <div className=\"row mb-1\">\r\n                                                        <div className=\"col-4 align-self-center\">\r\n                                                            Category\r\n                                                        </div>\r\n                                                        <div className=\"col-8\">\r\n                                                            <select name=\"category_id\" onChange={change} className=\"form-control\" style={input}>\r\n                                                                <option value=\"\"> Choose </option>\r\n                                                                {categories.map( opt => <option key={opt.id} value={opt.id}>{opt.name}</option>)}\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row mt-3\">\r\n                                                        <div className=\"col-4\">\r\n                                                            Sales Taxes\r\n                                                        </div>\r\n                                                        <div className=\"col-8\">\r\n                                                            <CreatableSelect \r\n                                                                name='tax'\r\n                                                                onFocus={()=> setFocused('')}\r\n                                                                onChange={e =>{setFields({...fields, tax: e.value })}}\r\n                                                                options={taxes.map( t => ({...t, value: t.name +' '+t.amount, label: t.name+' '+t.amount}))}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row mt-1\">\r\n                                                        <div className=\"col-4 align-self-center\">\r\n                                                            Price\r\n                                                        </div>\r\n                                                        <div className=\"col-8\">\r\n                                                            <input \r\n                                                                pattern=\"^\\d+(\\.\\d+)?$\" \r\n                                                                onChange={change} \r\n                                                                title=\"Price should be number\" \r\n                                                                name=\"price\"\r\n                                                                className=\"form-control\" \r\n                                                                placeholder={currency} \r\n                                                                style={input} \r\n                                                                onClick={(e)=>{\r\n                                                                    setFocused('price')\r\n                                                                    setPreset(fields.price)\r\n                                                                }} \r\n                                                                value={fields.price}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"row mt-1\">\r\n                                                        <div className=\"col-4 align-self-center\">\r\n                                                            Barcode\r\n                                                        </div>\r\n                                                        <div className=\"col-8\">\r\n                                                            <input \r\n                                                                name=\"barcode\" \r\n                                                                onChange={change} \r\n                                                                placeholder='Barcode here..' \r\n                                                                style={input} \r\n                                                                className=\"form-control\" \r\n                                                                onClick={(e)=>{\r\n                                                                    setPreset(fields.barcode)\r\n                                                                    setFocused('barcode')\r\n                                                                }} \r\n                                                                value={fields.barcode}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row mt-2 ms-4\">\r\n                                            <button className=\"btn btn-rounded btn-success\"> Create </button>\r\n                                        </div>\r\n                                    </form>\r\n\r\n                                </div>\r\n                                <div className=\"col-2 align-self-center position-relative\" style={{height:'74vh',placeContent:'center'}}>\r\n                                    <div className=\"l\"></div>\r\n                                    <div className=\"circle\">\r\n                                        <h1>OR</h1>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4 d-grid\" style={{placeContent:'center'}}>\r\n                                    <form id=\"importForm\" onSubmit={importXl}>\r\n                                    <div className=\"form-group d-flex\" style={{border:'1px solid gray',borderRadius:'10px',width:'300px',position:'relative'}}> \r\n                                        <label htmlFor=\"importFile\" style={{width:'100%',height:'100%'}}>\r\n                                            <img className=\"xlsImg\" src={xlsImg} alt=\"\"/>\r\n                                            <img className=\"spinner d-none\" src={GIF} alt=\"spinner\"/>\r\n                                        </label> \r\n                                        <input type=\"file\" name=\"file\" id=\"importFile\" className=\"d-none\" accept=\".csv, .xls, .xlsx\" onChange={putFile}/> \r\n                                        </div> \r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-rounded uploadBtn\" disabled={!xls}> Import Excel </button>\r\n                                    </form>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        { focused && !hasKeyboard && <div className='mt-4 position-fixed w-50 v-keyboard' style={{zIndex:9999, top:60 }}>\r\n            <div\r\n                style={{\r\n                    overflow: \"hidden\",\r\n                    position: \"relative\",\r\n                    touchAction: \"none\",\r\n                }}\r\n                onMouseMove={handleMouseMove}\r\n                onTouchMove={handleMouseMove}\r\n                onMouseUp={handleMouseUp}\r\n                onTouchEnd={handleMouseUp}\r\n                >\r\n                <div\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: `${position.y}px`,\r\n                        left: `${position.x}px`,\r\n                        cursor: dragging ? \"grabbing\" : \"grab\",\r\n                        zIndex: 1000,\r\n                        width:700,\r\n                        touchAction: \"none\",\r\n                        transform: `scale(${scale})`, transformOrigin: \"top center\"\r\n                    }}\r\n                >\r\n                    <div\r\n                        onMouseDown={handleMouseDown}\r\n                        onTouchStart={handleMouseDown}\r\n                        style={{\r\n                            background: \"#444\",\r\n                            color: \"#fff\",\r\n                            padding: 10,\r\n                            cursor: \"grab\",\r\n                            textAlign: \"center\",\r\n                            touchAction: \"none\",\r\n                            borderRadius: \"8px 8px 0 0\",\r\n                        }}\r\n                    >\r\n                        Hold To Drag \r\n                    </div>\r\n                        <Keyboard\r\n                            onChange={onChange}\r\n                            onKeyPress={(e) => {\r\n                                if(e === \"{lock}\")\r\n                                {\r\n                                    setLayout((prev) => (prev === \"default\" ? \"shift\" : \"default\"))\r\n                                }\r\n                            }}\r\n                            keyboardRef={(r) => (keyboardRef.current = r)}\r\n                            layout={{\r\n                                default: focused==='price' ? [\r\n                                    \"1 2 3\",\r\n                                    \"4 5 6\", \r\n                                    \"7 8 9\",\r\n                                    \"0 . {bksp}\"\r\n                                ]: [\r\n                                    \"1 2 3 4 5 6 7 8 9 0\",\r\n                                    \"q w e r t y u i o p\",\r\n                                    \"{lock} a s d f g h j k l\",\r\n                                    \"z x c v b n m {bksp}\",\r\n                                    \"{space}\"\r\n                                ],\r\n                                shift: [\r\n                                    \"1 2 3 4 5 6 7 8 9 0\",\r\n                                    \"Q W E R T Y U I O P\",\r\n                                    \"{lock} A S D F G H J K L\",\r\n                                    \"Z X C V B N M {bksp}\",\r\n                                    \"{space}\"\r\n                                ]\r\n                            }}\r\n                            display={{\r\n                                \"{lock}\":\"Caps\",\r\n                                \"{bksp}\": focused==='price'? 'x': \"Backspace\",\r\n                                \"{space}\":\" \"\r\n                            }}\r\n                            layoutName={layoutName}\r\n                        />\r\n                    <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                        <button className='btn btn-light btn-rounded' onClick={()=>{\r\n                            setFields({...fields,[focused]:''})\r\n                            keyboardRef.current.clearInput()\r\n                        }} style={{border:'1px solid gray'}}>CLEAR</button>\r\n\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={decrease}>-</button>\r\n                        <span style={{placeContent:'center'}}> {Math.round(scale * 100)}% </span>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={increase}>+</button>\r\n\r\n                        <button onClick={()=>setFocused('')} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreateProduct","import $ from 'jquery'\r\nimport toast from 'react-hot-toast';\r\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport const validate = (fields,exceptions=[]) => {\r\n    let result={}\r\n    var shouldGo=true;\r\n    if(exceptions.length)\r\n    {\r\n        exceptions.forEach( item => {\r\n            delete fields[item]\r\n        })\r\n    }\r\n    Object.keys(fields).forEach(f =>\r\n    {\r\n        let shout = '';\r\n        let invalid = false;\r\n        let tInputs = [$(`input[name=${f}]`), $(`select[name=${f}]`), $(`textarea[name=${f}]`), $(`.${f}`)]\r\n        if(fields[f]==null || fields[f].length===0)\r\n        {\r\n            result[f]=`Required!`;\r\n            shouldGo=false;\r\n            invalid = true;\r\n        }\r\n        tInputs.forEach( input => {\r\n\r\n            let minLength = $(input).attr('type')!== 'date' ? $(input).attr('min'): 0;\r\n            let maxLength = $(input).attr('max');\r\n            let type = $(input).attr('cast');\r\n            let isDate = $(input).attr('type')==='date' && $(input).attr('req');\r\n            if($(input).val()?.length && (minLength || maxLength))\r\n            {\r\n                if($(input).val().length < parseInt(minLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should be of at least ${minLength} characters!`\r\n                    result[f] = shout;\r\n                }\r\n                if($(input).val().length > parseInt(maxLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should not be greater than ${maxLength} characters!`;\r\n                    result[f] = shout;\r\n                }\r\n            }\r\n            if(type)\r\n            { \r\n                if(input.val() && type === 'num')\r\n                {\r\n                    if(parseInt($(input).val().length )!== $(input).val().length) {\r\n                        shout= `Should be in numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n                if( $(input).val() && type=== 'str' )\r\n                {\r\n                    if( /^([^0-9]*)$/.test($(input).val())===false )\r\n                    {\r\n                        shout= `Should not contain numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n            }\r\n            if(isDate)\r\n            {\r\n                if(!isValidDate($(input).val(),18))\r\n                {\r\n                    invalid = true\r\n                    shout = 'Invalid date';\r\n                    result[f] = shout;\r\n                } else {\r\n                    shout = '';\r\n                }\r\n                // return\r\n            }\r\n            if(shout)   \r\n            {\r\n                if($(input).parents('.col-md-12, .col').find('small.text-danger').length)\r\n                {\r\n                    $(input).parents('.col-md-12, .col').find('small.text-danger').text(shout)\r\n                } else {\r\n                    $(input).parents('.col-md-12, .col').append('<small class=\"text-danger\">'+shout+'</small>')\r\n                }\r\n            } else {\r\n                $(input).parents('.col-md-12, .col').find('small.text-danger').remove()\r\n            }\r\n            if(invalid){\r\n                shouldGo = false;\r\n                $(input).addClass('placeholder-error')\r\n                .attr('placeholder',result[f]).css('border','1px solid red');\r\n            } else {\r\n                $(input).removeClass('placeholder-error').attr('placeholder',result[f]).css('border','');\r\n            }\r\n        })\r\n    })\r\n    return {result, shouldGo};\r\n}\r\n\r\nexport const getCurrentDate = (delimiter='-') => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year+delimiter+month+delimiter+day}`;\r\n}\r\n\r\nexport const formatDate = (date=null,format='Ymd') => {\r\n    const dateObj = date?new Date(date): new Date();\r\n    const year = dateObj.getFullYear();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(dateObj.getDate()).padStart(2, '0');\r\n    if(format[0]==='Y')\r\n    {\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n    if(format[0]==='d')\r\n    {\r\n        return `${day}-${month}-${year}`;\r\n    }\r\n}\r\n\r\nexport const getCurrentDay = () => {\r\n    return daysOfWeek[(new Date()).getDay()];\r\n}\r\n\r\nexport const getCurrentTime = () => {\r\n    const currentDate = new Date();\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nexport const toBase64 = blob => {\r\n\r\n}\r\n\r\nexport const dataURLtoFile = (dataurl, filename) => {\r\n    var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[arr.length - 1]), \r\n        n = bstr.length, \r\n        u8arr = new Uint8Array(n);\r\n    while(n--){\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\nexport const isValidDate = ( date, range ) => {\r\n    let today = getCurrentDate();\r\n    let year = today.split('-')[0];\r\n    let intended = new Date(today.replace(year, (parseInt(year)-range)));\r\n    return intended > new Date(date)\r\n}\r\n\r\nexport const capitalFirst = (string) => {\r\n    if (!string) return string; // Handle empty or null strings\r\n    if(string.includes(' ')){\r\n        let str= '';\r\n        string.split(' ').forEach( part => {\r\n           str+=' '+ part.charAt(0).toUpperCase() + part.slice(1); \r\n        })\r\n        return str;\r\n    }\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const getDocumentName = id => {\r\n\r\n    const documents = {\r\n        1 : 'VISIT PHOTO',\r\n        2 : 'AADHAAR CARD',\r\n        3 : 'VOTER CARD',\r\n        4 : 'GROUP PHOTO',\r\n        5 : 'CGT_FIRST',\r\n        6 : 'CGT_SECOND',\r\n        7 : 'CIBIL',\r\n        8 : 'SANCTION LETTER',\r\n        9 : 'KYC',\r\n        10 : 'BANK PASSBOOK',\r\n        11 : 'RELATION PROOF DOCUMENT',\r\n    }\r\n    return documents[id];\r\n    \r\n}\r\n\r\nexport const Warning = msg => {\r\n    return toast(msg,\r\n        {\r\n          icon: '⚠️',\r\n          style: {\r\n            borderRadius: '10px',\r\n            background: '#333',\r\n            color: '#fff',\r\n          },\r\n        }\r\n    );\r\n}\r\n\r\nexport const hexToRgb = (hex) => {\r\n    // Remove the '#' if present\r\n\r\n    if(!hex || typeof hex == 'object'){\r\n        return hex\r\n    }\r\n\r\n    hex = hex.replace(/^#/, '');\r\n    // Convert shorthand hex (e.g., #03F) to full form (e.g., #0033FF)\r\n    if (hex.length === 3) {\r\n        hex = hex.split('').map(h => h + h).join('');\r\n    }\r\n    // Convert hex to RGB\r\n    const r = parseInt(hex.slice(0, 2), 16);\r\n    const g = parseInt(hex.slice(2, 4), 16);\r\n    const b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport const isColorDark = (hexColor) => {\r\n    // Convert hex color to RGB\r\n    let output = hexToRgb(hexColor)\r\n    if(output === undefined) return hexColor\r\n    const { r, g, b } = output\r\n\r\n    // Calculate the luminance\r\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n\r\n    // Return true if the color is dark, else false\r\n    return luminance < 128;\r\n}\r\n\r\nexport function chunk(array, size, uncategorized = false) {\r\n    const result = [];\r\n    if(!array) return []\r\n    if(uncategorized) array.unshift({})\r\n    for (let i = 0; i < array.length; i += size) {\r\n        // Use slice to get a chunk of the specified size and push it to the result array\r\n        result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const wrapText = (text, maxLength) => {\r\n\r\n    if (text?.length > maxLength) {\r\n        let truncatedText = text.substring(0, maxLength) + '...';\r\n        return truncatedText;\r\n    }\r\n    return text\r\n}\r\n\r\nexport const formatDatefromTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    const seconds = String(date.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n  \r\nexport const f = value => parseFloat(value).toFixed(2)"],"names":["_localStorage$getItem","currency","hasKeyboard","useSelector","state","auth","placeholder","setPlaceholder","useState","product","categories","setCategories","refetch","useGetPosProductsQuery","refetchOrg","useGetProductsQuery","refetchCat","useGetProductCategoriesQuery","taxes","setTaxes","focused","setFocused","layoutName","setLayout","input","borderRadius","dispatch","useDispatch","xls","noteFile","navigate","useNavigate","fields","setFields","name","price","category_id","barcode","tax","image","keyboardRef","useRef","change","e","_objectSpread","target","value","useEffect","axios","get","then","_ref2","data","status","_ref3","position","setPosition","x","window","screen","availWidth","y","availHeight","dragging","setDragging","offset","setOffset","handleMouseDown","clientX","clientY","handleMouseMove","handleMouseUp","presetTxt","setPreset","_keyboardRef$current","current","setInput","scale","setScale","localStorage","getItem","setBarcode","lastKeyTime","Date","now","inputBuffer","handleKeyDown","event","key","console","log","length","addEventListener","removeEventListener","_jsxs","_Fragment","children","_jsx","className","id","onSubmit","async","preventDefault","Warning","find","ite","parseInt","toLowerCase","indexOf","fd","FormData","field","append","type","post","headers","toast","success","message","commonApiSlice","util","updateQueryData","undefined","cache","unshift","error","style","width","htmlFor","onChange","onClick","src","alt","_e$target$files$","reader","FileReader","readAsDataURL","files","onload","result","accept","map","opt","CreatableSelect","onFocus","options","t","amount","label","pattern","title","height","placeContent","_ref","catch","finally","border","xlsImg","GIF","disabled","zIndex","top","overflow","touchAction","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","concat","left","cursor","transform","transformOrigin","onMouseDown","onTouchStart","background","color","padding","textAlign","Keyboard","onKeyPress","prev","r","layout","default","shift","display","justifyContent","clearInput","decrease","setItem","Math","max","round","increase","min","JSON","parse","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","capitalFirst","string","includes","str","forEach","part","charAt","toUpperCase","slice","msg","icon","hexToRgb","hex","replace","h","join","g","b","isColorDark","hexColor","output","chunk","array","size","arguments","i","push","wrapText","text","maxLength","substring","formatDatefromTimestamp","timestamp","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getSeconds","f","parseFloat","toFixed"],"sourceRoot":""}