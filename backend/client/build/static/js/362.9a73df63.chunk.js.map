{"version":3,"file":"static/js/362.9a73df63.chunk.js","mappings":"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","sources":["components/layouts/Navbar.js","components/layouts/FullLayout.js","components/pos/SearchBoard.js","helpers/utils.js"],"sourcesContent":["import React, { memo, useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Keyboard from \"react-simple-keyboard\";\r\nimport { Link, useLocation, useNavigate, useParams} from 'react-router-dom';\r\nimport profile from \"../../asset/images/profile.png\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSearch } from '../../contexts/SearchContext';\r\nimport { Input, Modal, ModalBody, ModalFooter, ModalHeader, Form } from 'reactstrap';\r\nimport { dataURLtoFile, Warning } from '../../helpers/utils';\r\nimport toast from 'react-hot-toast';\r\nimport { commonApiSlice, useGetNotificationsQuery } from '../../features/centerSlice';\r\nimport logo from '../../asset/images/logo.png';\r\nimport SearchBoard from '../pos/SearchBoard';\r\nfunction Navbar() {\r\n\r\n    const headers = {\r\n        'Content-Type' : 'application/json',\r\n        'pos-token': localStorage.getItem('pos-token')\r\n    }\r\n    const [filling, setFilling ] = useState(false);\r\n    const params = useParams();\r\n    const {data} = useGetNotificationsQuery();\r\n    const [ position, setPosition] = useState({x: window.screen.availWidth / 3, y: window.screen.availHeight / 3 });\r\n    const [ dragging, setDragging] = useState(false);\r\n    const [ offset, setOffset] = useState({  x: 0, y: 0  });\r\n    const [ layoutName, setLayout] = useState('default')\r\n    \r\n    const onChangeKey = input => setKey(input)\r\n    const keyboardRef = useRef(null);\r\n   \r\n    const [scale, setScale] = useState(localStorage.getItem('_keyboard_scale')??1); // Default scale (1 = 100%)\r\n    const decrease = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.max(scale - 0.1, 0.5))\r\n        setScale(prev => Math.max(prev - 0.1, 0.5))\r\n    }\r\n    const increase = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.min(JSON.parse(scale) + 0.1, 2))\r\n        setScale(prev => Math.min(JSON.parse(prev) + 0.1, 2))\r\n    }\r\n\r\n    const handleMouseDown = (e) => {\r\n        setDragging(true);\r\n        setOffset({\r\n            x: e.clientX - position.x,\r\n            y: e.clientY - position.y,\r\n        });\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!dragging) return;\r\n        setPosition({\r\n            x: e.clientX - offset.x,\r\n            y: e.clientY - offset.y,\r\n        });\r\n    }\r\n    const handleMouseUp = () => setDragging(false);\r\n\r\n    const chosenStyle = {\r\n        marginTop:'.5rem',\r\n        alignItems: 'center',\r\n        borderRadius: '10px',\r\n        minHeight: '80px',\r\n        border: '2px dashed',\r\n        backgroundColor: '#fff',\r\n        position: 'relative'\r\n    }\r\n    const focusedStyle = {\r\n        backgroundColor: 'transparent',\r\n        borderBottom: '1px solid #212121',\r\n        borderRadius: 0,\r\n        paddingLeft: '30px',\r\n        cursor: 'text',\r\n        outline: 0,\r\n        width: '140px'\r\n    }\r\n    const handleTransaction = e => {\r\n        let now = !sale\r\n        localStorage.setItem('_is_sale', now)\r\n        setType(now)\r\n    }\r\n\r\n    const removeNotification = e => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        const id = e.target.dataset.id\r\n        axios.get(`config/notification/delete/${id}`).then(({data}) => {\r\n            console.log(data);\r\n            if(data.status) {\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getNotifications', undefined, cache => {\r\n                        cache['notifications'] = cache.notifications.filter( item => item.id !== parseInt(id) )\r\n                    })\r\n                )\r\n\r\n            }\r\n        })\r\n    }\r\n    const clearNotification = e => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        axios.get('config/clear-notifications', {\r\n            headers\r\n        }).then(({data}) => {\r\n            if(data.status) {\r\n                dispatch(\r\n                    commonApiSlice.util.updateQueryData('getNotifications', undefined , cache => {\r\n                        cache['notifications'] = [];\r\n                    })\r\n                )\r\n            }\r\n        })\r\n    }\r\n    const [notifications, setNotifications] = useState(data?.notifications??[])\r\n    useEffect(()=> {\r\n        setNotifications(data?.notifications??[])\r\n    },[data])\r\n    const modalBody = useRef(null);\r\n    const location = useLocation();\r\n    const { setSearchQuery, searchQuery, sessions, setSession, activeSession, setActiveSession, displayImage, handleImageDisplay, sale, setType, setFocused, focused } = useSearch();\r\n    const printReceipt = async () => {\r\n        const elem = modalBody.current;\r\n        if(!elem) return toast.error(`Sorry can't go further...`);\r\n        try {\r\n            if(window.electronAPI) {\r\n                window.electronAPI?.printContent({html:elem.innerHTML, id:sessionID });\r\n            } else {\r\n                Warning(\"Printer not connected!\")\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error capturing image:\", error);\r\n        }\r\n    }\r\n    const [appModal , setAppModal ] = useState(false);\r\n    const notHome = location.pathname !== '/dashboard';\r\n    const { cartProducts, split:splitStat, currency, appKey, inventory } = useSelector( state => state.auth );\r\n    const [ invent, setInvent ] = useState(inventory)\r\n    const [key,setKey] = useState(appKey)\r\n    const [ orderModal, toggleOrderModal ] = useState(false);\r\n    const [ total, setTotal ] = useState(0);\r\n    const [ sessionID, setSessionID ] = useState(1);\r\n    const [ orderProducts, setOrderProducts] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const updateProducts = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            if(!appKey && !key) {\r\n                setFilling(true)\r\n                return setAppModal(!appModal)\r\n            }\r\n            let tKey = appKey || key\r\n            dispatch({ type: \"SET_APP_KEY\", payload: tKey })\r\n            dispatch({ type:\"LOADING\" });\r\n\r\n            const {data} = await axios.get(`https://pos.dftech.in/sync-products/${tKey}`);\r\n            if(data.status) {\r\n                toast.success(data.message);\r\n                let fd = new FormData();\r\n                const midFile= dataURLtoFile(`data:application/json;base64,`+data.file, 'client.json');\r\n                fd.append('file', midFile);\r\n\r\n                const {data:resp} = await axios.post('products/sync', fd, {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        \"Content-Type\" : \"multipart/form-data\",\r\n                        'pos-token' : localStorage.getItem('pos-token')\r\n                    }\r\n                });\r\n                if(resp.status) {\r\n                    toast.success(\"Importing completed\");\r\n                    setTimeout(()=> window.location.reload(), 2400);\r\n                }\r\n            } else {\r\n                toast.error(data.message);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error.message);\r\n            toast.error(\"Couln't fetch products right now!\")\r\n        }\r\n        dispatch({ type:\"STOP_LOADING\" });\r\n    }\r\n\r\n    const split = () => {\r\n        let btn = document.querySelector('.split-btn')\r\n        dispatch({\r\n            type: 'SPLIT',\r\n            payload: btn.classList.contains('btn-outline-success')\r\n        })\r\n    }\r\n\r\n    useEffect(()=> {\r\n        setSearchQuery(searchQuery)\r\n        return ()=> setSearchQuery('')\r\n    },[searchQuery, setSearchQuery])\r\n    \r\n    const handleSession = () => {\r\n        window.electronAPI?.reloadWindow()\r\n        localStorage.setItem('cartSessions', JSON.stringify([...sessions, sessions[sessions.length-1] + 1]) );\r\n        setSession([...sessions, sessions[sessions.length-1] + 1])\r\n    }\r\n\r\n    const logOut = async () => dispatch({ type:\"LOGOUT\" })\r\n\r\n    const handleInventory = async () => {\r\n        let now = !invent\r\n        dispatch({type:\"LOADING\"})\r\n        try {\r\n            const {data} = await axios.get(`config/inventory/${now}`, {headers})\r\n            if(data.status) {\r\n                setInvent(now)\r\n                \r\n                dispatch({ type:'INVENTORY_IS', payload:now });\r\n\r\n                toast.success(`Inventory is switched ${now? 'on':'off'}!`)\r\n                dispatch({ type:\"RESET_KART\" })\r\n\r\n            } else {\r\n                toast.error(`Didn't worked!`)\r\n            }\r\n        } catch (er) {\r\n            toast.error(`Didn't worked!`)\r\n        }\r\n        dispatch({ type:\"STOP_LOADING\" })\r\n    }\r\n    \r\n    const search = e => setSearchQuery(e.target.value)\r\n \r\n    const handleQuickProduct = e => {\r\n        e.preventDefault();\r\n        dispatch({ type: \"CHOOSEN_PRODUCT\", payload: {...cartProducts,[activeSession]: [...cartProducts[activeSession]??[], { id:'quick', name:'Others', price:0.0, stock:1, other:true, weight:null }] } });\r\n    }\r\n\r\n    const lastOrder = () => {\r\n        dispatch({ type:`LOADING` });\r\n        toggleOrderModal(!orderModal)\r\n        axios.get(`orders/last-order`).then(({data})=> { \r\n            const {products, session} = data;\r\n            const sessionData = JSON.parse(session.data);\r\n            setTotal(data.order.amount);\r\n            setSessionID(data.order.session_id+':'+data.order.cash_register_id)\r\n            let orderedProducts = Object.values(products).map( pr => ({...pr, stock:sessionData?.quantity[pr.id]}) );\r\n            if((sessionData?.products??[]).indexOf('quick') !== -1) {\r\n                let overallExcept = orderedProducts.reduce( (pre,a) => pre + parseFloat(a.price * sessionData?.quantity[a.id]), 0);\r\n                let otherPrice = data.order.amount - overallExcept;\r\n                orderedProducts = [...orderedProducts, {name:\"Others\", price: otherPrice, id:`quick`, stock: sessionData?.quantity['quick']}];\r\n            }\r\n            setOrderProducts(orderedProducts);\r\n        }).catch()\r\n        .finally( () => dispatch({ type:`STOP_LOADING` })) \r\n    }\r\n\r\n    useEffect(()=> {\r\n        setActiveSession(sessions[0]);\r\n        return ()=> setActiveSession(sessions[0]);\r\n    },[ sessions ])\r\n\r\n    if(params && params.type==='customer') return null;\r\n    \r\n    return (\r\n    <>\r\n        <nav className=\"navbar default-layout col-lg-12 col-12 p-0 d-flex align-items-top flex-row no-print\" style={{zIndex:999}}>\r\n            { notHome && (<>\r\n                <div className=\"text-center navbar-brand-wrapper d-flex align-items-center justify-content-start\">\r\n                    <div className=\"me-3\">\r\n                        <Link to={`/dashboard`} className=\"nav-link\">\r\n                            <i className=\"mdi mdi-home menu-icon fs-3\" />\r\n                        </Link>\r\n                    </div>\r\n                <div>\r\n            </div>\r\n        </div>\r\n        </>)}\r\n                \r\n        <div className=\"navbar-menu-wrapper d-flex align-items-top\" style={{width:!notHome?'100%':''}}>\r\n            {notHome && (location.pathname.indexOf('/pos')===-1 ?\r\n            <li className=\"navbar-nav nav-item\">\r\n                <button className=\"btn btn-sm\" onClick={()=>navigate(-1)}>\r\n                    <i style={{fontSize:'1.8rem'}} className=\"mdi mdi-arrow-left\"/>\r\n                </button>\r\n            </li>\r\n            : <button className={`btn btn-sm btn-${sale ?'success':'warning'}`} onClick={handleTransaction}>{sale?'Selling':'Returning'}</button>)}\r\n\r\n            {['/pos','/pos/','/payment'].includes(location.pathname) && \r\n                (<>\r\n                <li className=\"navbar-nav nav-item ms-3\" onClick={handleSession} >\r\n                    <div className=\"box\"> + </div>\r\n                </li>\r\n                <ul className=\"navbar-nav ms-1 sessions\">\r\n                    { sessions.map( id => (<li className=\"nav-item fw-semibold ms-1\" key={id} onClick={()=>{setActiveSession(id);window.electronAPI?.reloadWindow()}}>\r\n                        <div className={`box ${activeSession===id? 'active':''}`}> {id} </div>\r\n                    </li>)) }\r\n                </ul>\r\n                <button className={`btn ${splitStat?'btn-success':'btn-outline-success'} btn-sm ms-2 split-btn text-dark`} type=\"button\" onClick={split} title=\"Split products\"> \r\n                    Split Products \r\n                </button>\r\n                <button className=\"btn btn-outline-success btn-light btn-sm ms-2 quick-btn text-dark\" type=\"button\" onClick={lastOrder} >\r\n                    Last Receipt\r\n                </button>\r\n                <button className=\"btn btn-outline-success btn-light btn-sm ms-2 quick-btn text-dark\" type=\"button\" onClick={handleQuickProduct} title=\"Quick add product to cart\" >\r\n                    Quick Add\r\n                </button>\r\n                <button className=\"btn btn-outline-success btn-light btn-sm ms-2 quick-btn text-dark\" type=\"button\" >\r\n                    Open drawer\r\n                </button>\r\n                </>)\r\n            }\r\n\r\n            {location.pathname === '/products' && (\r\n                <Link to={'/product/create'} className={`btn-success btn btn-md btn-rounded`}> New </Link>\r\n            )}\r\n\r\n            <ul className=\"navbar-nav ms-auto\">\r\n\r\n                <li className=\"nav-item d-flex align-items-center\">\r\n                    {location.pathname==='/pos' && <button className='btn btn-rounded btn-sm btn-warning fs-4' onClick={()=>handleImageDisplay(!displayImage)}> \r\n                        {displayImage?'Hide':\"Show\"} Images\r\n                    </button>}\r\n                    <button className=\"btn\" onClick={()=>window.location.reload()} title={'Refresh'}>\r\n                        <i style={{fontSize:'2rem'}} className=\"mdi mdi-refresh\" />\r\n                    </button>\r\n                </li>\r\n                {location.pathname==='/pos' && (<>\r\n                    <li className=\"nav-item\" onClick={(e)=>{\r\n                        setPosition({...position, y:e.target.getBoundingClientRect().y + 50})\r\n                        setFocused(!focused)\r\n                    }}>\r\n                        <form className=\"search-form\" action=\"#\">\r\n                            <i className=\"icon-search\" />\r\n                            <input type=\"search\" className=\"form-control\" value={searchQuery} placeholder=\"Search Here\" title=\"Search here\" style={focused ? focusedStyle: {}} onInput={search} />\r\n                        </form>\r\n                    </li>\r\n                </>)}\r\n\r\n                <li className=\"nav-item dropdown\">\r\n                    <Link className=\"nav-link count-indicator\" id=\"notificationDropdown\" href=\"#\" data-bs-toggle=\"dropdown\">\r\n                        <i className=\"mdi mdi-bell\"/>\r\n                        {notifications.length ? <span className=\"count\"/>: null}\r\n                    </Link>\r\n                    <div className=\"dropdown-menu dropdown-menu-right navbar-dropdown preview-list pb-0\" aria-labelledby=\"notificationDropdown\" style={{ borderRadius:8 }}>\r\n                        <Link className={`dropdown-item py-3 border-bottom`}>\r\n                            <p className={`mb-0 fw-medium float-start`}> You have {notifications.length} notifications </p>\r\n                            <span className={`badge badge-pill badge-primary float-end`} onClick={clearNotification}> Clear all </span>\r\n                        </Link>\r\n                        {notifications.map( row => <Link className=\"dropdown-item preview-item py-2 position-relative\" key={row.id} data-id={row.id}>\r\n                            <div className=\"preview-thumbnail\"><i className=\"mdi mdi-alert m-auto text-primary\" /></div>\r\n                            <div className=\"preview-item-content\">\r\n                                <h5 className=\"preview-subject fw-normal text-dark mb-1\">{row.content}</h5>\r\n                                <p className=\"fw-light small-text mb-0\" />\r\n                            </div>\r\n                            <span onClick={removeNotification} data-id={row.id} className=\"fa fa-close align-items-center position-absolute align-self-center\" style={{right:20}} />\r\n                        </Link>)}\r\n                    </div>\r\n                </li>\r\n\r\n                <li className=\"nav-item dropdown d-none d-lg-block user-dropdown\">\r\n                    <Link className=\"nav-link\" id=\"UserDropdown\" to={\"#\"} data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        <img className={\"img-xs rounded-circle\"} src={profile} alt=\"\" /> \r\n                    </Link>\r\n                    <div className=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"UserDropdown\" style={{ borderRadius:8 }}>\r\n                        <div className=\"dropdown-header text-center\">\r\n                            <img className={\"img-md rounded-circle\"} src={profile} alt={''} />\r\n                            <p className=\"mb-1 mt-3 fw-semibold\"> default </p>\r\n                            <p className=\"fw-light text-muted mb-0\"> default </p>\r\n                        </div>\r\n                        <Link className=\"dropdown-item\">\r\n                            <i className=\"dropdown-item-icon mdi mdi-account-outline text-primary me-2\"/> \r\n                            My Profile <span className=\"badge badge-pill badge-danger\" />\r\n                        </Link>\r\n                        <Link className=\"dropdown-item d-flex\" style={{justifyContent:'space-between'}} to={\"#\"}>\r\n                            <div> \r\n                                <i className=\"dropdown-item-icon mdi mdi-cogs text-primary me-2\"/> Inventory \r\n                            </div>\r\n                            <div onClick={handleInventory}>\r\n                                <input type={`checkbox`} style={{display:'none'}} id={`btn1999`}\r\n                                checked={invent} onChange={()=>{}} className='status'/>\r\n                                <label htmlFor={`btn1999`} />\r\n                                <div className='plate'/>    \r\n                            </div> \r\n                        </Link>\r\n                        <Link to={`#`} className=\"dropdown-item cache-clear\" onClick={updateProducts}>\r\n                            <i className=\"dropdown-item-icon mdi mdi-refresh text-primary me-2\" /> \r\n                            Sync Products \r\n                        </Link>\r\n                        <Link className=\"dropdown-item\" to={\"#\"} onClick={logOut}>\r\n                            <i className=\"dropdown-item-icon mdi mdi-power text-primary me-2\"/> \r\n                            Sign Out\r\n                        </Link>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <button className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\" type=\"button\" data-bs-toggle=\"offcanvas\" >\r\n                <span className=\"mdi mdi-menu\" />\r\n            </button>\r\n        </div>\r\n        </nav>\r\n        {location.pathname.indexOf('/pos')!==-1 && focused && <SearchBoard pos={position.y} />}\r\n        <Modal isOpen={orderModal}>\r\n            <ModalHeader>\r\n                <p style={{fontSize:'1.5rem'}}>Previous Order Details</p>\r\n            </ModalHeader>\r\n            <ModalBody >\r\n                <div className=\"col-lg-12\" id=\"receipt\" >\r\n                    <div className=\"container\" style={{backgroundColor:'white',paddingBottom:'10px',borderRadius:'15px',fontSize:'larger'}} >\r\n                        <div className=\"row\" style={{display:'flex',fontSize:'larger'}}>\r\n                            <div className=\"d-grid\" style={{justifyContent:'center',textAlign:'center',width:'100%',display:'grid'}}>\r\n                                {false && <p style={{fontSize:'1.3rem',fontWeight:900}}> \r\n                                    <h1 style={{fontFamily:'fantasy'}}>INDIA GATE</h1> \r\n                                </p>}\r\n                                <img src={logo} alt='' style={{filter:\"grayscale(1)\"}} height={140} />\r\n                                <h2 className=\"sessionID\">#{sessionID}</h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\" ref={modalBody}>\r\n                            <div className=\"receipt\" style={{width:'100%',background:'#fff'}}>\r\n                                {orderProducts.map( (order,i) => <div key={i} className='row'style={chosenStyle} >\r\n                                        <div style={{display:'flex',width:'100%',justifyContent:'space-between'}}>\r\n                                            <b style={{fontSize:order.name.length > 35?'medium':'larger',fontWeight:900,maxWidth:'85%'}}>{order.name}</b>\r\n                                            <strong> Qty: {order.stock}</strong>\r\n                                        </div>\r\n                                        <div style={{display:'flex',width:'100%',justifyContent:'space-between'}}>\r\n                                            <p style={{fontSize:'large',fontWeight:900,marginTop:'.25rem'}}>\r\n                                                { currency +' '+ order.price }\r\n                                                { order.id !=='quick' && '/ Units'}  \r\n                                            </p>\r\n                                            <p style={{fontSize:'larger',fontWeight:900,marginTop:'.25rem'}}>\r\n                                                { currency +' '+ parseFloat(order.stock * order.price).toFixed(2) }\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div style={{display:'flex',justifyContent:'end',marginTop:'1rem'}}>\r\n                                        <div>\r\n                                            <h2> TOTAL </h2>\r\n                                        </div>\r\n                                        <div style={{marginLeft:15}}>\r\n                                            <h2> {currency + ' ' + parseFloat(total).toFixed(2) } </h2>\r\n                                            <p></p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div style={{justifyContent:'end',display:'flex',width:'100%'}}>\r\n                                        <small>&#x260E;: 070-3563062</small>\r\n                                    </div>\r\n                                    <div style={{textAlign:'right'}}> \r\n                                        <small><span style={{color:'black',fontSize:'2rem'}}>&#x1F6D2;</span>Hobbemaplein 50 <br/> 2526 JB Den Haag, Netherlands</small>\r\n                                    </div>\r\n                                </div>\r\n                                <center>\r\n                                    <b>Thank you! Visit Again!</b>\r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <button className='btn btn-light btn-rounded' onClick={()=> toggleOrderModal(!orderModal)}> Close </button>\r\n                <button className='btn btn-primary btn-rounded' onClick={printReceipt}>Print</button>\r\n            </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal isOpen={appModal} size='sm' fade={false}>\r\n            <Form onSubmit={updateProducts}>\r\n                <ModalHeader>\r\n                    Enter application key \r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Input onChange={e=> setKey(e.target.value)} defaultValue={key} type='text' name='appKey' onClick={(e)=>{\r\n                        setPosition({...position, y:e.target.getBoundingClientRect().y + 50})\r\n                        setFilling(true)\r\n                    }}/>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <button className='btn btn-light btn-sm btn-rounded' type='button' onClick={()=> {setAppModal(false);setFilling(false)}}>Cancel</button>\r\n                    <button className='btn btn-success btn-sm btn-rounded' > Submit </button>\r\n                </ModalFooter>\r\n            </Form>\r\n        </Modal>\r\n        {\r\n            filling && \r\n            <div className='mt-4 position-fixed w-50' style={{zIndex:9999, top:60 }}>\r\n            <div\r\n                style={{\r\n                    overflow: \"hidden\",\r\n                    position: \"relative\",\r\n                }}\r\n                onMouseMove={handleMouseMove}\r\n                onMouseUp={handleMouseUp}\r\n                >\r\n                <div\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: `${position.y}px`,\r\n                        left: `${position.x}px`,\r\n                        cursor: dragging ? \"grabbing\" : \"grab\",\r\n                        zIndex: 1000,\r\n                        width:700,\r\n                        transform: `scale(${scale})`, transformOrigin: \"top center\"\r\n                    }}\r\n                >\r\n                    <div\r\n                    onMouseDown={handleMouseDown}\r\n                        style={{\r\n                            background: \"#444\",\r\n                            color: \"#fff\",\r\n                            padding: \"5px 10px\",\r\n                            cursor: \"grab\",\r\n                            textAlign: \"center\",\r\n                            borderRadius: \"8px 8px 0 0\",\r\n                        }}\r\n                    >\r\n                        Hold To Drag \r\n                    </div>\r\n                        <Keyboard\r\n                            onChange={onChangeKey}\r\n                            onKeyPress={(e) => {\r\n                                if(e === \"{lock}\")\r\n                                {\r\n                                    setLayout((prev) => (prev === \"default\" ? \"shift\" : \"default\"))\r\n                                }\r\n                            }}\r\n                            keyboardRef={(r) => (keyboardRef.current = r)}\r\n                            layout={{\r\n                                default: [\r\n                                    \"1 2 3 4 5 6 7 8 9 0\",\r\n                                    \"q w e r t y u i o p\",\r\n                                    \"{lock} a s d f g h j k l\",\r\n                                    \"z x c v b n m {bksp}\",\r\n                                    \"{space}\"\r\n                                ],\r\n                                shift: [\r\n                                    \"1 2 3 4 5 6 7 8 9 0\",\r\n                                    \"Q W E R T Y U I O P\",\r\n                                    \"{lock} A S D F G H J K L\",\r\n                                    \"Z X C V B N M {bksp}\",\r\n                                    \"{space}\"\r\n                                ]\r\n                            }}\r\n                            layoutName={layoutName}\r\n                        />\r\n                    <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                        <button className='btn btn-light btn-rounded' onClick={()=>{\r\n                            setKey('')\r\n                            keyboardRef.current.clearInput()\r\n                        }} style={{border:'1px solid gray'}}>CLEAR</button>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={decrease}>-</button>\r\n                        <span style={{placeContent:'center'}}> {Math.round(scale * 100)}% </span>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={increase}>+</button>\r\n                        <button onClick={()=>setFilling('')} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        }\r\n\r\n    </>\r\n    )\r\n}\r\n\r\nexport default memo(Navbar)","import { Outlet, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\"; \r\nimport { useEffect, useState } from \"react\";\r\nimport Loader from \"react-js-loader\";\r\nimport { Toaster } from \"react-hot-toast\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst FullLayout = () => { \r\n\r\n    let navigate = useNavigate();\r\n    let location = useLocation();\r\n    const { userToken } = useSelector(state=>state.auth);\r\n    let isLoading = useSelector( state => state.auth.loading);\r\n    let isLoggedIn = userToken;\r\n    const [ loading, setLoading] = useState(isLoading);\r\n\r\n    useEffect(()=> {  \r\n        setLoading(isLoading)\r\n        return ()=>null\r\n    },[userToken , isLoading, navigate ])\r\n\r\n    return (\r\n    <>\r\n        <Toaster/>\t \r\n        <div className={`${loading?'layout-item':\"layout-item d-none\"}`}> \r\n            <Loader type=\"spinner-default\" bgColor={'gray'} color={'white'} size={70}/>\r\n        </div>\r\n        { isLoggedIn && <Navbar/> }\r\n        <div className={`container1 page-body-wrapper w-100 ${location.pathname==='/dashboard'? 'home':''}  `} >\r\n            <div className={`${['/pos','/pos/customer','/pos/'].includes(location.pathname)? 'pos-panel':'main-panel'} w-100 ${location.pathname==='/login'?'login':''} ${location.pathname.indexOf('payment')!==-1 ? 'payment-screen':''}`} >\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default FullLayout;","import React, { useRef, useState } from 'react';\r\nimport Keyboard from \"react-simple-keyboard\";\r\nimport \"react-simple-keyboard/build/css/index.css\";\r\nimport { useSearch } from '../../contexts/SearchContext';\r\n\r\nexport default function SearchBoard({pos=window.screen.availHeight / 3}) {\r\n\r\n    const {setSearchQuery, focused, setFocused} = useSearch();\r\n    const [position, setPosition] = useState({x: window.screen.availWidth / 3, y: pos });\r\n    const [dragging, setDragging] = useState(false);\r\n    const [offset, setOffset] = useState({  x: 0, y: 0  });\r\n    const onChange = input => setSearchQuery(input)\r\n    const keyboardRef = useRef(null);\r\n    const handleMouseDown = (e) => {\r\n        setDragging(true);\r\n        setOffset({\r\n          x: e.clientX - position.x,\r\n          y: e.clientY - position.y,\r\n        });\r\n    };\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (!dragging) return;\r\n        setPosition({\r\n            x: e.clientX - offset.x,\r\n            y: e.clientY - offset.y,\r\n        });\r\n    }\r\n    const handleMouseUp = () => setDragging(false);\r\n    // handling size \r\n    const [scale, setScale] = useState(localStorage.getItem('_keyboard_scale')??1); // Default scale (1 = 100%)\r\n\r\n    const decrease = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.max(scale - 0.1, 0.5))\r\n        setScale(prev => Math.max(prev - 0.1, 0.5))\r\n    }\r\n    const increase = () => {\r\n        localStorage.setItem('_keyboard_scale', Math.min(JSON.parse(scale) + 0.1, 2))\r\n        setScale(prev => Math.min(JSON.parse(prev) + 0.1, 2))\r\n    }\r\n\r\n    return (\r\n        <div className='mt-4 position-fixed w-50 v-keyboard' style={{zIndex:9999, top:60 }}>\r\n            <div\r\n                style={{\r\n                    overflow: \"hidden\",\r\n                    position: \"relative\",\r\n                }}\r\n                onMouseMove={handleMouseMove}\r\n                onMouseUp={handleMouseUp}\r\n            >\r\n                <div\r\n                    style={{\r\n                        position: \"fixed\",\r\n                        top: `${position.y}px`,\r\n                        left: `${position.x}px`,\r\n                        cursor: dragging ? \"grabbing\" : \"grab\",\r\n                        zIndex: 1000,\r\n                        width:700,\r\n                        resize:'both',\r\n                        overflow:'auto',\r\n                        transform: `scale(${scale})`, transformOrigin: \"top center\"\r\n                    }}\r\n                >\r\n                    <div\r\n                    onMouseDown={handleMouseDown}\r\n                        style={{\r\n                            background: \"#444\",\r\n                            color: \"#fff\",\r\n                            padding: 10,\r\n                            cursor: \"grab\",\r\n                            textAlign: \"center\",\r\n                            borderRadius: \"8px 8px 0 0\",\r\n                        }}\r\n                    >\r\n                        Hold To Drag \r\n                    </div>\r\n                        <Keyboard\r\n                            onChange={onChange}\r\n                            keyboardRef={(r) => (keyboardRef.current = r)}\r\n                            layout={{\r\n                                default: [\r\n                                \"1 2 3 4 5 6 7 8 9 0\",\r\n                                \"q w e r t y u i o p\",\r\n                                \"a s d f g h j k l\",\r\n                                \"z x c v b n m {bksp}\",\r\n                                \"{space}\"\r\n                            ]}}\r\n                        />\r\n                    <div className='bg-white d-flex board-navs' style={{justifyContent:'space-between',padding:'5px 20px'}}>\r\n                        <button className='btn btn-light btn-rounded' \r\n                            onClick={()=>{setSearchQuery('');keyboardRef.current.clearInput()}} \r\n                            style={{border:'1px solid gray'}}>CLEAR</button>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={decrease}>-</button>\r\n                        <span className='place-content-center'> {Math.round(scale * 100)}% </span>\r\n                        <button style={{border:'1px solid'}} className='btn btn-light btn-rounded' onClick={increase}>+</button>\r\n                        <button onClick={()=>setFocused(!focused)} className='btn btn-light btn-rounded' style={{border:'1px solid gray'}}>HIDE</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import $ from 'jquery'\r\nimport toast from 'react-hot-toast';\r\nconst daysOfWeek = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nexport const validate = (fields,exceptions=[]) => {\r\n    let result={}\r\n    var shouldGo=true;\r\n    if(exceptions.length)\r\n    {\r\n        exceptions.forEach( item => {\r\n            delete fields[item]\r\n        })\r\n    }\r\n    Object.keys(fields).forEach(f =>\r\n    {\r\n        let shout = '';\r\n        let invalid = false;\r\n        let tInputs = [$(`input[name=${f}]`), $(`select[name=${f}]`), $(`textarea[name=${f}]`), $(`.${f}`)]\r\n        if(fields[f]==null || fields[f].length===0)\r\n        {\r\n            result[f]=`Required!`;\r\n            shouldGo=false;\r\n            invalid = true;\r\n        }\r\n        tInputs.forEach( input => {\r\n\r\n            let minLength = $(input).attr('type')!== 'date' ? $(input).attr('min'): 0;\r\n            let maxLength = $(input).attr('max');\r\n            let type = $(input).attr('cast');\r\n            let isDate = $(input).attr('type')==='date' && $(input).attr('req');\r\n            if($(input).val()?.length && (minLength || maxLength))\r\n            {\r\n                if($(input).val().length < parseInt(minLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should be of at least ${minLength} characters!`\r\n                    result[f] = shout;\r\n                }\r\n                if($(input).val().length > parseInt(maxLength))\r\n                { \r\n                    invalid = true;\r\n                    shout = `Should not be greater than ${maxLength} characters!`;\r\n                    result[f] = shout;\r\n                }\r\n            }\r\n            if(type)\r\n            { \r\n                if(input.val() && type === 'num')\r\n                {\r\n                    if(parseInt($(input).val().length )!== $(input).val().length) {\r\n                        shout= `Should be in numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n                if( $(input).val() && type=== 'str' )\r\n                {\r\n                    if( /^([^0-9]*)$/.test($(input).val())===false )\r\n                    {\r\n                        shout= `Should not contain numbers!`;\r\n                        invalid = true;\r\n                        result[f]= shout; \r\n                    }\r\n                }\r\n            }\r\n            if(isDate)\r\n            {\r\n                if(!isValidDate($(input).val(),18))\r\n                {\r\n                    invalid = true\r\n                    shout = 'Invalid date';\r\n                    result[f] = shout;\r\n                } else {\r\n                    shout = '';\r\n                }\r\n                // return\r\n            }\r\n            if(shout)   \r\n            {\r\n                if($(input).parents('.col-md-12, .col').find('small.text-danger').length)\r\n                {\r\n                    $(input).parents('.col-md-12, .col').find('small.text-danger').text(shout)\r\n                } else {\r\n                    $(input).parents('.col-md-12, .col').append('<small class=\"text-danger\">'+shout+'</small>')\r\n                }\r\n            } else {\r\n                $(input).parents('.col-md-12, .col').find('small.text-danger').remove()\r\n            }\r\n            if(invalid){\r\n                shouldGo = false;\r\n                $(input).addClass('placeholder-error')\r\n                .attr('placeholder',result[f]).css('border','1px solid red');\r\n            } else {\r\n                $(input).removeClass('placeholder-error').attr('placeholder',result[f]).css('border','');\r\n            }\r\n        })\r\n    })\r\n    return {result, shouldGo};\r\n}\r\n\r\nexport const getCurrentDate = (delimiter='-') => {\r\n    const today = new Date();\r\n    const year = today.getFullYear();\r\n    const month = String(today.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    return `${year+delimiter+month+delimiter+day}`;\r\n}\r\n\r\nexport const formatDate = (date=null,format='Ymd') => {\r\n    const dateObj = date?new Date(date): new Date();\r\n    const year = dateObj.getFullYear();\r\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0'); // Months are 0-based\r\n    const day = String(dateObj.getDate()).padStart(2, '0');\r\n    if(format[0]==='Y')\r\n    {\r\n        return `${year}-${month}-${day}`;\r\n    }\r\n    if(format[0]==='d')\r\n    {\r\n        return `${day}-${month}-${year}`;\r\n    }\r\n}\r\n\r\nexport const getCurrentDay = () => {\r\n    return daysOfWeek[(new Date()).getDay()];\r\n}\r\n\r\nexport const getCurrentTime = () => {\r\n    const currentDate = new Date();\r\n    const hours = String(currentDate.getHours()).padStart(2, '0');\r\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\r\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\r\n    return `${hours}:${minutes}:${seconds}`;\r\n}\r\nexport const toBase64 = blob => {\r\n\r\n}\r\n\r\nexport const dataURLtoFile = (dataurl, filename) => {\r\n    var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[arr.length - 1]), \r\n        n = bstr.length, \r\n        u8arr = new Uint8Array(n);\r\n    while(n--){\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\nexport const isValidDate = ( date, range ) => {\r\n    let today = getCurrentDate();\r\n    let year = today.split('-')[0];\r\n    let intended = new Date(today.replace(year, (parseInt(year)-range)));\r\n    return intended > new Date(date)\r\n}\r\n\r\nexport const capitalFirst = (string) => {\r\n    if (!string) return string; // Handle empty or null strings\r\n    if(string.includes(' ')){\r\n        let str= '';\r\n        string.split(' ').forEach( part => {\r\n           str+=' '+ part.charAt(0).toUpperCase() + part.slice(1); \r\n        })\r\n        return str;\r\n    }\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport const getDocumentName = id => {\r\n\r\n    const documents = {\r\n        1 : 'VISIT PHOTO',\r\n        2 : 'AADHAAR CARD',\r\n        3 : 'VOTER CARD',\r\n        4 : 'GROUP PHOTO',\r\n        5 : 'CGT_FIRST',\r\n        6 : 'CGT_SECOND',\r\n        7 : 'CIBIL',\r\n        8 : 'SANCTION LETTER',\r\n        9 : 'KYC',\r\n        10 : 'BANK PASSBOOK',\r\n        11 : 'RELATION PROOF DOCUMENT',\r\n    }\r\n    return documents[id];\r\n    \r\n}\r\n\r\nexport const Warning = msg => {\r\n    return toast(msg,\r\n        {\r\n          icon: '⚠️',\r\n          style: {\r\n            borderRadius: '10px',\r\n            background: '#333',\r\n            color: '#fff',\r\n          },\r\n        }\r\n    );\r\n}\r\n\r\nexport const hexToRgb = (hex) => {\r\n    // Remove the '#' if present\r\n\r\n    if(!hex || typeof hex == 'object'){\r\n        return hex\r\n    }\r\n\r\n    hex = hex.replace(/^#/, '');\r\n    // Convert shorthand hex (e.g., #03F) to full form (e.g., #0033FF)\r\n    if (hex.length === 3) {\r\n        hex = hex.split('').map(h => h + h).join('');\r\n    }\r\n    // Convert hex to RGB\r\n    const r = parseInt(hex.slice(0, 2), 16);\r\n    const g = parseInt(hex.slice(2, 4), 16);\r\n    const b = parseInt(hex.slice(4, 6), 16);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport const isColorDark = (hexColor) => {\r\n    // Convert hex color to RGB\r\n    let output = hexToRgb(hexColor)\r\n    if(output === undefined) return hexColor\r\n    const { r, g, b } = output\r\n\r\n    // Calculate the luminance\r\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n\r\n    // Return true if the color is dark, else false\r\n    return luminance < 128;\r\n}\r\n\r\nexport function chunk(array, size, uncategorized = false) {\r\n    const result = [];\r\n    if(!array) return []\r\n    if(uncategorized) array.unshift({})\r\n    for (let i = 0; i < array.length; i += size) {\r\n        // Use slice to get a chunk of the specified size and push it to the result array\r\n        result.push(array.slice(i, i + size));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const wrapText = (text, maxLength) => {\r\n\r\n    if (text?.length > maxLength) {\r\n        let truncatedText = text.substring(0, maxLength) + '...';\r\n        return truncatedText;\r\n    }\r\n    return text\r\n}\r\n\r\nexport const formatDatefromTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-based\r\n    const day = String(date.getDate()).padStart(2, '0');\r\n    const hours = String(date.getHours()).padStart(2, '0');\r\n    const minutes = String(date.getMinutes()).padStart(2, '0');\r\n    const seconds = String(date.getSeconds()).padStart(2, '0');\r\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n};\r\n  "],"names":["Navbar","_localStorage$getItem","_data$notifications","headers","localStorage","getItem","filling","setFilling","useState","params","useParams","data","useGetNotificationsQuery","position","setPosition","x","window","screen","availWidth","y","availHeight","dragging","setDragging","offset","setOffset","layoutName","setLayout","keyboardRef","useRef","scale","setScale","chosenStyle","marginTop","alignItems","borderRadius","minHeight","border","backgroundColor","removeNotification","e","stopPropagation","preventDefault","id","target","dataset","axios","get","concat","then","_ref","console","log","status","dispatch","commonApiSlice","util","updateQueryData","undefined","cache","notifications","filter","item","parseInt","setNotifications","useEffect","_data$notifications2","modalBody","location","useLocation","setSearchQuery","searchQuery","sessions","setSession","activeSession","setActiveSession","displayImage","handleImageDisplay","sale","setType","setFocused","focused","useSearch","appModal","setAppModal","notHome","pathname","cartProducts","split","splitStat","currency","appKey","inventory","useSelector","state","auth","invent","setInvent","key","setKey","orderModal","toggleOrderModal","total","setTotal","sessionID","setSessionID","orderProducts","setOrderProducts","useDispatch","navigate","useNavigate","updateProducts","async","tKey","type","payload","toast","success","message","fd","FormData","midFile","dataURLtoFile","file","append","resp","post","setTimeout","reload","error","_jsxs","_Fragment","children","className","style","zIndex","_jsx","Link","to","width","indexOf","onClick","fontSize","now","setItem","includes","handleSession","_window$electronAPI2","electronAPI","reloadWindow","JSON","stringify","length","map","_window$electronAPI3","btn","document","querySelector","classList","contains","title","lastOrder","_ref3","_sessionData$products","products","session","sessionData","parse","order","amount","session_id","cash_register_id","orderedProducts","Object","values","pr","_objectSpread","stock","quantity","overallExcept","reduce","pre","a","parseFloat","price","otherPrice","name","catch","finally","_cartProducts$activeS","other","weight","getBoundingClientRect","action","value","placeholder","borderBottom","paddingLeft","cursor","outline","onInput","href","_ref2","row","content","right","src","profile","alt","justifyContent","er","display","checked","onChange","htmlFor","SearchBoard","pos","Modal","isOpen","ModalHeader","ModalBody","paddingBottom","textAlign","logo","height","ref","background","i","fontWeight","maxWidth","toFixed","marginLeft","color","ModalFooter","elem","current","_window$electronAPI","printContent","html","innerHTML","Warning","size","fade","Form","onSubmit","Input","defaultValue","top","overflow","onMouseMove","clientX","clientY","onMouseUp","handleMouseUp","left","transform","transformOrigin","onMouseDown","padding","Keyboard","input","onKeyPress","prev","r","layout","default","shift","clearInput","decrease","Math","max","placeContent","round","increase","min","memo","FullLayout","userToken","isLoading","loading","isLoggedIn","setLoading","Toaster","Loader","bgColor","Outlet","resize","dataurl","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","capitalFirst","string","str","forEach","part","charAt","toUpperCase","slice","msg","icon","hexToRgb","hex","replace","h","join","g","b","isColorDark","hexColor","output","chunk","array","result","arguments","unshift","push","wrapText","text","maxLength","substring","formatDatefromTimestamp","timestamp","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","getSeconds"],"sourceRoot":""}